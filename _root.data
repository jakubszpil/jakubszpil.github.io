[{"_1":2},"routes/home",{"_3":4},"data",{"_5":6,"_62":63,"_233":234},"articles",[7,35,51],{"_8":9,"_10":11,"_12":13,"_22":23,"_24":25,"_26":27,"_28":29,"_30":31,"_32":33,"_34":-7},"title","Framework na 70 linii, czyli implementacja Signal API od zera","description","Dowiedz siƒô, jak zaimplementowaƒá minimalistyczny system reaktywny (Signal API) w JavaScript/TypeScript w mniej ni≈º 70 liniach kodu. Praktyczny przewodnik krok po kroku.","keywords",[14,15,16,17,18,19,20,21],"signal","reactive","javascript","typescript","frontend","framework","architektura","blog","categories",[17],"createdAt",["D",1750550400000],"id","cdd39180-49ff-481a-9b0a-5e34e00b7235","slug","framework-na-70-linii-czyli-implementacja-signal-api-od-zera","content","","resourceUrl","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/articles/framework-na-70-linii-czyli-implementacja-signal-api-od-zera.md","quiz",{"_8":36,"_10":37,"_12":38,"_22":44,"_24":47,"_26":48,"_28":49,"_30":31,"_32":50,"_34":-7},"Proste deployowanie przy u≈ºyciu GitHub Actions","Dowiedz siƒô, jak wdro≈ºyƒá dowolnƒÖ aplikacjƒô za pomocƒÖ GitHub Actions w prosty i automatyczny spos√≥b.",[39,40,41,42,43,21],"react","github actions","deployment","CI/CD","automatyzacja",[45,46],"devops","ci",["D",1741996800000],"d04e0b5c-7ae9-4f4b-953b-c5426438cb57","deployment-github-actions","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/articles/deployment-github-actions.md",{"_8":52,"_10":53,"_12":54,"_22":56,"_24":58,"_26":59,"_28":60,"_30":31,"_32":61,"_34":-7},"Szczepienie kodu, czyli jak Typescript radzi sobie z Dependency Injection","Dependency Injection (DI) to wzorzec projektowy stosowany w celu zwiƒôkszenia modularno≈õci i testowalno≈õci kodu. Umo≈ºliwia to oddzielenie tworzenia obiekt√≥w od ich u≈ºywania, co prowadzi do lepszej separacji odpowiedzialno≈õci i ≈Çatwiejszego zarzƒÖdzania zale≈ºno≈õciami. W TypeScript, DI mo≈ºna zaimplementowaƒá na kilka sposob√≥w, w tym za funkcji wstrzykujƒÖcych, kt√≥re sƒÖ odpowiedzialne za tworzenie i wstrzykiwanie zale≈ºno≈õci. Przyjrzyjmy siƒô, jak mo≈ºna zaimplementowaƒá DI w TypeScript z wykorzystaniem prostych przyk≈Çad√≥w.",[17,55,16,21],"wzorce projektowe",[17,57],"wzorce-projektowe",["D",1718841600000],"06faef94-9fab-486e-aae2-397a85c9cc17","dependency-injection-kontra-typescript","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/articles/dependency-injection-kontra-typescript.md","courses",[64,128,186],{"_8":65,"_10":66,"_12":67,"_22":71,"_24":73,"_34":74,"_26":125,"_28":126,"_30":31,"_32":127},"Wprowadzenie do TypeScript","Dowiedz siƒô czym jest TypeScript, jak zaczƒÖƒá z niego korzystaƒá i dlaczego warto go u≈ºywaƒá w swoich projektach. Przystƒôpny przewodnik dla poczƒÖtkujƒÖcych z przyk≈Çadami i praktycznymi wskaz√≥wkami.",[17,16,68,18,69,70],"programowanie","typowanie","learning",[72,17],"wprowadzenie",["D",1750636800000],{"_8":75,"_76":77},"Quiz: Podstawy TypeScript","questions",[78,91,100,108,117],{"_79":80,"_81":82,"_87":88,"_89":90},"question","<p>Czym jest TypeScript?</p>","options",[83,84,85,86],"Systemem szablon√≥w HTML","Rozszerzeniem JavaScriptu o typowanie statyczne","Jƒôzykiem bazujƒÖcym na Pythonie","Frameworkiem CSS","answer",1,"explanation","TypeScript rozszerza JavaScript o typowanie statyczne i inne narzƒôdzia dla programist√≥w.",{"_79":92,"_81":93,"_87":98,"_89":99},"<p>Jakie rozszerzenie majƒÖ pliki natywne TypeScript?</p>",[94,95,96,97],".json",".js",".cts",".ts",3,"Standardowe pliki TypeScript majƒÖ rozszerzenie `.ts`. Natomiast w React u≈ºywamy te≈º `.tsx`.",{"_79":101,"_81":102,"_87":88,"_89":107},"<p>Kt√≥re z poni≈ºszych typowa≈Ñ zmiennej jest poprawne w TypeScript?</p>",[103,104,105,106],"let liczba = number 10;","let liczba: number = 10;","let liczba: 10 = number;","var liczba: num = 10;","Poprawna sk≈Çadnia to let liczba: number = 10;",{"_79":109,"_81":110,"_87":115,"_89":116},"<p>Czym r√≥≈ºni siƒô TypeScript od JavaScript?</p>",[111,112,113,114],"TypeScript ma statyczne typowanie, JavaScript nie","JavaScript nie pozwala na funkcje","TypeScript dzia≈Ça tylko w przeglƒÖdarce","TypeScript nie obs≈Çuguje klas",0,"Najwa≈ºniejsza r√≥≈ºnica to typowanie statyczne i kompilacja do JS.",{"_79":118,"_81":119,"_87":88,"_89":124},"<p>Jak zainstalowaƒá TypeScript globalnie przez npm?</p>",[120,121,122,123],"npm get typescript","npm install -g typescript","npm add global typescript","npm install typescript","Polecenie npm install -g typescript instaluje TypeScript globalnie.","4c1f9026-2168-49fc-8cf1-0d1480eae1c2","wprowadzenie-do-typescript","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/wprowadzenie-do-typescript.md",{"_8":129,"_10":130,"_12":131,"_22":137,"_24":138,"_34":139,"_26":183,"_28":184,"_30":31,"_32":185},"Pierwsze kroki z TypeScript w React ‚Äì praktyczne podstawy","Zrozum podstawy TypeScript w ≈õrodowisku React ‚Äì prostym jƒôzykiem i na praktycznych przyk≈Çadach.",[17,39,18,132,133,134,135,136,70],"nauka","komponenty","props","state","kurs",[17,39],["D",1750550400000],{"_8":140,"_76":141},"Quiz: TypeScript w React ‚Äì podstawy",[142,151,159,167,175],{"_79":143,"_81":144,"_87":149,"_89":150},"<p>Kt√≥re zdanie najlepiej opisuje g≈Ç√≥wnƒÖ zaletƒô TypeScript w projektach React?</p>",[145,146,147,148],"Generuje automatycznie dokumentacjƒô komponent√≥w.","Zamienia kod na czysty CSS.","Pozwala na typowanie props√≥w i stanu, zwiƒôkszajƒÖc bezpiecze≈Ñstwo kodu.","Eliminuje konieczno≈õƒá u≈ºywania npm.",2,"NajwiƒôkszƒÖ zaletƒÖ jest wprowadzenie typ√≥w w propsach, stanie i API komponent√≥w.",{"_79":152,"_81":153,"_87":149,"_89":158},"<p>Jak poprawnie zadeklarowaƒá stan liczbowy w komponencie funkcyjnym z u≈ºyciem useState?</p>",[154,155,156,157],"const [count, setCount] = useState<string>(0);","let count = useState(0);","const [count, setCount] = useState<number>(0);","const [count, setCount] = useState(0: number);","Poprawna sk≈Çadnia to useState<number>(0).",{"_79":160,"_81":161,"_87":88,"_89":166},"<p>Jak opisaƒá typ props√≥w w komponencie funkcyjnym?</p>",[162,163,164,165],"Nie trzeba typowaƒá props√≥w w TS.","Przez interface lub type i przekazaƒá go do props√≥w funkcji.","Tylko poprzez klasƒô.","Wy≈ÇƒÖcznie przez any.","Propsy typujemy przez interface lub type i u≈ºywamy ich w definicji funkcji.",{"_79":168,"_81":169,"_87":115,"_89":174},"<p>Kt√≥ry kod prawid≈Çowo typuje referencjƒô do przycisku?</p>",[170,171,172,173],"const ref = useRef<HTMLButtonElement>(null);","const ref = useRef(null);","const ref = useRef<HTMLDivElement>(null);","const ref = useRef<Button>(null);","Poprawny typ dla referencji do buttona to HTMLButtonElement.",{"_79":176,"_81":177,"_87":115,"_89":182},"<p>Co wy≈õwietli poni≈ºszy komponent?</p>\n<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">WelcomeProps</span> = { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span> };\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">Welcome</span> = (<span class=\"hljs-params\">{ name }: <span class=\"hljs-title class_\">WelcomeProps</span></span>) => <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Cze≈õƒá, {name}!<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span></span>;\n</code></pre>\n<p>Je≈õli wywo≈Çasz <code>&#x3C;Welcome name=\"Ala\" /></code></p>",[178,179,180,181],"Cze≈õƒá, Ala!","Witaj, Ala!","B≈ÇƒÖd kompilacji","undefined","Komponent wy≈õwietli 'Cze≈õƒá, Ala!'.","9f55f24b-4dde-445a-b38b-f9651ae2bb4e","pierwsze-kroki-z-typescript-w-react","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/pierwsze-kroki-z-typescript-w-react.md",{"_8":187,"_10":188,"_12":189,"_22":191,"_24":192,"_34":193,"_26":231,"_28":57,"_30":31,"_32":232},"Wzorce projektowe w praktyce","Kompleksowy przewodnik po wzorcach projektowych ‚Äî od podstaw po praktyczne przyk≈Çady w kontek≈õcie frontendu i backendu.",[55,68,17,16,18,190,136,70],"backend",[57,17],["D",1750550400000],{"_8":194,"_76":195},"Quiz: Wzorce projektowe",[196,204,212,218,226],{"_79":197,"_81":198,"_87":115,"_89":203},"<p>Do kt√≥rej grupy nale≈ºy wzorzec Singleton?</p>",[199,200,201,202],"Kreacyjne","Funkcyjne","Behawioralne","Strukturalne","Singleton to wzorzec kreacyjny ‚Äì dotyczy sposobu tworzenia obiekt√≥w.",{"_79":205,"_81":206,"_87":88,"_89":211},"<p>Kt√≥ry wzorzec umo≈ºliwia zamianƒô jednego interfejsu na inny, by umo≈ºliwiƒá wsp√≥≈Çpracƒô niekompatybilnych klas?</p>",[207,208,209,210],"Builder","Adapter","Facade","Observer","Adapter t≈Çumaczy jeden interfejs na inny.",{"_79":213,"_81":214,"_87":115,"_89":217},"<p>Kt√≥ry wzorzec pozwala powiadamiaƒá wiele obiekt√≥w o zmianie stanu bez ≈õcis≈Çego powiƒÖzania?</p>",[210,215,209,216],"Strategy","Factory","Observer s≈Çu≈ºy do powiadamiania wielu obiekt√≥w o zmianie stanu.",{"_79":219,"_81":220,"_87":149,"_89":225},"<p>Co umo≈ºliwia wzorzec Strategy?</p>",[221,222,223,224],"Uproszczenie z≈Ço≈ºonego interfejsu","Budowanie z≈Ço≈ºonych obiekt√≥w krok po kroku","DynamicznƒÖ zmianƒô algorytmu dzia≈Çania programu","Tworzenie jednej instancji klasy","Strategy pozwala dynamicznie zmieniaƒá algorytm dzia≈Çania programu.",{"_79":227,"_81":228,"_87":115,"_89":230},"<p>Kt√≥ry wzorzec stosujesz, by upro≈õciƒá korzystanie z kilku skomplikowanych system√≥w przez jeden prosty interfejs?</p>",[209,208,229,207],"Singleton","Facade upraszcza z≈Ço≈ºone systemy przez prosty interfejs.","35b7e7d3-f0fe-4330-8bcb-3dd34bd40555","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/wzorce-projektowe.md","projects",[235,253,264],{"_8":236,"_10":237,"_12":238,"_245":246,"_24":247,"_248":249,"_26":250,"_28":251,"_30":31,"_32":252,"_34":-7},"üë• Team Support","Aplikacja usprawniajƒÖca pracƒô zespo≈Çu. Pozwala na zarzƒÖdzanie zespo≈Çami i u≈ºytkownikami, monitorowanie zadaniami i przypisywanie ich do konkretnych os√≥b bƒÖd≈∫ podzespo≈Ç√≥w.",[17,239,240,39,241,242,243,244],"e-commerce","projekt","react-router","auth","crud","portfolio","technologies",[17,39,241],["D",1742601600000],"status","IN_PROGRESS","782c5c2e-3012-4a43-b4ac-2c75b557bb9a","team-support","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/projects/team-support.md",{"_8":254,"_10":255,"_12":256,"_245":259,"_24":260,"_248":249,"_26":261,"_28":262,"_30":31,"_32":263,"_34":-7},"ü©∫ E-Przychodnia","Aplikacja typu e-commerce majƒÖca na celu u≈Çatwienie korzystania z dobrodziejstw s≈Çu≈ºby zdrowia. All-in-one, znajdziesz tutaj mo≈ºliwo≈õƒá umawiania wizyt, wyszukiwania najbli≈ºszych plac√≥wek zdrowia, podglƒÖd skierowa≈Ñ i recept i wiele innych opcji.",[17,239,240,257,258,243,244],"angular","nestjs",[17,257,258],["D",1740787200000],"0425fa94-8a6d-4f73-b097-5aacb29845ff","e-przychodnia","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/projects/e-przychodnia.md",{"_8":265,"_10":266,"_12":267,"_245":272,"_24":273,"_248":274,"_26":275,"_28":276,"_30":31,"_32":277,"_34":-7},"üîë Password Generator","Aplikacja do generowania has≈Ça, wedle podanych wytycznych.",[17,268,269,270,271,244],"aplikacja","has≈Ço","password","generowanie",[17],["D",1740787200000],"COMPLETED","de5d1213-2c8f-46d0-a316-91ff5a6f0333","password-generator","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/projects/password-generator.md"]
