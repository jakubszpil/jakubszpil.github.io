[{"_1":2},"routes/home",{"_3":4},"data",{"_5":6,"_65":66,"_257":258},"articles",[7,37,54],{"_8":9,"_10":11,"_12":13,"_22":23,"_24":25,"_26":27,"_28":29,"_30":31,"_32":33,"_34":-7,"_35":36},"title","Framework na 70 linii, czyli implementacja Signal API od zera","description","Dowiedz się, jak zaimplementować minimalistyczny system reaktywny (Signal API) w JavaScript/TypeScript w mniej niż 70 liniach kodu. Praktyczny przewodnik krok po kroku.","keywords",[14,15,16,17,18,19,20,21],"signal","reactive","javascript","typescript","frontend","framework","architektura","blog","categories",[17],"createdAt",["D",1750550400000],"id","9a1582ae-072a-4707-87b2-8c979ccd23e6","slug","framework-na-70-linii-czyli-implementacja-signal-api-od-zera","content","","resourceUrl","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/articles/framework-na-70-linii-czyli-implementacja-signal-api-od-zera.md","quiz","readingTime","3 minuty",{"_8":38,"_10":39,"_12":40,"_22":46,"_24":49,"_26":50,"_28":51,"_30":31,"_32":52,"_34":-7,"_35":53},"Proste deployowanie przy użyciu GitHub Actions","Dowiedz się, jak wdrożyć dowolną aplikację za pomocą GitHub Actions w prosty i automatyczny sposób.",[41,42,43,44,45,21],"react","github actions","deployment","CI/CD","automatyzacja",[47,48],"devops","ci",["D",1741996800000],"a30a70ae-6473-4bc1-ad07-81adb22c188a","deployment-github-actions","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/articles/deployment-github-actions.md","2 minuty",{"_8":55,"_10":56,"_12":57,"_22":59,"_24":61,"_26":62,"_28":63,"_30":31,"_32":64,"_34":-7,"_35":36},"Szczepienie kodu, czyli jak Typescript radzi sobie z Dependency Injection","Dependency Injection (DI) to wzorzec projektowy stosowany w celu zwiększenia modularności i testowalności kodu. Umożliwia to oddzielenie tworzenia obiektów od ich używania, co prowadzi do lepszej separacji odpowiedzialności i łatwiejszego zarządzania zależnościami. W TypeScript, DI można zaimplementować na kilka sposobów, w tym za funkcji wstrzykujących, które są odpowiedzialne za tworzenie i wstrzykiwanie zależności. Przyjrzyjmy się, jak można zaimplementować DI w TypeScript z wykorzystaniem prostych przykładów.",[17,58,16,21],"wzorce projektowe",[17,60],"wzorce-projektowe",["D",1718841600000],"d08afa19-416e-47df-bc49-de5bd86ace46","dependency-injection-kontra-typescript","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/articles/dependency-injection-kontra-typescript.md","courses",[67,140,199],{"_8":68,"_10":69,"_12":70,"_22":81,"_24":83,"_34":84,"_26":136,"_28":137,"_30":31,"_32":138,"_35":139},"Bezpieczeństwo baz danych","Dowiedz się, jak chronić bazę danych przed atakami, utratą danych i nieautoryzowanym dostępem. Poznaj najlepsze praktyki, typowe zagrożenia, narzędzia i praktyczne przykłady zabezpieczania baz danych. Kurs dla każdego, kto zarządza danymi.",[71,72,73,74,75,76,77,78,79,80],"bezpieczeństwo","baza danych","ochrona","uprawnienia","backup","sql injection","szyfrowanie","audyt","praktyka","learning",[82],"bazy-danych",["D",1751673600000],{"_8":85,"_86":87},"Quiz: Bezpieczeństwo baz danych","questions",[88,101,110,119,128],{"_89":90,"_91":92,"_97":98,"_99":100},"question","<p>Czym jest SQL Injection?</p>","options",[93,94,95,96],"Funkcją przyspieszającą zapytania","Legalnym sposobem na szybkie pobieranie danych","Rodzajem ataku polegającym na wstrzykiwaniu złośliwych zapytań SQL","Metodą szyfrowania bazy danych","answer",2,"explanation","SQL Injection to atak polegający na wstrzyknięciu złośliwego kodu SQL przez podatne zapytania.",{"_89":102,"_91":103,"_97":108,"_99":109},"<p>Dlaczego warto regularnie wykonywać kopie zapasowe bazy danych?</p>",[104,105,106,107],"Aby przyspieszyć działanie bazy","Aby móc przywrócić dane w razie awarii, ataku lub błędu","Aby zwiększyć liczbę użytkowników","Aby mieć więcej kopii danych do analizy",1,"Kopie zapasowe pozwalają odtworzyć dane po awarii lub ataku.",{"_89":111,"_91":112,"_97":117,"_99":118},"<p>Jakie uprawnienia powinien mieć użytkownik aplikacyjny w bazie?</p>",[113,114,115,116],"Brak uprawnień","Dostęp tylko do backupów","Pełny dostęp do bazy","Tylko te, które są niezbędne do działania aplikacji",3,"Zasada minimalnych uprawnień zwiększa bezpieczeństwo bazy danych.",{"_89":120,"_91":121,"_97":126,"_99":127},"<p>Co to jest szyfrowanie danych w bazie?</p>",[122,123,124,125],"Zabezpieczenie danych przed nieautoryzowanym odczytem","Metoda importu danych","Zmiana tabel na indeksy","Usuwanie danych",0,"Szyfrowanie pozwala chronić dane przed odczytem przez osoby niepowołane.",{"_89":129,"_91":130,"_97":98,"_99":135},"<p>Czym jest audyt w bazie danych?</p>",[131,132,133,134],"Sposób na optymalizację zapytań","Rodzaj indeksu","Proces monitorowania i rejestrowania operacji na bazie","Kopia zapasowa","Audyt to rejestrowanie dostępu i operacji na danych – kluczowy element bezpieczeństwa.","98b0aa1d-4108-4a6b-9f96-b5642db7db4d","bezpieczenstwo-baz-danych","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/bezpieczenstwo-baz-danych.md","5 minut",{"_8":141,"_10":142,"_12":143,"_22":151,"_24":152,"_34":153,"_26":196,"_28":197,"_30":31,"_32":198,"_35":36},"Optymalizacja baz danych i zapytań SQL","Dowiedz się, jak przyspieszyć działanie baz danych i zapytań SQL. Poznaj techniki indeksowania, optymalizacji zapytań, analizy wydajności oraz dobre praktyki projektowe. Przewodnik dla średniozaawansowanych i zaawansowanych.",[144,145,146,147,148,149,150,80],"optymalizacja","bazy danych","indeksy","wydajność","explain","tuning","sql",[150,82],["D",1751673600000],{"_8":154,"_86":155},"Quiz: Optymalizacja baz danych i zapytań SQL",[156,164,172,180,188],{"_89":157,"_91":158,"_97":117,"_99":163},"<p>Czym jest indeks w bazie danych?</p>",[159,160,161,162],"Dodatkowa tabela przechowująca kopie rekordów","Typ połączenia sieciowego","Kod służący do tworzenia backupów","Struktura danych przyspieszająca wyszukiwanie i sortowanie","Indeks to struktura umożliwiająca szybkie wyszukiwanie i sortowanie danych.",{"_89":165,"_91":166,"_97":117,"_99":171},"<p>Jak sprawdzić plan wykonania zapytania SQL?</p>",[167,168,169,170],"Zwiększyć ilość RAM","Dodać WHERE 1=1","Użyć DELETE","Użyć polecenia EXPLAIN lub EXPLAIN ANALYZE","Polecenie EXPLAIN pozwala sprawdzić, jak baza danych wykona zapytanie.",{"_89":173,"_91":174,"_97":126,"_99":179},"<p>Które z poniższych NIE jest dobrym sposobem na poprawę wydajności zapytań?</p>",[175,176,177,178],"Dodawanie zbędnych podzapytań","Unikanie SELECT *","Tworzenie odpowiednich indeksów","Filtrowanie danych w WHERE","Zbędne podzapytania mogą spowalniać zapytania.",{"_89":181,"_91":182,"_97":126,"_99":187},"<p>Czym jest denormalizacja?</p>",[183,184,185,186],"Proces łączenia danych w celu poprawy wydajności","Zwiększanie liczby indeksów","Usuwanie kluczy głównych","Proces dzielenia tabel na mniejsze","Denormalizacja to łączenie danych, by przyspieszyć odczyt kosztem powielania informacji.",{"_89":189,"_91":190,"_97":108,"_99":195},"<p>Jakie zapytanie może być szczególnie niebezpieczne wydajnościowo?</p>",[191,192,193,194],"UPDATE bez WHERE","Wszystkie powyższe","SELECT z JOIN na dużych tabelach bez indeksów","DELETE z podzapytaniami bez filtrów","Brak ograniczeń i indeksów w dużych zapytaniach może prowadzić do spadku wydajności lub błędów.","4865ed17-6de4-4db9-9290-e30fe8c825a8","optymalizacja-baz-danych-i-zapytan-sql","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/optymalizacja-baz-danych-i-zapytan-sql.md",{"_8":200,"_10":201,"_12":202,"_22":208,"_24":209,"_34":210,"_26":253,"_28":254,"_30":31,"_32":255,"_35":256},"Podstawy projektowania baz danych","Dowiedz się, jak projektować efektywne, czytelne i bezpieczne bazy danych. Poznaj zasady normalizacji, diagramy ERD, relacje, dobre praktyki projektowe oraz liczne przykłady i zadania praktyczne. Kurs teoretyczno-praktyczny dla początkujących.",[72,203,204,205,206,207,79,80],"projektowanie","normalizacja","erd","relacje","modelowanie",[82],["D",1751673600000],{"_8":211,"_86":212},"Quiz: Podstawy projektowania baz danych",[213,221,229,237,245],{"_89":214,"_91":215,"_97":108,"_99":220},"<p>Czym jest modelowanie danych?</p>",[216,217,218,219],"Tworzenie kopii zapasowych danych","Proces odwzorowania rzeczywistości w strukturze bazy danych","Szyfrowanie danych","Proces tworzenia stron internetowych","Modelowanie danych to odwzorowanie rzeczywistych obiektów i zależności w strukturze bazy.",{"_89":222,"_91":223,"_97":98,"_99":228},"<p>Co przedstawia diagram ERD?</p>",[224,225,226,227],"Struktury kodu źródłowego","Zasady bezpieczeństwa","Relacje między encjami w bazie danych","Schemat działania serwera WWW","ERD (Entity-Relationship Diagram) to graficzne przedstawienie encji i relacji między nimi.",{"_89":230,"_91":231,"_97":108,"_99":236},"<p>Czym jest klucz główny (Primary Key)?</p>",[232,233,234,235],"Pole przechowujące hasło","Unikalnym identyfikatorem rekordu w tabeli","Kolumna służąca do sortowania","Nazwa tabeli","Klucz główny (Primary Key) jednoznacznie identyfikuje każdy rekord w tabeli.",{"_89":238,"_91":239,"_97":117,"_99":244},"<p>Na czym polega normalizacja danych?</p>",[240,241,242,243],"Na kompresji plików","Na szyfrowaniu rekordów","Na sortowaniu danych","Na podziale danych na tabele w celu eliminacji nadmiarowości i zapewnienia spójności","Normalizacja to proces dzielenia danych na mniejsze, powiązane tabele, by uniknąć powielania informacji.",{"_89":246,"_91":247,"_97":108,"_99":252},"<p>Jaką relację opisuje połączenie jeden-do-wielu?</p>",[248,249,250,251],"Wiele rekordów w jednej tabeli odpowiada wielu w drugiej","Każdy rekord w jednej tabeli może być powiązany z wieloma rekordami w drugiej tabeli","Tabele nie są powiązane","Każdy rekord w jednej tabeli odpowiada dokładnie jednemu rekordowi w drugiej","Relacja jeden-do-wielu oznacza, że jeden rekord z tabeli A może być powiązany z wieloma rekordami z tabeli B.","af7c58c8-6c5f-44a6-9c20-0a2c563257e0","podstawy-projektowania-baz-danych","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/podstawy-projektowania-baz-danych.md","4 minuty","projects",[259,278,289],{"_8":260,"_10":261,"_12":262,"_269":270,"_24":271,"_272":273,"_26":274,"_28":275,"_30":31,"_32":276,"_34":-7,"_35":277},"👥 Team Support","Aplikacja usprawniająca pracę zespołu. Pozwala na zarządzanie zespołami i użytkownikami, monitorowanie zadaniami i przypisywanie ich do konkretnych osób bądź podzespołów.",[17,263,264,41,265,266,267,268],"e-commerce","projekt","react-router","auth","crud","portfolio","technologies",[17,41,265],["D",1742601600000],"status","IN_PROGRESS","636f1bd1-3c70-413c-90c6-c89d7e37f883","team-support","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/projects/team-support.md","0 minut",{"_8":279,"_10":280,"_12":281,"_269":284,"_24":285,"_272":273,"_26":286,"_28":287,"_30":31,"_32":288,"_34":-7,"_35":277},"🩺 E-Przychodnia","Aplikacja typu e-commerce mająca na celu ułatwienie korzystania z dobrodziejstw służby zdrowia. All-in-one, znajdziesz tutaj możliwość umawiania wizyt, wyszukiwania najbliższych placówek zdrowia, podgląd skierowań i recept i wiele innych opcji.",[17,263,264,282,283,267,268],"angular","nestjs",[17,282,283],["D",1740787200000],"25b2403d-20cf-406a-bdd9-df5df643a109","e-przychodnia","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/projects/e-przychodnia.md",{"_8":290,"_10":291,"_12":292,"_269":297,"_24":298,"_272":299,"_26":300,"_28":301,"_30":31,"_32":302,"_34":-7,"_35":277},"🔑 Password Generator","Aplikacja do generowania hasła, wedle podanych wytycznych.",[17,293,294,295,296,268],"aplikacja","hasło","password","generowanie",[17],["D",1740787200000],"COMPLETED","0b0a3cb4-adef-4bbf-b564-ec75269a856c","password-generator","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/projects/password-generator.md"]
