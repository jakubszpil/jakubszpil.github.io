[{"_1":2},"routes/home",{"_3":4},"data",{"_5":6,"_62":63,"_252":253},"articles",[7,35,51],{"_8":9,"_10":11,"_12":13,"_22":23,"_24":25,"_26":27,"_28":29,"_30":31,"_32":33,"_34":-7},"title","Framework na 70 linii, czyli implementacja Signal API od zera","description","Dowiedz się, jak zaimplementować minimalistyczny system reaktywny (Signal API) w JavaScript/TypeScript w mniej niż 70 liniach kodu. Praktyczny przewodnik krok po kroku.","keywords",[14,15,16,17,18,19,20,21],"signal","reactive","javascript","typescript","frontend","framework","architektura","blog","categories",[17],"createdAt",["D",1750550400000],"id","e145aace-56d2-4b4d-bde1-f090a653f181","slug","framework-na-70-linii-czyli-implementacja-signal-api-od-zera","content","","resourceUrl","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/articles/framework-na-70-linii-czyli-implementacja-signal-api-od-zera.md","quiz",{"_8":36,"_10":37,"_12":38,"_22":44,"_24":47,"_26":48,"_28":49,"_30":31,"_32":50,"_34":-7},"Proste deployowanie przy użyciu GitHub Actions","Dowiedz się, jak wdrożyć dowolną aplikację za pomocą GitHub Actions w prosty i automatyczny sposób.",[39,40,41,42,43,21],"react","github actions","deployment","CI/CD","automatyzacja",[45,46],"devops","ci",["D",1741996800000],"cfcb5007-bf4e-4998-9678-3269d10b6904","deployment-github-actions","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/articles/deployment-github-actions.md",{"_8":52,"_10":53,"_12":54,"_22":56,"_24":58,"_26":59,"_28":60,"_30":31,"_32":61,"_34":-7},"Szczepienie kodu, czyli jak Typescript radzi sobie z Dependency Injection","Dependency Injection (DI) to wzorzec projektowy stosowany w celu zwiększenia modularności i testowalności kodu. Umożliwia to oddzielenie tworzenia obiektów od ich używania, co prowadzi do lepszej separacji odpowiedzialności i łatwiejszego zarządzania zależnościami. W TypeScript, DI można zaimplementować na kilka sposobów, w tym za funkcji wstrzykujących, które są odpowiedzialne za tworzenie i wstrzykiwanie zależności. Przyjrzyjmy się, jak można zaimplementować DI w TypeScript z wykorzystaniem prostych przykładów.",[17,55,16,21],"wzorce projektowe",[17,57],"wzorce-projektowe",["D",1718841600000],"11cf65bb-e28c-4e88-bd81-93dd154609a5","dependency-injection-kontra-typescript","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/articles/dependency-injection-kontra-typescript.md","courses",[64,136,195],{"_8":65,"_10":66,"_12":67,"_22":78,"_24":80,"_34":81,"_26":133,"_28":134,"_30":31,"_32":135},"Bezpieczeństwo baz danych","Dowiedz się, jak chronić bazę danych przed atakami, utratą danych i nieautoryzowanym dostępem. Poznaj najlepsze praktyki, typowe zagrożenia, narzędzia i praktyczne przykłady zabezpieczania baz danych. Kurs dla każdego, kto zarządza danymi.",[68,69,70,71,72,73,74,75,76,77],"bezpieczeństwo","baza danych","ochrona","uprawnienia","backup","sql injection","szyfrowanie","audyt","praktyka","learning",[79],"bazy-danych",["D",1751673600000],{"_8":82,"_83":84},"Quiz: Bezpieczeństwo baz danych","questions",[85,98,107,115,124],{"_86":87,"_88":89,"_94":95,"_96":97},"question","<p>Czym jest SQL Injection?</p>","options",[90,91,92,93],"Metodą szyfrowania bazy danych","Rodzajem ataku polegającym na wstrzykiwaniu złośliwych zapytań SQL","Legalnym sposobem na szybkie pobieranie danych","Funkcją przyspieszającą zapytania","answer",1,"explanation","SQL Injection to atak polegający na wstrzyknięciu złośliwego kodu SQL przez podatne zapytania.",{"_86":99,"_88":100,"_94":105,"_96":106},"<p>Dlaczego warto regularnie wykonywać kopie zapasowe bazy danych?</p>",[101,102,103,104],"Aby przyspieszyć działanie bazy","Aby mieć więcej kopii danych do analizy","Aby móc przywrócić dane w razie awarii, ataku lub błędu","Aby zwiększyć liczbę użytkowników",2,"Kopie zapasowe pozwalają odtworzyć dane po awarii lub ataku.",{"_86":108,"_88":109,"_94":95,"_96":114},"<p>Jakie uprawnienia powinien mieć użytkownik aplikacyjny w bazie?</p>",[110,111,112,113],"Brak uprawnień","Tylko te, które są niezbędne do działania aplikacji","Pełny dostęp do bazy","Dostęp tylko do backupów","Zasada minimalnych uprawnień zwiększa bezpieczeństwo bazy danych.",{"_86":116,"_88":117,"_94":122,"_96":123},"<p>Co to jest szyfrowanie danych w bazie?</p>",[118,119,120,121],"Zabezpieczenie danych przed nieautoryzowanym odczytem","Zmiana tabel na indeksy","Usuwanie danych","Metoda importu danych",0,"Szyfrowanie pozwala chronić dane przed odczytem przez osoby niepowołane.",{"_86":125,"_88":126,"_94":131,"_96":132},"<p>Czym jest audyt w bazie danych?</p>",[127,128,129,130],"Rodzaj indeksu","Sposób na optymalizację zapytań","Kopia zapasowa","Proces monitorowania i rejestrowania operacji na bazie",3,"Audyt to rejestrowanie dostępu i operacji na danych – kluczowy element bezpieczeństwa.","172845f9-d8de-42ce-af6b-8eda3ac39633","bezpieczenstwo-baz-danych","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/bezpieczenstwo-baz-danych.md",{"_8":137,"_10":138,"_12":139,"_22":147,"_24":148,"_34":149,"_26":192,"_28":193,"_30":31,"_32":194},"Optymalizacja baz danych i zapytań SQL","Dowiedz się, jak przyspieszyć działanie baz danych i zapytań SQL. Poznaj techniki indeksowania, optymalizacji zapytań, analizy wydajności oraz dobre praktyki projektowe. Przewodnik dla średniozaawansowanych i zaawansowanych.",[140,141,142,143,144,145,146,77],"optymalizacja","bazy danych","indeksy","wydajność","explain","tuning","sql",[146,79],["D",1751673600000],{"_8":150,"_83":151},"Quiz: Optymalizacja baz danych i zapytań SQL",[152,160,168,176,184],{"_86":153,"_88":154,"_94":105,"_96":159},"<p>Czym jest indeks w bazie danych?</p>",[155,156,157,158],"Typ połączenia sieciowego","Kod służący do tworzenia backupów","Struktura danych przyspieszająca wyszukiwanie i sortowanie","Dodatkowa tabela przechowująca kopie rekordów","Indeks to struktura umożliwiająca szybkie wyszukiwanie i sortowanie danych.",{"_86":161,"_88":162,"_94":131,"_96":167},"<p>Jak sprawdzić plan wykonania zapytania SQL?</p>",[163,164,165,166],"Dodać WHERE 1=1","Zwiększyć ilość RAM","Użyć DELETE","Użyć polecenia EXPLAIN lub EXPLAIN ANALYZE","Polecenie EXPLAIN pozwala sprawdzić, jak baza danych wykona zapytanie.",{"_86":169,"_88":170,"_94":95,"_96":175},"<p>Które z poniższych NIE jest dobrym sposobem na poprawę wydajności zapytań?</p>",[171,172,173,174],"Tworzenie odpowiednich indeksów","Dodawanie zbędnych podzapytań","Unikanie SELECT *","Filtrowanie danych w WHERE","Zbędne podzapytania mogą spowalniać zapytania.",{"_86":177,"_88":178,"_94":95,"_96":183},"<p>Czym jest denormalizacja?</p>",[179,180,181,182],"Usuwanie kluczy głównych","Proces łączenia danych w celu poprawy wydajności","Zwiększanie liczby indeksów","Proces dzielenia tabel na mniejsze","Denormalizacja to łączenie danych, by przyspieszyć odczyt kosztem powielania informacji.",{"_86":185,"_88":186,"_94":122,"_96":191},"<p>Jakie zapytanie może być szczególnie niebezpieczne wydajnościowo?</p>",[187,188,189,190],"Wszystkie powyższe","DELETE z podzapytaniami bez filtrów","SELECT z JOIN na dużych tabelach bez indeksów","UPDATE bez WHERE","Brak ograniczeń i indeksów w dużych zapytaniach może prowadzić do spadku wydajności lub błędów.","295482ab-b3bd-42e5-94e5-afada2c8201a","optymalizacja-baz-danych-i-zapytan-sql","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/optymalizacja-baz-danych-i-zapytan-sql.md",{"_8":196,"_10":197,"_12":198,"_22":204,"_24":205,"_34":206,"_26":249,"_28":250,"_30":31,"_32":251},"Podstawy projektowania baz danych","Dowiedz się, jak projektować efektywne, czytelne i bezpieczne bazy danych. Poznaj zasady normalizacji, diagramy ERD, relacje, dobre praktyki projektowe oraz liczne przykłady i zadania praktyczne. Kurs teoretyczno-praktyczny dla początkujących.",[69,199,200,201,202,203,76,77],"projektowanie","normalizacja","erd","relacje","modelowanie",[79],["D",1751673600000],{"_8":207,"_83":208},"Quiz: Podstawy projektowania baz danych",[209,217,225,233,241],{"_86":210,"_88":211,"_94":131,"_96":216},"<p>Czym jest modelowanie danych?</p>",[212,213,214,215],"Szyfrowanie danych","Tworzenie kopii zapasowych danych","Proces tworzenia stron internetowych","Proces odwzorowania rzeczywistości w strukturze bazy danych","Modelowanie danych to odwzorowanie rzeczywistych obiektów i zależności w strukturze bazy.",{"_86":218,"_88":219,"_94":95,"_96":224},"<p>Co przedstawia diagram ERD?</p>",[220,221,222,223],"Struktury kodu źródłowego","Relacje między encjami w bazie danych","Schemat działania serwera WWW","Zasady bezpieczeństwa","ERD (Entity-Relationship Diagram) to graficzne przedstawienie encji i relacji między nimi.",{"_86":226,"_88":227,"_94":105,"_96":232},"<p>Czym jest klucz główny (Primary Key)?</p>",[228,229,230,231],"Kolumna służąca do sortowania","Nazwa tabeli","Unikalnym identyfikatorem rekordu w tabeli","Pole przechowujące hasło","Klucz główny (Primary Key) jednoznacznie identyfikuje każdy rekord w tabeli.",{"_86":234,"_88":235,"_94":131,"_96":240},"<p>Na czym polega normalizacja danych?</p>",[236,237,238,239],"Na szyfrowaniu rekordów","Na kompresji plików","Na sortowaniu danych","Na podziale danych na tabele w celu eliminacji nadmiarowości i zapewnienia spójności","Normalizacja to proces dzielenia danych na mniejsze, powiązane tabele, by uniknąć powielania informacji.",{"_86":242,"_88":243,"_94":131,"_96":248},"<p>Jaką relację opisuje połączenie jeden-do-wielu?</p>",[244,245,246,247],"Tabele nie są powiązane","Każdy rekord w jednej tabeli odpowiada dokładnie jednemu rekordowi w drugiej","Wiele rekordów w jednej tabeli odpowiada wielu w drugiej","Każdy rekord w jednej tabeli może być powiązany z wieloma rekordami w drugiej tabeli","Relacja jeden-do-wielu oznacza, że jeden rekord z tabeli A może być powiązany z wieloma rekordami z tabeli B.","8f4bcd7c-e13e-48da-84d0-85e8953a4ac5","podstawy-projektowania-baz-danych","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/podstawy-projektowania-baz-danych.md","projects",[254,272,283],{"_8":255,"_10":256,"_12":257,"_264":265,"_24":266,"_267":268,"_26":269,"_28":270,"_30":31,"_32":271,"_34":-7},"👥 Team Support","Aplikacja usprawniająca pracę zespołu. Pozwala na zarządzanie zespołami i użytkownikami, monitorowanie zadaniami i przypisywanie ich do konkretnych osób bądź podzespołów.",[17,258,259,39,260,261,262,263],"e-commerce","projekt","react-router","auth","crud","portfolio","technologies",[17,39,260],["D",1742601600000],"status","IN_PROGRESS","13cce4f2-c6d9-45a6-8cbf-8a1a9b42c886","team-support","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/projects/team-support.md",{"_8":273,"_10":274,"_12":275,"_264":278,"_24":279,"_267":268,"_26":280,"_28":281,"_30":31,"_32":282,"_34":-7},"🩺 E-Przychodnia","Aplikacja typu e-commerce mająca na celu ułatwienie korzystania z dobrodziejstw służby zdrowia. All-in-one, znajdziesz tutaj możliwość umawiania wizyt, wyszukiwania najbliższych placówek zdrowia, podgląd skierowań i recept i wiele innych opcji.",[17,258,259,276,277,262,263],"angular","nestjs",[17,276,277],["D",1740787200000],"4d0b75c0-fc27-4515-be92-b6e222240c4a","e-przychodnia","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/projects/e-przychodnia.md",{"_8":284,"_10":285,"_12":286,"_264":291,"_24":292,"_267":293,"_26":294,"_28":295,"_30":31,"_32":296,"_34":-7},"🔑 Password Generator","Aplikacja do generowania hasła, wedle podanych wytycznych.",[17,287,288,289,290,263],"aplikacja","hasło","password","generowanie",[17],["D",1740787200000],"COMPLETED","d5a0bb7b-e4ab-43b7-9371-8fdbe21b6d6a","password-generator","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/projects/password-generator.md"]
