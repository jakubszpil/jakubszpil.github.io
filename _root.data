[{"_1":2,"_4":5},"root",{"_3":-5},"data","routes/home",{"_3":6},{"_7":8,"_53":54},"articles",[9,31,42],{"_10":11,"_12":13,"_14":15,"_19":20,"_21":22,"_23":24,"_25":26,"_27":28,"_29":30},"title","Szczepienie kodu, czyli jak Typescript radzi sobie z Dependency Injection","description","Dependency Injection (DI) to wzorzec projektowy stosowany w celu zwiększenia modularności i testowalności kodu. Umożliwia to oddzielenie tworzenia obiektów od ich używania, co prowadzi do lepszej separacji odpowiedzialności i łatwiejszego zarządzania zależnościami. W TypeScript, DI można zaimplementować na kilka sposobów, w tym za funkcji wstrzykujących, które są odpowiedzialne za tworzenie i wstrzykiwanie zależności. Przyjrzyjmy się, jak można zaimplementować DI w TypeScript z wykorzystaniem prostych przykładów.","keywords",[16,17,18],"typescript","wzorce","javascript","categories",[16,17],"createdAt",["D",1718841600000],"id","e3d33b3f-943d-4de9-b9ec-6257d02a11f8","slug","dependency-injection-kontra-typescript","content","<p>Dependency Injection (DI) to wzorzec projektowy stosowany w celu zwiększenia modularności i testowalności kodu. Umożliwia to oddzielenie tworzenia obiektów od ich używania, co prowadzi do lepszej separacji odpowiedzialności i łatwiejszego zarządzania zależnościami.</p>\n<p>W TypeScript, DI można zaimplementować na kilka sposobów, w tym za funkcji wstrzykujących, które są odpowiedzialne za tworzenie i wstrzykiwanie zależności. Przyjrzyjmy się, jak można zaimplementować DI w TypeScript z wykorzystaniem prostych przykładów.</p>\n<h2 id=\"spis-treści\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#spis-treści\">#</a>Spis Treści</h2>\n<ol>\n<li>Podstawy Dependency Injection</li>\n<li>Prosty przykład DI</li>\n<li>Wstrzykiwanie zależności za pomocą funkcji wstrzykującej</li>\n</ol>\n<h2 id=\"1-podstawy-dependency-injection\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#1-podstawy-dependency-injection\">#</a>1. Podstawy Dependency Injection</h2>\n<p>W Dependency Injection chodzi o przekazywanie zależności do obiektu zamiast tworzenia ich bezpośrednio wewnątrz obiektu. Dzięki temu można łatwo wymieniać zależności, co ułatwia testowanie i modyfikowanie kodu.</p>\n<h2 id=\"2-prosty-przykład-di\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#2-prosty-przykład-di\">#</a>2. Prosty przykład DI</h2>\n<p>Rozważmy prosty przykład, w którym klasa <code>UserService</code> potrzebuje instancji <code>UserRepository</code>:</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">UserRepository</span> {\n  <span class=\"hljs-title function_\">getUser</span>(<span class=\"hljs-attr\">userId</span>: <span class=\"hljs-built_in\">number</span>): <span class=\"hljs-built_in\">string</span> {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`User <span class=\"hljs-subst\">${userId}</span>`</span>;\n  }\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">UserService</span> {\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">userRepository</span>: <span class=\"hljs-title class_\">UserRepository</span>;\n\n  <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">userRepository</span>: <span class=\"hljs-title class_\">UserRepository</span></span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">userRepository</span> = userRepository;\n  }\n\n  <span class=\"hljs-title function_\">getUserName</span>(<span class=\"hljs-attr\">userId</span>: <span class=\"hljs-built_in\">number</span>): <span class=\"hljs-built_in\">string</span> {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">userRepository</span>.<span class=\"hljs-title function_\">getUser</span>(userId);\n  }\n}\n\n<span class=\"hljs-keyword\">const</span> userRepository = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">UserRepository</span>();\n<span class=\"hljs-keyword\">const</span> userService = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">UserService</span>(userRepository);\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(userService.<span class=\"hljs-title function_\">getUserName</span>(<span class=\"hljs-number\">1</span>)); <span class=\"hljs-comment\">// User 1</span>\n</code></pre>\n<p>W powyższym przykładzie <code>UserRepository</code> jest wstrzykiwany do <code>UserService</code> przez konstruktor.</p>\n<h2 id=\"3-wstrzykiwanie-zależności-za-pomocą-funkcji-wstrzykującej\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#3-wstrzykiwanie-zależności-za-pomocą-funkcji-wstrzykującej\">#</a>3. Wstrzykiwanie zależności za pomocą funkcji wstrzykującej</h2>\n<p>Aby lepiej zarządzać zależnościami, możemy użyć kontenera IoC. Przykład poniżej pokazuje, jak można to zrobić przy użyciu prostego kontenera DI:</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">dependencies</span>: <span class=\"hljs-title class_\">Map</span>&#x3C;<span class=\"hljs-built_in\">string</span>, <span class=\"hljs-built_in\">any</span>> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Map</span>();\n\n<span class=\"hljs-keyword\">function</span> inject&#x3C;T>(<span class=\"hljs-attr\">dependency</span>: <span class=\"hljs-title function_\">new</span> () => T): T {\n  <span class=\"hljs-keyword\">if</span> (dependencies.<span class=\"hljs-title function_\">has</span>(dependency.<span class=\"hljs-property\">name</span>)) {\n    <span class=\"hljs-keyword\">const</span> dep = dependencies.<span class=\"hljs-title function_\">get</span>(dependency.<span class=\"hljs-property\">name</span>);\n    <span class=\"hljs-keyword\">if</span> (dep) {\n      <span class=\"hljs-keyword\">return</span> dep;\n    }\n  }\n\n  <span class=\"hljs-keyword\">const</span> dep = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title function_\">dependency</span>();\n  dependencies.<span class=\"hljs-title function_\">set</span>(dependency.<span class=\"hljs-property\">name</span>, dep);\n  <span class=\"hljs-keyword\">return</span> dependencies.<span class=\"hljs-title function_\">get</span>(dependency.<span class=\"hljs-property\">name</span>);\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">UserRepository</span> {\n  <span class=\"hljs-title function_\">getUser</span>(<span class=\"hljs-attr\">userId</span>: <span class=\"hljs-built_in\">number</span>): <span class=\"hljs-built_in\">string</span> {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`User <span class=\"hljs-subst\">${userId}</span>`</span>;\n  }\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">UserService</span> {\n  <span class=\"hljs-keyword\">protected</span> userRepository = <span class=\"hljs-title function_\">inject</span>(<span class=\"hljs-title class_\">UserRepository</span>);\n\n  <span class=\"hljs-title function_\">getUserName</span>(<span class=\"hljs-attr\">userId</span>: <span class=\"hljs-built_in\">number</span>): <span class=\"hljs-built_in\">string</span> {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">userRepository</span>.<span class=\"hljs-title function_\">getUser</span>(userId);\n  }\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ExtendedUserService</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">UserService</span> {}\n\n<span class=\"hljs-keyword\">const</span> extendedUserService = <span class=\"hljs-title function_\">inject</span>(<span class=\"hljs-title class_\">ExtendedUserService</span>);\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(extendedUserService.<span class=\"hljs-title function_\">getUserName</span>(<span class=\"hljs-number\">1</span>)); <span class=\"hljs-comment\">// User 1</span>\n</code></pre>\n<p>W tym przykładzie używamy funkcji do rejestrowania i rozwiązywania zależności.\nFunkcja inject przyjmuje, jako generyczny argument, zależność, którą na podstawie statycznej nazwy zapisuje i przechowuje, dzięki czemu potem mamy dostęp do wspólnej instancji tej zależności.\nTakie podejście pozwala na łatwe rozszerzanie klas, nie potrzebujemy pamiętać o zależnościach w konstruktorze klasy</p>\n<h2 id=\"podsumowanie\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#podsumowanie\">#</a>Podsumowanie</h2>\n<p>Dependency Injection w TypeScript to potężna technika, która może znacznie ułatwić zarządzanie zależnościami i poprawić testowalność oraz modularność kodu. Przedstawione powyżej przykłady pokazują różne podejścia do implementacji DI, w tym bezpośrednie wstrzykiwanie przez konstruktor, korzystanie z funkcji wstrzykujących, używanie dekoratorów. Dzięki tym technikom można tworzyć bardziej elastyczne i łatwe w utrzymaniu aplikacje.</p>","resourceUrl","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/articles/dependency-injection-kontra-typescript.mdx",{"_10":32,"_12":33,"_14":34,"_19":36,"_21":37,"_23":38,"_25":39,"_27":40,"_29":41},"Obserwatorium, czyli wzorzec projektowy obserwatora","Wzorzec projektowy Obserwator (ang. Observer) jest jednym z najważniejszych wzorców projektowych, szczególnie użytecznym w kontekście programowania reaktywnego i aplikacji, które muszą reagować na zmiany stanu. W TypeScript możemy zaimplementować ten wzorzec w sposób typowany, co dodatkowo zwiększa bezpieczeństwo i czytelność kodu.",[16,17,35],"programowanie",[16,17],["D",1718841600000],"89511293-b1df-4ca0-b3e6-64c66777bfbb","obserwatorium-czyli-wzorzec-projektowy-obserwatora","<p>Wzorzec projektowy Obserwator (ang. Observer) jest jednym z najważniejszych wzorców projektowych, szczególnie użytecznym w kontekście programowania reaktywnego i aplikacji, które muszą reagować na zmiany stanu. W TypeScript możemy zaimplementować ten wzorzec w sposób typowany, co dodatkowo zwiększa bezpieczeństwo i czytelność kodu.</p>\n<h2 id=\"czym-jest-wzorzec-obserwatora\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#czym-jest-wzorzec-obserwatora\">#</a>Czym jest Wzorzec Obserwatora?</h2>\n<p>Wzorzec Obserwatora polega na tym, że obiekt (obserwowany) zarządza listą zależnych obiektów (obserwatorów) i automatycznie powiadamia ich o zmianach swojego stanu. Jest to realizowane za pomocą metod do subskrybowania, odsubskrybowania oraz powiadamiania obserwatorów.</p>\n<h2 id=\"korzyści-z-używania-wzorca-obserwatora\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#korzyści-z-używania-wzorca-obserwatora\">#</a>Korzyści z używania Wzorca Obserwatora</h2>\n<ol>\n<li><strong>Reaktywność:</strong> Automatyczne powiadamianie obserwatorów o zmianach stanu.</li>\n<li><strong>Luźne Powiązania:</strong> Obserwatorzy nie muszą znać szczegółów implementacji obiektu, który obserwują.</li>\n<li><strong>Elastyczność:</strong> Łatwość dodawania nowych obserwatorów bez zmiany istniejącego kodu.</li>\n</ol>\n<h2 id=\"implementacja-wzorca-obserwatora-w-typescript\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#implementacja-wzorca-obserwatora-w-typescript\">#</a>Implementacja Wzorca Obserwatora w TypeScript</h2>\n<h3 id=\"przykład-1-prosta-implementacja\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#przykład-1-prosta-implementacja\">#</a>Przykład 1: Prosta Implementacja</h3>\n<p>Poniżej znajduje się prosta implementacja wzorca Obserwatora w TypeScript:</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-comment\">// Interfejs obserwatora</span>\n<span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">Observer</span> {\n  <span class=\"hljs-title function_\">update</span>(<span class=\"hljs-attr\">message</span>: <span class=\"hljs-built_in\">string</span>): <span class=\"hljs-built_in\">void</span>;\n}\n\n<span class=\"hljs-comment\">// Klasa obserwowana</span>\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Subject</span> {\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">observers</span>: <span class=\"hljs-title class_\">Observer</span>[] = [];\n\n  <span class=\"hljs-title function_\">subscribe</span>(<span class=\"hljs-attr\">observer</span>: <span class=\"hljs-title class_\">Observer</span>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">observers</span>.<span class=\"hljs-title function_\">push</span>(observer);\n  }\n\n  <span class=\"hljs-title function_\">unsubscribe</span>(<span class=\"hljs-attr\">observer</span>: <span class=\"hljs-title class_\">Observer</span>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">observers</span> = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">observers</span>.<span class=\"hljs-title function_\">filter</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">obs</span>) =></span> obs !== observer);\n  }\n\n  <span class=\"hljs-title function_\">notify</span>(<span class=\"hljs-attr\">message</span>: <span class=\"hljs-built_in\">string</span>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">observers</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">observer</span>) =></span> observer.<span class=\"hljs-title function_\">update</span>(message));\n  }\n}\n\n<span class=\"hljs-comment\">// Implementacja obserwatora</span>\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ConcreteObserver</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">Observer</span> {\n  <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span></span>) {}\n\n  <span class=\"hljs-title function_\">update</span>(<span class=\"hljs-attr\">message</span>: <span class=\"hljs-built_in\">string</span>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`<span class=\"hljs-subst\">${<span class=\"hljs-variable language_\">this</span>.name}</span> received message: <span class=\"hljs-subst\">${message}</span>`</span>);\n  }\n}\n\n<span class=\"hljs-comment\">// Użycie wzorca Obserwatora</span>\n<span class=\"hljs-keyword\">const</span> subject = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Subject</span>();\n\n<span class=\"hljs-keyword\">const</span> observer1 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ConcreteObserver</span>(<span class=\"hljs-string\">\"Observer 1\"</span>);\n<span class=\"hljs-keyword\">const</span> observer2 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ConcreteObserver</span>(<span class=\"hljs-string\">\"Observer 2\"</span>);\n\nsubject.<span class=\"hljs-title function_\">subscribe</span>(observer1);\nsubject.<span class=\"hljs-title function_\">subscribe</span>(observer2);\n\nsubject.<span class=\"hljs-title function_\">notify</span>(<span class=\"hljs-string\">\"Hello, Observers!\"</span>);\n\n<span class=\"hljs-comment\">// Output:</span>\n<span class=\"hljs-comment\">// Observer 1 received message: Hello, Observers!</span>\n<span class=\"hljs-comment\">// Observer 2 received message: Hello, Observers!</span>\n</code></pre>\n<p>W tym przykładzie <code>Subject</code> zarządza listą obserwatorów i powiadamia ich za pomocą metody <code>notify</code>. Obserwatorzy implementują interfejs <code>Observer</code>, który definiuje metodę <code>update</code>.</p>\n<h3 id=\"przykład-2-rozbudowana-implementacja-z-typowaniem\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#przykład-2-rozbudowana-implementacja-z-typowaniem\">#</a>Przykład 2: Rozbudowana Implementacja z Typowaniem</h3>\n<p>W bardziej zaawansowanej wersji możemy użyć typów generycznych do zarządzania różnymi typami danych:</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-comment\">// Interfejs obserwatora z typem generycznym</span>\n<span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">Observer</span>&#x3C;T> {\n  <span class=\"hljs-title function_\">update</span>(<span class=\"hljs-attr\">data</span>: T): <span class=\"hljs-built_in\">void</span>;\n}\n\n<span class=\"hljs-comment\">// Klasa obserwowana z typem generycznym</span>\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Subject</span>&#x3C;T> {\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">observers</span>: <span class=\"hljs-title class_\">Observer</span>&#x3C;T>[] = [];\n\n  <span class=\"hljs-title function_\">subscribe</span>(<span class=\"hljs-attr\">observer</span>: <span class=\"hljs-title class_\">Observer</span>&#x3C;T>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">observers</span>.<span class=\"hljs-title function_\">push</span>(observer);\n  }\n\n  <span class=\"hljs-title function_\">unsubscribe</span>(<span class=\"hljs-attr\">observer</span>: <span class=\"hljs-title class_\">Observer</span>&#x3C;T>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">observers</span> = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">observers</span>.<span class=\"hljs-title function_\">filter</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">obs</span>) =></span> obs !== observer);\n  }\n\n  <span class=\"hljs-title function_\">notify</span>(<span class=\"hljs-attr\">data</span>: T): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">observers</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">observer</span>) =></span> observer.<span class=\"hljs-title function_\">update</span>(data));\n  }\n}\n\n<span class=\"hljs-comment\">// Implementacja obserwatora</span>\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ConcreteObserver</span>&#x3C;T> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">Observer</span>&#x3C;T> {\n  <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span></span>) {}\n\n  <span class=\"hljs-title function_\">update</span>(<span class=\"hljs-attr\">data</span>: T): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`<span class=\"hljs-subst\">${<span class=\"hljs-variable language_\">this</span>.name}</span> received data:`</span>, data);\n  }\n}\n\n<span class=\"hljs-comment\">// Użycie wzorca Obserwatora z typem generycznym</span>\n<span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">User</span> {\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span>;\n  <span class=\"hljs-attr\">age</span>: <span class=\"hljs-built_in\">number</span>;\n}\n\n<span class=\"hljs-keyword\">const</span> userSubject = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Subject</span>&#x3C;<span class=\"hljs-title class_\">User</span>>();\n\n<span class=\"hljs-keyword\">const</span> userObserver1 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ConcreteObserver</span>&#x3C;<span class=\"hljs-title class_\">User</span>>(<span class=\"hljs-string\">\"User Observer 1\"</span>);\n<span class=\"hljs-keyword\">const</span> userObserver2 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ConcreteObserver</span>&#x3C;<span class=\"hljs-title class_\">User</span>>(<span class=\"hljs-string\">\"User Observer 2\"</span>);\n\nuserSubject.<span class=\"hljs-title function_\">subscribe</span>(userObserver1);\nuserSubject.<span class=\"hljs-title function_\">subscribe</span>(userObserver2);\n\nuserSubject.<span class=\"hljs-title function_\">notify</span>({ <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Alice\"</span>, <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">30</span> });\n\n<span class=\"hljs-comment\">// Output:</span>\n<span class=\"hljs-comment\">// User Observer 1 received data: { name: 'Alice', age: 30 }</span>\n<span class=\"hljs-comment\">// User Observer 2 received data: { name: 'Alice', age: 30 }</span>\n</code></pre>\n<p>W tej wersji <code>Subject</code> i <code>Observer</code> są typowane generycznie, co pozwala na bardziej elastyczne i bezpieczne przekazywanie danych.</p>\n<h2 id=\"zakończenie\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#zakończenie\">#</a>Zakończenie</h2>\n<p>Wzorzec Obserwatora w TypeScript jest potężnym narzędziem, które pozwala na łatwe zarządzanie zmianami stanu i reaktywnością aplikacji. Dzięki silnemu typowaniu w TypeScript, implementacja tego wzorca jest jeszcze bardziej bezpieczna i czytelna. Implementując ten wzorzec, można znacząco poprawić strukturę i elastyczność kodu, co jest szczególnie ważne w dużych i złożonych aplikacjach. Dzięki temu wzorcowi, komponenty mogą komunikować się ze sobą w sposób luźno powiązany, co ułatwia ich testowanie, modyfikowanie i rozbudowę.</p>\n<p>Wzorzec Obserwatora w TypeScript można łatwo zaimplementować na różne sposoby, dostosowując go do specyficznych potrzeb projektu. W powyższych przykładach pokazaliśmy zarówno podstawową implementację, jak i bardziej zaawansowaną wersję z typami generycznymi. Zachęcam do eksperymentowania z tym wzorcem w swoich projektach, aby lepiej zrozumieć jego potencjał i korzyści.</p>\n<h3 id=\"przykładowy-projekt-z-wykorzystaniem-wzorca-obserwatora\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#przykładowy-projekt-z-wykorzystaniem-wzorca-obserwatora\">#</a>Przykładowy Projekt z Wykorzystaniem Wzorca Obserwatora</h3>\n<p>Aby zobaczyć, jak wzorzec Obserwatora może być użyty w bardziej realistycznym scenariuszu, rozważmy prostą aplikację monitorującą zmiany temperatury:</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-comment\">// Interfejs obserwatora</span>\n<span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">Observer</span>&#x3C;T> {\n  <span class=\"hljs-title function_\">update</span>(<span class=\"hljs-attr\">data</span>: T): <span class=\"hljs-built_in\">void</span>;\n}\n\n<span class=\"hljs-comment\">// Klasa obserwowana</span>\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TemperatureSensor</span> {\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">observers</span>: <span class=\"hljs-title class_\">Observer</span>&#x3C;<span class=\"hljs-built_in\">number</span>>[] = [];\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">temperature</span>: <span class=\"hljs-built_in\">number</span> = <span class=\"hljs-number\">0</span>;\n\n  <span class=\"hljs-title function_\">subscribe</span>(<span class=\"hljs-attr\">observer</span>: <span class=\"hljs-title class_\">Observer</span>&#x3C;<span class=\"hljs-built_in\">number</span>>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">observers</span>.<span class=\"hljs-title function_\">push</span>(observer);\n  }\n\n  <span class=\"hljs-title function_\">unsubscribe</span>(<span class=\"hljs-attr\">observer</span>: <span class=\"hljs-title class_\">Observer</span>&#x3C;<span class=\"hljs-built_in\">number</span>>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">observers</span> = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">observers</span>.<span class=\"hljs-title function_\">filter</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">obs</span>) =></span> obs !== observer);\n  }\n\n  <span class=\"hljs-title function_\">setTemperature</span>(<span class=\"hljs-attr\">temp</span>: <span class=\"hljs-built_in\">number</span>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`Setting temperature to <span class=\"hljs-subst\">${temp}</span>`</span>);\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">temperature</span> = temp;\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">notify</span>(temp);\n  }\n\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-title function_\">notify</span>(<span class=\"hljs-attr\">temp</span>: <span class=\"hljs-built_in\">number</span>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">observers</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">observer</span>) =></span> observer.<span class=\"hljs-title function_\">update</span>(temp));\n  }\n}\n\n<span class=\"hljs-comment\">// Implementacja obserwatora</span>\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TemperatureDisplay</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">Observer</span>&#x3C;<span class=\"hljs-built_in\">number</span>> {\n  <span class=\"hljs-title function_\">update</span>(<span class=\"hljs-attr\">temp</span>: <span class=\"hljs-built_in\">number</span>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`Temperature Display: <span class=\"hljs-subst\">${temp}</span>°C`</span>);\n  }\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TemperatureLogger</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">Observer</span>&#x3C;<span class=\"hljs-built_in\">number</span>> {\n  <span class=\"hljs-title function_\">update</span>(<span class=\"hljs-attr\">temp</span>: <span class=\"hljs-built_in\">number</span>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`Logging temperature: <span class=\"hljs-subst\">${temp}</span>°C`</span>);\n  }\n}\n\n<span class=\"hljs-comment\">// Użycie wzorca Obserwatora</span>\n<span class=\"hljs-keyword\">const</span> sensor = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TemperatureSensor</span>();\n<span class=\"hljs-keyword\">const</span> display = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TemperatureDisplay</span>();\n<span class=\"hljs-keyword\">const</span> logger = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TemperatureLogger</span>();\n\nsensor.<span class=\"hljs-title function_\">subscribe</span>(display);\nsensor.<span class=\"hljs-title function_\">subscribe</span>(logger);\n\nsensor.<span class=\"hljs-title function_\">setTemperature</span>(<span class=\"hljs-number\">25</span>); <span class=\"hljs-comment\">// Output: Setting temperature to 25</span>\n<span class=\"hljs-comment\">//         Temperature Display: 25°C</span>\n<span class=\"hljs-comment\">//         Logging temperature: 25°C</span>\n\nsensor.<span class=\"hljs-title function_\">setTemperature</span>(<span class=\"hljs-number\">30</span>); <span class=\"hljs-comment\">// Output: Setting temperature to 30</span>\n<span class=\"hljs-comment\">//         Temperature Display: 30°C</span>\n<span class=\"hljs-comment\">//         Logging temperature: 30°C</span>\n</code></pre>\n<p>W tym przykładzie <code>TemperatureSensor</code> pełni rolę obiektu obserwowanego, który powiadamia swoich obserwatorów (<code>TemperatureDisplay</code> i <code>TemperatureLogger</code>) o zmianach temperatury. W praktycznym scenariuszu można by zastosować ten wzorzec do monitorowania różnych parametrów i reagowania na zmiany w czasie rzeczywistym.</p>","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/articles/obserwatorium-czyli-wzorzec-projektowy-obserwatora.mdx",{"_10":43,"_12":44,"_14":45,"_19":47,"_21":48,"_23":49,"_25":50,"_27":51,"_29":52},"Signalizacja, czyli koncept Signals w Typescript","Signal to koncepcja pochodząca z programowania reaktywnego, której celem jest uproszczenie komunikacji między komponentami oraz zarządzania stanem aplikacji. W TypeScript, dzięki silnemu typowaniu, można zaimplementować sygnały w sposób bezpieczny i efektywny.",[16,17,46],"signals",[16,17],["D",1718841600000],"e51ba9bd-15b1-4a6e-800f-ee160d1f0b56","signalizacja-czyli-koncept-signals-w-typescript","<p>Signal to koncepcja pochodząca z programowania reaktywnego, której celem jest uproszczenie komunikacji między komponentami oraz zarządzania stanem aplikacji. W TypeScript, dzięki silnemu typowaniu, można zaimplementować sygnały w sposób bezpieczny i efektywny.</p>\n<h2 id=\"czym-jest-signal\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#czym-jest-signal\">#</a>Czym jest Signal?</h2>\n<p>Signal (sygnał) jest obiektem, który reprezentuje strumień danych, który może być obserwowany i reagować na zmiany tych danych. W kontekście frontendu, sygnały mogą być używane do reagowania na zdarzenia użytkownika, zmiany stanu aplikacji, czy asynchroniczne operacje, takie jak żądania sieciowe.</p>\n<h2 id=\"korzyści-z-używania-signal\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#korzyści-z-używania-signal\">#</a>Korzyści z używania Signal</h2>\n<ol>\n<li><strong>Reaktywność:</strong> Umożliwiają budowanie aplikacji, które automatycznie reagują na zmiany danych.</li>\n<li><strong>Czytelność:</strong> Poprawiają czytelność kodu poprzez eliminację złożonych zależności i ręcznego zarządzania stanem.</li>\n<li><strong>Modularność:</strong> Ułatwiają zarządzanie stanem w skomplikowanych aplikacjach poprzez oddzielenie logiki zarządzania stanem od komponentów.</li>\n</ol>\n<h2 id=\"implementacja-signal-w-typescript\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#implementacja-signal-w-typescript\">#</a>Implementacja Signal w TypeScript</h2>\n<h3 id=\"przykład-1-prosty-signal\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#przykład-1-prosty-signal\">#</a>Przykład 1: Prosty Signal</h3>\n<p>Poniżej przedstawiono prostą implementację sygnału w TypeScript:</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">Listener</span>&#x3C;T> = <span class=\"hljs-function\">(<span class=\"hljs-params\"><span class=\"hljs-attr\">value</span>: T</span>) =></span> <span class=\"hljs-built_in\">void</span>;\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Signal</span>&#x3C;T> {\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">listeners</span>: <span class=\"hljs-title class_\">Listener</span>&#x3C;T>[] = [];\n\n  <span class=\"hljs-title function_\">subscribe</span>(<span class=\"hljs-attr\">listener</span>: <span class=\"hljs-title class_\">Listener</span>&#x3C;T>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">listeners</span>.<span class=\"hljs-title function_\">push</span>(listener);\n  }\n\n  <span class=\"hljs-title function_\">unsubscribe</span>(<span class=\"hljs-attr\">listener</span>: <span class=\"hljs-title class_\">Listener</span>&#x3C;T>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">listeners</span> = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">listeners</span>.<span class=\"hljs-title function_\">filter</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">l</span>) =></span> l !== listener);\n  }\n\n  <span class=\"hljs-title function_\">emit</span>(<span class=\"hljs-attr\">value</span>: T): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">listeners</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">listener</span>) =></span> <span class=\"hljs-title function_\">listener</span>(value));\n  }\n}\n\n<span class=\"hljs-comment\">// Użycie sygnału</span>\n<span class=\"hljs-keyword\">const</span> numberSignal = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Signal</span>&#x3C;<span class=\"hljs-built_in\">number</span>>();\n\nnumberSignal.<span class=\"hljs-title function_\">subscribe</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">value</span>) =></span> {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`Received value: <span class=\"hljs-subst\">${value}</span>`</span>);\n});\n\nnumberSignal.<span class=\"hljs-title function_\">emit</span>(<span class=\"hljs-number\">42</span>); <span class=\"hljs-comment\">// Output: Received value: 42</span>\n</code></pre>\n<p>W tym przykładzie zdefiniowano klasę <code>Signal</code>, która umożliwia subskrybowanie, usuwanie subskrypcji oraz emitowanie wartości do wszystkich subskrybentów.</p>\n<h3 id=\"przykład-2-zaawansowany-signal-z-typowaniem\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#przykład-2-zaawansowany-signal-z-typowaniem\">#</a>Przykład 2: Zaawansowany Signal z Typowaniem</h3>\n<p>Poniższy przykład przedstawia bardziej zaawansowaną implementację sygnału z wykorzystaniem typów generycznych:</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">Listener</span>&#x3C;T> = <span class=\"hljs-function\">(<span class=\"hljs-params\"><span class=\"hljs-attr\">value</span>: T</span>) =></span> <span class=\"hljs-built_in\">void</span>;\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Signal</span>&#x3C;T> {\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">listeners</span>: <span class=\"hljs-title class_\">Set</span>&#x3C;<span class=\"hljs-title class_\">Listener</span>&#x3C;T>> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Set</span>();\n\n  <span class=\"hljs-title function_\">subscribe</span>(<span class=\"hljs-attr\">listener</span>: <span class=\"hljs-title class_\">Listener</span>&#x3C;T>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">listeners</span>.<span class=\"hljs-title function_\">add</span>(listener);\n  }\n\n  <span class=\"hljs-title function_\">unsubscribe</span>(<span class=\"hljs-attr\">listener</span>: <span class=\"hljs-title class_\">Listener</span>&#x3C;T>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">listeners</span>.<span class=\"hljs-title function_\">delete</span>(listener);\n  }\n\n  <span class=\"hljs-title function_\">emit</span>(<span class=\"hljs-attr\">value</span>: T): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">const</span> listener <span class=\"hljs-keyword\">of</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">listeners</span>) {\n      <span class=\"hljs-title function_\">listener</span>(value);\n    }\n  }\n}\n\n<span class=\"hljs-comment\">// Użycie sygnału z typem generycznym</span>\n<span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">User</span> {\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span>;\n  <span class=\"hljs-attr\">age</span>: <span class=\"hljs-built_in\">number</span>;\n}\n\n<span class=\"hljs-keyword\">const</span> userSignal = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Signal</span>&#x3C;<span class=\"hljs-title class_\">User</span>>();\n\nuserSignal.<span class=\"hljs-title function_\">subscribe</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">user</span>) =></span> {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`User: <span class=\"hljs-subst\">${user.name}</span>, Age: <span class=\"hljs-subst\">${user.age}</span>`</span>);\n});\n\nuserSignal.<span class=\"hljs-title function_\">emit</span>({ <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"John Doe\"</span>, <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">30</span> }); <span class=\"hljs-comment\">// Output: User: John Doe, Age: 30</span>\n</code></pre>\n<p>W tym przykładzie <code>Signal</code> używa <code>Set</code> do przechowywania subskrybentów, co zapobiega wielokrotnemu dodawaniu tego samego subskrybenta. Zastosowanie typów generycznych pozwala na tworzenie sygnałów obsługujących dowolne typy danych.</p>\n<h2 id=\"zakończenie\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#zakończenie\">#</a>Zakończenie</h2>\n<p>Signal w TypeScript to potężne narzędzie do budowania reaktywnych aplikacji, które mogą automatycznie reagować na zmiany stanu. Dzięki silnemu typowaniu TypeScript, implementacja sygnałów jest bezpieczna i efektywna, co przyczynia się do tworzenia bardziej zrozumiałych i łatwiejszych w utrzymaniu kodów. Implementując sygnały, możemy znacząco uprościć zarządzanie stanem w naszych aplikacjach i poprawić ich architekturę.</p>","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/articles/signalizacja-czyli-koncept-signals-w-typescript.mdx","courses",[55,69,84],{"_10":56,"_12":57,"_14":58,"_19":63,"_21":64,"_23":65,"_25":66,"_27":67,"_29":68},"Wprowadzenie do Semantycznego HTML","Semantyczny HTML polega na używaniu elementów HTML, które jednoznacznie opisują swoje znaczenie i cel. Elementy semantyczne nie tylko definiują strukturę dokumentu, ale również pomagają w interpretacji jego zawartości zarówno przez przeglądarki, jak i przez wyszukiwarki internetowe oraz technologie wspomagające (np. czytniki ekranowe).",[59,60,61,62],"html","semantyka","seo","dostępność",[59,61],["D",1720137600000],"1ccfe5cc-7e9b-46e8-9b86-11df16df88c0","semantyczny-html","<h2 id=\"czym-jest-semantyczny-html\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#czym-jest-semantyczny-html\">#</a>Czym jest semantyczny HTML?</h2>\n<p>Semantyczny HTML polega na używaniu elementów HTML, które jednoznacznie opisują swoje znaczenie i cel. Elementy semantyczne nie tylko definiują strukturę dokumentu, ale również pomagają w interpretacji jego zawartości zarówno przez przeglądarki, jak i przez wyszukiwarki internetowe oraz technologie wspomagające (np. czytniki ekranowe).</p>\n<h2 id=\"zalety-używania-semantycznego-html\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#zalety-używania-semantycznego-html\">#</a>Zalety używania semantycznego HTML</h2>\n<ol>\n<li><strong>Lepsza czytelność kodu:</strong> Semantyczne elementy HTML sprawiają, że kod jest bardziej zrozumiały zarówno dla programistów, jak i dla narzędzi analitycznych.</li>\n<li><strong>SEO:</strong> Wyszukiwarki internetowe lepiej rozumieją i indeksują semantyczny HTML, co może pozytywnie wpłynąć na pozycjonowanie strony.</li>\n<li><strong>Dostępność:</strong> Technologie wspomagające, takie jak czytniki ekranowe, mogą lepiej interpretować i nawigować po treści semantycznie oznaczonej.</li>\n<li><strong>Łatwiejsza konserwacja:</strong> Strony z semantycznym HTML są bardziej uporządkowane, co ułatwia ich modyfikację i utrzymanie.</li>\n</ol>\n<h2 id=\"semantyczne-elementy-html\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#semantyczne-elementy-html\">#</a>Semantyczne elementy HTML</h2>\n<h3 id=\"doctype-html\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#doctype-html\">#</a><code>&#x3C;!DOCTYPE html></code></h3>\n<p>Deklaracja typu dokumentu HTML5, która informuje przeglądarkę o wersji HTML używanej w dokumencie.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"pl\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Semantyczny HTML<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-comment\">&#x3C;!-- Zawartość strony --></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<h3 id=\"header\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#header\">#</a><code>&#x3C;header></code></h3>\n<p>Zawiera wprowadzenie lub zestaw linków nawigacyjnych.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">header</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>Tytuł strony<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">nav</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ul</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#home\"</span>></span>Home<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#about\"</span>></span>About<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#contact\"</span>></span>Contact<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ul</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">nav</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">header</span>></span>\n</code></pre>\n<h3 id=\"nav\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#nav\">#</a><code>&#x3C;nav></code></h3>\n<p>Definiuje blok nawigacyjny, zawierający linki do innych części strony lub do innych stron.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">nav</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ul</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#home\"</span>></span>Home<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#about\"</span>></span>About<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#contact\"</span>></span>Contact<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ul</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">nav</span>></span>\n</code></pre>\n<h3 id=\"main\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#main\">#</a><code>&#x3C;main></code></h3>\n<p>Reprezentuje główną zawartość dokumentu. Powinien być unikalny i zawierać główny temat strony.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">main</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">article</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h2</span>></span>Artykuł<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h2</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Treść artykułu...<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">article</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">main</span>></span>\n</code></pre>\n<h3 id=\"article\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#article\">#</a><code>&#x3C;article></code></h3>\n<p>Oznacza samodzielną jednostkę treści, która mogłaby być dystrybuowana niezależnie.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">article</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h2</span>></span>Artykuł<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h2</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Treść artykułu...<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">article</span>></span>\n</code></pre>\n<h3 id=\"section\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#section\">#</a><code>&#x3C;section></code></h3>\n<p>Reprezentuje sekcję dokumentu, która zawiera grupę treści o podobnym temacie.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">section</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h2</span>></span>Sekcja<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h2</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Treść sekcji...<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">section</span>></span>\n</code></pre>\n<h3 id=\"aside\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#aside\">#</a><code>&#x3C;aside></code></h3>\n<p>Oznacza sekcję, która zawiera treści mniej istotne lub dodatkowe w stosunku do głównej treści.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">aside</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h2</span>></span>Sidebar<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h2</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Informacje poboczne...<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">aside</span>></span>\n</code></pre>\n<h3 id=\"footer\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#footer\">#</a><code>&#x3C;footer></code></h3>\n<p>Zawiera informacje o autorze, prawa autorskie, linki do polityki prywatności itp.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">footer</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span><span class=\"hljs-symbol\">&#x26;copy;</span> 2023 Moja Strona. Wszelkie prawa zastrzeżone.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">footer</span>></span>\n</code></pre>\n<h3 id=\"figure-i-figcaption\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#figure-i-figcaption\">#</a><code>&#x3C;figure></code> i <code>&#x3C;figcaption></code></h3>\n<p>Używane do oznaczenia ilustracji, diagramów lub innych elementów graficznych oraz ich opisów.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">figure</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"obrazek.jpg\"</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">\"Opis obrazka\"</span> /></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">figcaption</span>></span>Opis obrazka<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">figcaption</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">figure</span>></span>\n</code></pre>\n<h3 id=\"time\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#time\">#</a><code>&#x3C;time></code></h3>\n<p>Reprezentuje określony czas, datę lub oba.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">time</span> <span class=\"hljs-attr\">datetime</span>=<span class=\"hljs-string\">\"2023-06-29\"</span>></span>29 czerwca 2023<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">time</span>></span>\n</code></pre>\n<h3 id=\"mark\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#mark\">#</a><code>&#x3C;mark></code></h3>\n<p>Oznacza tekst, który jest wyróżniony ze względu na kontekst.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>To jest <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">mark</span>></span>ważne<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">mark</span>></span> słowo.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n</code></pre>\n<h3 id=\"address\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#address\">#</a><code>&#x3C;address></code></h3>\n<p>Oznacza informacje kontaktowe.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">address</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Jan Kowalski<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>ul. Przykładowa 1<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>00-000 Warszawa<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">address</span>></span>\n</code></pre>\n<h2 id=\"ograniczenia-i-wyzwania\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#ograniczenia-i-wyzwania\">#</a>Ograniczenia i wyzwania</h2>\n<ul>\n<li><strong>Niewłaściwe użycie:</strong> Używanie elementów semantycznych w niewłaściwy sposób może prowadzić do zamieszania i problemów z dostępnością.</li>\n<li><strong>Starsze przeglądarki:</strong> Starsze przeglądarki mogą nie obsługiwać wszystkich semantycznych elementów HTML5.</li>\n<li><strong>Większa dokładność:</strong> Tworzenie semantycznego HTML wymaga większej dbałości o szczegóły i zrozumienia struktury dokumentu.</li>\n</ul>\n<h2 id=\"podsumowanie\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#podsumowanie\">#</a>Podsumowanie</h2>\n<p>Używanie semantycznego HTML przynosi wiele korzyści, takich jak lepsza czytelność kodu, lepsze pozycjonowanie w wyszukiwarkach i większa dostępność dla osób niepełnosprawnych. Dzięki semantycznym elementom HTML możemy tworzyć bardziej strukturalne i zrozumiałe strony internetowe.</p>\n<h2 id=\"zadania-do-wykonania\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#zadania-do-wykonania\">#</a>Zadania do wykonania</h2>\n<h3 id=\"zadanie-1\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#zadanie-1\">#</a>Zadanie 1</h3>\n<p>Stwórz prostą stronę HTML z nagłówkiem (<code>&#x3C;header></code>), główną treścią (<code>&#x3C;main></code>), sekcją nawigacyjną (<code>&#x3C;nav></code>) i stopką (<code>&#x3C;footer></code>).</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"pl\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Zadanie 1<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">header</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>Moja Strona<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">header</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">nav</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ul</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#home\"</span>></span>Home<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#about\"</span>></span>About<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#contact\"</span>></span>Contact<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n      <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ul</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">nav</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">main</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Główna treść strony...<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">main</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">footer</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span><span class=\"hljs-symbol\">&#x26;copy;</span> 2023 Moja Strona. Wszelkie prawa zastrzeżone.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">footer</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n</details>\n<h3 id=\"zadanie-2\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#zadanie-2\">#</a>Zadanie 2</h3>\n<p>Dodaj do strony z Zadania 1 sekcję (<code>&#x3C;section></code>), która zawiera artykuł (<code>&#x3C;article></code>) oraz blok poboczny (<code>&#x3C;aside></code>).</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"pl\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Zadanie 2<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">header</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>Moja Strona<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">header</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">nav</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ul</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#home\"</span>></span>Home<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#about\"</span>></span>About<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#contact\"</span>></span>Contact<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n      <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ul</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">nav</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">main</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">section</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">article</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h2</span>></span>Artykuł<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h2</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Treść artykułu...<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n        <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">article</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">aside</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h2</span>></span>Blok poboczny<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h2</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Informacje poboczne...<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n        <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">aside</span>></span>\n      <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">section</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">main</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">footer</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span><span class=\"hljs-symbol\">&#x26;copy;</span> 2023 Moja Strona. Wszelkie prawa zastrzeżone.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">footer</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n</details>\n<h3 id=\"zadanie-3\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#zadanie-3\">#</a>Zadanie 3</h3>\n<p>Umieść na stronie obrazek z podpisem, używając elementów <code>&#x3C;figure></code> i <code>&#x3C;figcaption></code>.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"pl\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Zadanie 3<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">header</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>Moja Strona<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">header</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">nav</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ul</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#home\"</span>></span>Home<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#about\"</span>></span>About<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#contact\"</span>></span>Contact<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n      <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ul</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">nav</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">main</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">section</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">article</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h2</span>></span>Artykuł<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h2</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Treść artykułu...<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n        <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">article</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">aside</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h2</span>></span>Blok poboczny<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h2</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Informacje poboczne...<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n        <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">aside</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">figure</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"obrazek.jpg\"</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">\"Opis obrazka\"</span> /></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">figcaption</span>></span>Opis obrazka<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">figcaption</span>></span>\n        <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">figure</span>></span>\n      <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">section</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">main</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">footer</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span><span class=\"hljs-symbol\">&#x26;copy;</span> 2023 Moja Strona. Wszelkie prawa zastrzeżone.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">footer</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n</details>\n<p>To tyle na temat semantycznego HTML! Zachęcam do dalszego zgłębiania tematu i praktycznego zastosowania zdobytej wiedzy.</p>","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/semantyczny-html.mdx",{"_10":70,"_12":71,"_14":72,"_19":78,"_21":79,"_23":80,"_25":81,"_27":82,"_29":83},"Renesans w JS, czyli nowoczesny JavaScript","JavaScript jest językiem programowania, który jest powszechnie stosowany do tworzenia dynamicznych i interaktywnych stron internetowych. W ciągu ostatnich lat JavaScript znacznie ewoluował, wprowadzając nowe funkcje i poprawiając istniejące mechanizmy. W tym kursie omówimy najważniejsze elementy nowoczesnego JavaScript, w tym ES6 i nowsze.",[18,73,74,75,76,77],"kurs","wprowadzenie","przewodnik","web","frontend",[74,18],["D",1719705600000],"4f4583be-f21f-4deb-9036-145b7ada6a83","nowoczesny-javascript","<p>JavaScript jest językiem programowania, który jest powszechnie stosowany do tworzenia dynamicznych i interaktywnych stron internetowych. W ciągu ostatnich lat JavaScript znacznie ewoluował, wprowadzając nowe funkcje i poprawiając istniejące mechanizmy. W tym kursie omówimy najważniejsze elementy nowoczesnego JavaScript, w tym ES6 i nowsze.</p>\n<h2 id=\"zmienne-let-i-const\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#zmienne-let-i-const\">#</a>Zmienne: <code>let</code> i <code>const</code></h2>\n<p>W nowoczesnym JavaScript zmienne są definiowane za pomocą <code>let</code> i <code>const</code> zamiast <code>var</code>.</p>\n<ul>\n<li><code>let</code> pozwala na deklarację zmiennych, które mogą być zmieniane.</li>\n<li><code>const</code> pozwala na deklarację zmiennych, które są stałe i nie mogą być zmieniane.</li>\n</ul>\n<h3 id=\"przykłady\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#przykłady\">#</a>Przykłady:</h3>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let</span> zmienna = <span class=\"hljs-string\">\"To jest zmienna\"</span>;\nzmienna = <span class=\"hljs-string\">\"Zmieniona wartość\"</span>;\n\n<span class=\"hljs-keyword\">const</span> stala = <span class=\"hljs-string\">\"To jest stała\"</span>;\n<span class=\"hljs-comment\">// stala = 'Zmieniona wartość'; // Spowoduje błąd</span>\n</code></pre>\n<h2 id=\"funkcje-strzałkowe\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#funkcje-strzałkowe\">#</a>Funkcje strzałkowe</h2>\n<p>Funkcje strzałkowe to skrócony zapis funkcji, który również pozwala na lepsze zrozumienie kontekstu <code>this</code>.</p>\n<h3 id=\"przykład\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#przykład\">#</a>Przykład:</h3>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">// Standardowa funkcja</span>\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">dodaj</span>(<span class=\"hljs-params\">a, b</span>) {\n  <span class=\"hljs-keyword\">return</span> a + b;\n}\n\n<span class=\"hljs-comment\">// Funkcja strzałkowa</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">dodaj</span> = (<span class=\"hljs-params\">a, b</span>) => a + b;\n</code></pre>\n<h2 id=\"szablony-stringów-template-literals\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#szablony-stringów-template-literals\">#</a>Szablony stringów (Template Literals)</h2>\n<p>Szablony stringów umożliwiają interpolację zmiennych i wyrażenia w łańcuchach znaków za pomocą backticków (<code>`</code>).</p>\n<h3 id=\"przykład-1\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#przykład-1\">#</a>Przykład:</h3>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> name = <span class=\"hljs-string\">\"Jan\"</span>;\n<span class=\"hljs-keyword\">const</span> greeting = <span class=\"hljs-string\">`Cześć, <span class=\"hljs-subst\">${name}</span>! Jak się masz?`</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(greeting); <span class=\"hljs-comment\">// \"Cześć, Jan! Jak się masz?\"</span>\n</code></pre>\n<h2 id=\"destrukturyzacja\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#destrukturyzacja\">#</a>Destrukturyzacja</h2>\n<p>Destrukturyzacja pozwala na wyodrębnienie wartości z tablic lub obiektów i przypisanie ich do zmiennych.</p>\n<h3 id=\"przykład-z-tablicą\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#przykład-z-tablicą\">#</a>Przykład z tablicą:</h3>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> liczby = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>];\n<span class=\"hljs-keyword\">const</span> [jeden, dwa, trzy] = liczby;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(jeden, dwa, trzy); <span class=\"hljs-comment\">// 1 2 3</span>\n</code></pre>\n<h3 id=\"przykład-z-obiektem\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#przykład-z-obiektem\">#</a>Przykład z obiektem:</h3>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> osoba = { <span class=\"hljs-attr\">imie</span>: <span class=\"hljs-string\">\"Jan\"</span>, <span class=\"hljs-attr\">wiek</span>: <span class=\"hljs-number\">30</span> };\n<span class=\"hljs-keyword\">const</span> { imie, wiek } = osoba;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(imie, wiek); <span class=\"hljs-comment\">// Jan 30</span>\n</code></pre>\n<h2 id=\"spread-operator-\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#spread-operator-\">#</a>Spread operator (<code>...</code>)</h2>\n<p>Spread operator pozwala na rozwinięcie elementów tablicy lub obiektu.</p>\n<h3 id=\"przykład-z-tablicą-1\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#przykład-z-tablicą-1\">#</a>Przykład z tablicą:</h3>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> liczby = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>];\n<span class=\"hljs-keyword\">const</span> wiecejLiczb = [...liczby, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">6</span>];\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(wiecejLiczb); <span class=\"hljs-comment\">// [1, 2, 3, 4, 5, 6]</span>\n</code></pre>\n<h3 id=\"przykład-z-obiektem-1\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#przykład-z-obiektem-1\">#</a>Przykład z obiektem:</h3>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> osoba = { <span class=\"hljs-attr\">imie</span>: <span class=\"hljs-string\">\"Jan\"</span>, <span class=\"hljs-attr\">wiek</span>: <span class=\"hljs-number\">30</span> };\n<span class=\"hljs-keyword\">const</span> nowaOsoba = { ...osoba, <span class=\"hljs-attr\">miasto</span>: <span class=\"hljs-string\">\"Warszawa\"</span> };\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(nowaOsoba); <span class=\"hljs-comment\">// { imie: 'Jan', wiek: 30, miasto: 'Warszawa' }</span>\n</code></pre>\n<h2 id=\"promisy\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#promisy\">#</a>Promisy</h2>\n<p>Promisy są używane do obsługi operacji asynchronicznych.</p>\n<h3 id=\"przykład-2\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#przykład-2\">#</a>Przykład:</h3>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> obietnica = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject</span>) =></span> {\n  <span class=\"hljs-keyword\">const</span> sukces = <span class=\"hljs-literal\">true</span>;\n\n  <span class=\"hljs-keyword\">if</span> (sukces) {\n    <span class=\"hljs-title function_\">resolve</span>(<span class=\"hljs-string\">\"Operacja zakończona sukcesem!\"</span>);\n  } <span class=\"hljs-keyword\">else</span> {\n    <span class=\"hljs-title function_\">reject</span>(<span class=\"hljs-string\">\"Operacja zakończona niepowodzeniem.\"</span>);\n  }\n});\n\nobietnica\n  .<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">result</span>) =></span> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(result))\n  .<span class=\"hljs-title function_\">catch</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">error</span>) =></span> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(error));\n</code></pre>\n<h2 id=\"asyncawait\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#asyncawait\">#</a>Async/Await</h2>\n<p>Async/Await to składnia, która upraszcza pracę z promisami i sprawia, że kod asynchroniczny wygląda jak kod synchroniczny.</p>\n<h3 id=\"przykład-3\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#przykład-3\">#</a>Przykład:</h3>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">asyncFunction</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\"></span>) => {\n  <span class=\"hljs-keyword\">try</span> {\n    <span class=\"hljs-keyword\">const</span> result = <span class=\"hljs-keyword\">await</span> obietnica;\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(result);\n  } <span class=\"hljs-keyword\">catch</span> (error) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(error);\n  }\n};\n\n<span class=\"hljs-title function_\">asyncFunction</span>();\n</code></pre>\n<h2 id=\"zadania-do-wykonania\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#zadania-do-wykonania\">#</a>Zadania do wykonania</h2>\n<h3 id=\"zadanie-1\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#zadanie-1\">#</a>Zadanie 1</h3>\n<p>Napisz funkcję strzałkową, która przyjmuje dwa argumenty i zwraca ich sumę.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">dodaj</span> = (<span class=\"hljs-params\">a, b</span>) => a + b;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title function_\">dodaj</span>(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>)); <span class=\"hljs-comment\">// 5</span>\n</code></pre>\n</details>\n<h3 id=\"zadanie-2\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#zadanie-2\">#</a>Zadanie 2</h3>\n<p>Utwórz obiekt reprezentujący samochód, z atrybutami <code>marka</code>, <code>model</code> i <code>rok</code>. Następnie użyj destrukturyzacji, aby wyodrębnić te wartości i wyświetlić je w konsoli.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> samochod = { <span class=\"hljs-attr\">marka</span>: <span class=\"hljs-string\">\"Toyota\"</span>, <span class=\"hljs-attr\">model</span>: <span class=\"hljs-string\">\"Corolla\"</span>, <span class=\"hljs-attr\">rok</span>: <span class=\"hljs-number\">2020</span> };\n<span class=\"hljs-keyword\">const</span> { marka, model, rok } = samochod;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(marka, model, rok); <span class=\"hljs-comment\">// Toyota Corolla 2020</span>\n</code></pre>\n</details>\n<h3 id=\"zadanie-3\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#zadanie-3\">#</a>Zadanie 3</h3>\n<p>Stwórz tablicę liczb od 1 do 5. Następnie użyj operatora spread, aby dodać liczby 6 i 7 do tej tablicy.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> liczby = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>];\n\n<span class=\"hljs-keyword\">const</span> wiecejLiczb = [...liczby, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">7</span>];\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(wiecejLiczb); <span class=\"hljs-comment\">// [1, 2, 3, 4, 5, 6, 7]</span>\n</code></pre>\n</details>\n<h3 id=\"zadanie-4\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#zadanie-4\">#</a>Zadanie 4</h3>\n<p>Napisz funkcję asynchroniczną, która używa promisów do symulacji opóźnienia (np. za pomocą <code>setTimeout</code>). Funkcja powinna zwracać wynik po 2 sekundach.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">delay</span> = (<span class=\"hljs-params\">ms</span>) => <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve</span>) =></span> <span class=\"hljs-built_in\">setTimeout</span>(resolve, ms));\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">asyncFunction</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\"></span>) => {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">\"Czekam 2 sekundy...\"</span>);\n  <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">delay</span>(<span class=\"hljs-number\">2000</span>);\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">\"2 sekundy minęły!\"</span>);\n};\n\n<span class=\"hljs-title function_\">asyncFunction</span>();\n</code></pre>\n</details>\n<p>To tyle na temat podstaw nowoczesnego JavaScript! Zachęcam do dalszego eksperymentowania i zgłębiania tego tematu, aby tworzyć bardziej zaawansowane i interaktywne aplikacje.</p>","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/nowoczesny-javascript.mdx",{"_10":85,"_12":86,"_14":87,"_19":93,"_21":94,"_23":95,"_25":96,"_27":97,"_29":98},"Wprowadzenie do metodyki BEM","Czym jest BEM? BEM (Block, Element, Modifier) to metodyka nazewnictwa klas CSS, która pomaga tworzyć komponenty interfejsu użytkownika w sposób modularny i łatwy do utrzymania. BEM dzieli interfejs na bloki, elementy i modyfikatory, co pozwala na lepszą organizację kodu CSS.",[73,88,89,90,91,92,59],"css","bem","metodyka","metodyki","stylowanie",[74,88,59],["D",1719705600000],"7058478e-0cf4-4f82-b624-c95922a7f49a","szybszy-css-czyli-wprowadzenie-do-bem","<h2 id=\"czym-jest-bem\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#czym-jest-bem\">#</a>Czym jest BEM?</h2>\n<p>BEM (Block, Element, Modifier) to metodyka nazewnictwa klas CSS, która pomaga tworzyć komponenty interfejsu użytkownika w sposób modularny i łatwy do utrzymania. BEM dzieli interfejs na bloki, elementy i modyfikatory, co pozwala na lepszą organizację kodu CSS.</p>\n<h2 id=\"struktura-bem\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#struktura-bem\">#</a>Struktura BEM</h2>\n<h3 id=\"blok\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#blok\">#</a>Blok</h3>\n<p>Blok jest samodzielnym komponentem, który może istnieć niezależnie. Może to być przycisk, nagłówek, formularz itp. Blok jest reprezentowany przez klasę główną.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"block\"</span>></span>Treść bloku<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n</code></pre>\n<h3 id=\"element\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#element\">#</a>Element</h3>\n<p>Element jest częścią bloku, która nie może istnieć bez niego. Elementy są reprezentowane przez klasę bloku, po której następuje podwójny podkreślnik (<code>__</code>).</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"block\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"block__element\"</span>></span>Treść elementu<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n</code></pre>\n<h3 id=\"modyfikator\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#modyfikator\">#</a>Modyfikator</h3>\n<p>Modyfikator zmienia wygląd lub zachowanie bloku lub elementu. Modyfikatory są reprezentowane przez pojedynczy podkreślnik (<code>_</code>).</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"block block--modifier\"</span>></span>Treść zmodyfikowanego bloku<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"block__element block__element--modifier\"</span>></span>\n  Treść zmodyfikowanego elementu\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n</code></pre>\n<h2 id=\"przykład\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#przykład\">#</a>Przykład</h2>\n<p>Przykładowy kod HTML z zastosowaniem BEM:</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"button button--primary\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"button__text\"</span>></span>Kliknij mnie<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">span</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n</code></pre>\n<p>Odpowiadający kod CSS:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.button</span> {\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">10px</span> <span class=\"hljs-number\">20px</span>;\n  <span class=\"hljs-attribute\">border</span>: none;\n  <span class=\"hljs-attribute\">cursor</span>: pointer;\n}\n\n<span class=\"hljs-selector-class\">.button--primary</span> {\n  <span class=\"hljs-attribute\">background-color</span>: blue;\n  <span class=\"hljs-attribute\">color</span>: white;\n}\n\n<span class=\"hljs-selector-class\">.button__text</span> {\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">16px</span>;\n}\n</code></pre>\n<h2 id=\"zasady-bem\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#zasady-bem\">#</a>Zasady BEM</h2>\n<ol>\n<li><strong>Nazwa bloku:</strong> Powinna być krótka i jednoznaczna, opisująca funkcję lub zawartość komponentu.</li>\n<li><strong>Nazwa elementu:</strong> Powinna jasno określać, co robi element w kontekście bloku.</li>\n<li><strong>Nazwa modyfikatora:</strong> Powinna opisywać, jak zmienia się blok lub element.</li>\n</ol>\n<h2 id=\"przykłady\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#przykłady\">#</a>Przykłady</h2>\n<h3 id=\"formularz-logowania\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#formularz-logowania\">#</a>Formularz logowania</h3>\n<p>HTML:</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form form--login\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form__group\"</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form__label\"</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"username\"</span>></span>Nazwa użytkownika<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">label</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form__input\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"username\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"username\"</span> /></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form__group\"</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form__label\"</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"password\"</span>></span>Hasło<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">label</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form__input\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"password\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"password\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"password\"</span> /></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form__button form__button--submit\"</span>></span>Zaloguj się<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">button</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">form</span>></span>\n</code></pre>\n<p>CSS:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.form</span> {\n  <span class=\"hljs-attribute\">max-width</span>: <span class=\"hljs-number\">300px</span>;\n  <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">0</span> auto;\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">20px</span>;\n  <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">1px</span> solid <span class=\"hljs-number\">#ccc</span>;\n  <span class=\"hljs-attribute\">border-radius</span>: <span class=\"hljs-number\">5px</span>;\n}\n\n<span class=\"hljs-selector-class\">.form--login</span> {\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#f9f9f9</span>;\n}\n\n<span class=\"hljs-selector-class\">.form__group</span> {\n  <span class=\"hljs-attribute\">margin-bottom</span>: <span class=\"hljs-number\">15px</span>;\n}\n\n<span class=\"hljs-selector-class\">.form__label</span> {\n  <span class=\"hljs-attribute\">display</span>: block;\n  <span class=\"hljs-attribute\">margin-bottom</span>: <span class=\"hljs-number\">5px</span>;\n  <span class=\"hljs-attribute\">font-weight</span>: bold;\n}\n\n<span class=\"hljs-selector-class\">.form__input</span> {\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100%</span>;\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">8px</span>;\n  <span class=\"hljs-attribute\">box-sizing</span>: border-box;\n}\n\n<span class=\"hljs-selector-class\">.form__button</span> {\n  <span class=\"hljs-attribute\">display</span>: inline-block;\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">10px</span> <span class=\"hljs-number\">20px</span>;\n  <span class=\"hljs-attribute\">border</span>: none;\n  <span class=\"hljs-attribute\">cursor</span>: pointer;\n}\n\n<span class=\"hljs-selector-class\">.form__button--submit</span> {\n  <span class=\"hljs-attribute\">background-color</span>: blue;\n  <span class=\"hljs-attribute\">color</span>: white;\n}\n</code></pre>\n<h3 id=\"zadania-do-wykonania\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#zadania-do-wykonania\">#</a>Zadania do wykonania</h3>\n<h4 id=\"zadanie-1\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#zadanie-1\">#</a>Zadanie 1</h4>\n<p>Utwórz komponent karty produktu (<code>product-card</code>) z elementami dla tytułu (<code>product-card__title</code>), opisu (<code>product-card__description</code>) i ceny (<code>product-card__price</code>). Dodaj modyfikator dla karty wyróżnionej (<code>product-card--featured</code>).</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<p>HTML:</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"product-card product-card--featured\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h2</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"product-card__title\"</span>></span>Nazwa produktu<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h2</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"product-card__description\"</span>></span>Opis produktu<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"product-card__price\"</span>></span>99,99 zł<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">span</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n</code></pre>\n<p>CSS:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.product-card</span> {\n  <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">1px</span> solid <span class=\"hljs-number\">#ccc</span>;\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">15px</span>;\n  <span class=\"hljs-attribute\">border-radius</span>: <span class=\"hljs-number\">5px</span>;\n}\n\n<span class=\"hljs-selector-class\">.product-card--featured</span> {\n  <span class=\"hljs-attribute\">border-color</span>: gold;\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#fffbf0</span>;\n}\n\n<span class=\"hljs-selector-class\">.product-card__title</span> {\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">18px</span>;\n  <span class=\"hljs-attribute\">margin-bottom</span>: <span class=\"hljs-number\">10px</span>;\n}\n\n<span class=\"hljs-selector-class\">.product-card__description</span> {\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">14px</span>;\n  <span class=\"hljs-attribute\">margin-bottom</span>: <span class=\"hljs-number\">15px</span>;\n}\n\n<span class=\"hljs-selector-class\">.product-card__price</span> {\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">16px</span>;\n  <span class=\"hljs-attribute\">font-weight</span>: bold;\n}\n</code></pre>\n</details>\n<h4 id=\"zadanie-2\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#zadanie-2\">#</a>Zadanie 2</h4>\n<p>Stwórz nawigację (<code>nav</code>) z elementami dla pozycji nawigacji (<code>nav__item</code>) i linków (<code>nav__link</code>). Dodaj modyfikator dla aktywnego linku (<code>nav__link--active</code>).</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n  HTML:\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">nav</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"nav\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ul</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"nav__item\"</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"nav__link nav__link--active\"</span>></span>Home<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"nav__item\"</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"nav__link\"</span>></span>O nas<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"nav__item\"</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"nav__link\"</span>></span>Kontakt<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ul</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">nav</span>></span>\n</code></pre>\n<p>CSS:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.nav</span> {\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#333</span>;\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">10px</span>;\n}\n\n<span class=\"hljs-selector-class\">.nav__item</span> {\n  <span class=\"hljs-attribute\">display</span>: inline;\n  <span class=\"hljs-attribute\">margin-right</span>: <span class=\"hljs-number\">15px</span>;\n}\n\n<span class=\"hljs-selector-class\">.nav__link</span> {\n  <span class=\"hljs-attribute\">color</span>: white;\n  <span class=\"hljs-attribute\">text-decoration</span>: none;\n}\n\n<span class=\"hljs-selector-class\">.nav__link--active</span> {\n  <span class=\"hljs-attribute\">font-weight</span>: bold;\n  <span class=\"hljs-attribute\">text-decoration</span>: underline;\n}\n</code></pre>\n</details>\n<h4 id=\"zadanie-3\" class=\"scroll-mt-20 lg:scroll-mt-4\"><a class=\"mr-1.5 no-underline hover:underline focus-visible:underline\" href=\"#zadanie-3\">#</a>Zadanie 3</h4>\n<p>Utwórz sekcję artykułu (<code>article</code>) z elementami dla nagłówka (<code>article__header</code>), treści (<code>article__content</code>) i stopki (<code>article__footer</code>). Dodaj modyfikator dla nagłówka z obrazkiem (<code>article__header--with-image</code>).</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n  HTML:\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">article</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"article\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">header</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"article__header article__header--with-image\"</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>Tytuł artykułu<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"image.jpg\"</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">\"Obrazek w nagłówku\"</span> /></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">header</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">section</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"article__content\"</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Treść artykułu...<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">section</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">footer</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"article__footer\"</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Stopka artykułu<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">footer</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">article</span>></span>\n</code></pre>\n<p>CSS:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.article</span> {\n  <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">1px</span> solid <span class=\"hljs-number\">#ddd</span>;\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">20px</span>;\n  <span class=\"hljs-attribute\">border-radius</span>: <span class=\"hljs-number\">5px</span>;\n}\n\n<span class=\"hljs-selector-class\">.article__header</span> {\n  <span class=\"hljs-attribute\">margin-bottom</span>: <span class=\"hljs-number\">15px</span>;\n}\n\n<span class=\"hljs-selector-class\">.article__header--with-image</span> <span class=\"hljs-selector-tag\">img</span> {\n  <span class=\"hljs-attribute\">display</span>: block;\n  <span class=\"hljs-attribute\">max-width</span>: <span class=\"hljs-number\">100%</span>;\n  <span class=\"hljs-attribute\">height</span>: auto;\n}\n\n<span class=\"hljs-selector-class\">.article__content</span> {\n  <span class=\"hljs-attribute\">margin-bottom</span>: <span class=\"hljs-number\">15px</span>;\n}\n\n<span class=\"hljs-selector-class\">.article__footer</span> {\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">14px</span>;\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#777</span>;\n}\n</code></pre>\n</details>\n<p>To tyle na temat podstaw metodyki BEM! Zachęcam do dalszego eksperymentowania i zgłębiania tego tematu, aby tworzyć bardziej modularne i łatwe do utrzymania style CSS.</p>","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/szybszy-css-czyli-wprowadzenie-do-bem.mdx"]
