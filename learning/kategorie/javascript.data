[{"_1":2},"course-list-with-category",{"_3":4},"data",{"_5":6,"_7":8,"_18":19},"category","javascript","categories",[9,10,11,6,12,13,14,15,16,17],"wprowadzenie","html","typescript","css","react","wzorce-projektowe","git","devops","seo","courses",[20,96],{"_21":22,"_23":24,"_25":26,"_7":32,"_33":34,"_35":36,"_88":89,"_90":91,"_92":93,"_94":95},"title","Renesans w JS, czyli nowoczesny JavaScript","description","JavaScript jest językiem programowania, który jest powszechnie stosowany do tworzenia dynamicznych i interaktywnych stron internetowych. W ciągu ostatnich lat JavaScript znacznie ewoluował, wprowadzając nowe funkcje i poprawiając istniejące mechanizmy. W tym kursie omówimy najważniejsze elementy nowoczesnego JavaScript, w tym ES6 i nowsze.","keywords",[6,27,9,28,29,30,31],"kurs","przewodnik","web","frontend","learning",[9,6],"createdAt",["D",1719705600000],"quiz",{"_21":37,"_38":39},"Quiz: Podstawy nowoczesnego JavaScript","questions",[40,53,62,71,79],{"_41":42,"_43":44,"_49":50,"_51":52},"question","<p>Jaką główną różnicę między <code>let</code> a <code>var</code> podkreśla się w nowoczesnym JavaScript?</p>","options",[45,46,47,48],"Obie są identyczne","`let` nie pozwala na przyjmowanie wartości domyślnej","Zakres blokowy (`block scope`) w `let`","`var` nie istnieje w nowoczesnym JS","answer",2,"explanation","`let` posiada zakres blokowy, podczas gdy `var` ma zakres funkcyjny.",{"_41":54,"_43":55,"_49":60,"_51":61},"<p>Co zwróci poniższy kod?</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> arr = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>];\n<span class=\"hljs-keyword\">const</span> [a, , b] = arr;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(a, b);\n</code></pre>",[56,57,58,59],"1 2","2 3","undefined 3","1 3",3,"Drugi element jest pomijany. Wynik to 1 i 3.",{"_41":63,"_43":64,"_49":69,"_51":70},"<p>Co robi operator spread (<code>...</code>)?</p>",[65,66,67,68],"Tworzy nowy Promise","Rozwija elementy tablicy lub właściwości obiektu","Deklaruje zmienną stałą","Łączy Promise'y",1,"Spread operator służy do rozwijania/skopiowania elementów tablicy lub obiektu.",{"_41":72,"_43":73,"_49":60,"_51":78},"<p>Czym różni się funkcja strzałkowa od zwykłej funkcji pod względem <code>this</code>?</p>",[74,75,76,77],"Funkcja strzałkowa tworzy nowy kontekst `this`","Nie ma różnicy","Funkcje strzałkowe nie działają w JS","Funkcja strzałkowa nie ma własnego `this`","Funkcje strzałkowe nie posiadają własnego `this` — dziedziczą go z otoczenia.",{"_41":80,"_43":81,"_49":86,"_51":87},"<p>Jaką wartość zwróci poniższy kod?</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">test</span>(<span class=\"hljs-params\"></span>) { <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">5</span>; }\n<span class=\"hljs-title function_\">test</span>().<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-property\">log</span>);\n</code></pre>",[82,83,84,85],"5","Promise {<fulfilled>: 5}","undefined","Błąd",0,"Funkcja async zawsze zwraca Promise, ale `then` wypisze wartość 5.","id","650ed4ab-6054-4ee6-8fb9-dfeb0919c59d","slug","nowoczesny-javascript","content","","resourceUrl","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/nowoczesny-javascript.md",{"_21":97,"_23":98,"_25":99,"_7":100,"_33":101,"_35":102,"_88":143,"_90":144,"_92":93,"_94":145},"Wprowadzenie do JavaScript","JavaScript jest językiem programowania, który jest powszechnie stosowany do tworzenia dynamicznych i interaktywnych stron internetowych. W tym kursie omówimy podstawy JavaScript, w tym zmienne, typy danych, operatory, struktury kontrolne, funkcje oraz obiekty.",[6,27,9,28,29,30,31],[9,6],["D",1719705600000],{"_21":103,"_38":104},"Quiz: Podstawy JavaScript",[105,113,121,129,137],{"_41":106,"_43":107,"_49":50,"_51":112},"<p>Które słowo kluczowe powinieneś użyć do zadeklarowania stałej wartości w JavaScript?</p>",[108,109,110,111],"let","var","const","static","Stałe deklarujemy za pomocą const.",{"_41":114,"_43":115,"_49":50,"_51":120},"<p>Jakie typy danych NIE występują w JavaScript?</p>",[116,117,118,119],"Number","String","Character","Boolean","Typ 'Character' nie istnieje w JavaScript.",{"_41":122,"_43":123,"_49":86,"_51":128},"<p>Jak wygląda przykładowa funkcja strzałkowa, która zwraca sumę dwóch liczb?</p>",[124,125,126,127],"const suma = (a, b) => a + b;","function suma(a, b) { return a + b; }","let suma = add(a, b);","sum(a, b) => a + b;","Funkcja strzałkowa: const suma = (a, b) => a + b;",{"_41":130,"_43":131,"_49":86,"_51":136},"<p>Jak uzyskać długość tablicy w JavaScript?</p>",[132,133,134,135],"array.length","length(array)","array.size()","array.count","array.length zwraca długość tablicy.",{"_41":138,"_43":139,"_49":60,"_51":142},"<p>Co wypisze poniższy kod?</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let</span> x = <span class=\"hljs-number\">10</span>;\n<span class=\"hljs-keyword\">if</span> (x > <span class=\"hljs-number\">5</span>) { <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'OK'</span>); } <span class=\"hljs-keyword\">else</span> { <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'NIE'</span>); }\n</code></pre>",[140,84,82,141],"NIE","OK","Ponieważ 10 > 5, warunek jest prawdziwy i wypisze 'OK'.","4fe7fe34-4ec2-4ca4-9612-7d44f3306f43","wprowadzenie-do-javascript","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/wprowadzenie-do-javascript.md"]
