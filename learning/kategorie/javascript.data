[{"_1":2},"course-list-with-category",{"_3":4},"data",{"_5":6,"_7":8,"_18":19},"category","javascript","categories",[9,10,11,6,12,13,14,15,16,17],"wprowadzenie","html","typescript","css","react","wzorce-projektowe","git","devops","seo","courses",[20,95],{"_21":22,"_23":24,"_25":26,"_7":32,"_33":34,"_35":36,"_87":88,"_89":90,"_91":92,"_93":94},"title","Renesans w JS, czyli nowoczesny JavaScript","description","JavaScript jest językiem programowania, który jest powszechnie stosowany do tworzenia dynamicznych i interaktywnych stron internetowych. W ciągu ostatnich lat JavaScript znacznie ewoluował, wprowadzając nowe funkcje i poprawiając istniejące mechanizmy. W tym kursie omówimy najważniejsze elementy nowoczesnego JavaScript, w tym ES6 i nowsze.","keywords",[6,27,9,28,29,30,31],"kurs","przewodnik","web","frontend","learning",[9,6],"createdAt",["D",1719705600000],"quiz",{"_21":37,"_38":39},"Quiz: Podstawy nowoczesnego JavaScript","questions",[40,53,62,70,79],{"_41":42,"_43":44,"_49":50,"_51":52},"question","<p>Jaką główną różnicę między <code>let</code> a <code>var</code> podkreśla się w nowoczesnym JavaScript?</p>","options",[45,46,47,48],"`let` nie pozwala na przyjmowanie wartości domyślnej","Obie są identyczne","`var` nie istnieje w nowoczesnym JS","Zakres blokowy (`block scope`) w `let`","answer",3,"explanation","`let` posiada zakres blokowy, podczas gdy `var` ma zakres funkcyjny.",{"_41":54,"_43":55,"_49":60,"_51":61},"<p>Co zwróci poniższy kod?</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> arr = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>];\n<span class=\"hljs-keyword\">const</span> [a, , b] = arr;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(a, b);\n</code></pre>",[56,57,58,59],"1 3","undefined 3","1 2","2 3",0,"Drugi element jest pomijany. Wynik to 1 i 3.",{"_41":63,"_43":64,"_49":60,"_51":69},"<p>Co robi operator spread (<code>...</code>)?</p>",[65,66,67,68],"Rozwija elementy tablicy lub właściwości obiektu","Tworzy nowy Promise","Deklaruje zmienną stałą","Łączy Promise'y","Spread operator służy do rozwijania/skopiowania elementów tablicy lub obiektu.",{"_41":71,"_43":72,"_49":77,"_51":78},"<p>Czym różni się funkcja strzałkowa od zwykłej funkcji pod względem <code>this</code>?</p>",[73,74,75,76],"Nie ma różnicy","Funkcja strzałkowa nie ma własnego `this`","Funkcje strzałkowe nie działają w JS","Funkcja strzałkowa tworzy nowy kontekst `this`",1,"Funkcje strzałkowe nie posiadają własnego `this` — dziedziczą go z otoczenia.",{"_41":80,"_43":81,"_49":77,"_51":86},"<p>Jaką wartość zwróci poniższy kod?</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">test</span>(<span class=\"hljs-params\"></span>) { <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">5</span>; }\n<span class=\"hljs-title function_\">test</span>().<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-property\">log</span>);\n</code></pre>",[82,83,84,85],"Promise {<fulfilled>: 5}","5","Błąd","undefined","Funkcja async zawsze zwraca Promise, ale `then` wypisze wartość 5.","id","588af7b1-ffed-435c-8621-c83fa4ffb285","slug","nowoczesny-javascript","content","","resourceUrl","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/nowoczesny-javascript.md",{"_21":96,"_23":97,"_25":98,"_7":99,"_33":100,"_35":101,"_87":142,"_89":143,"_91":92,"_93":144},"Wprowadzenie do JavaScript","JavaScript jest językiem programowania, który jest powszechnie stosowany do tworzenia dynamicznych i interaktywnych stron internetowych. W tym kursie omówimy podstawy JavaScript, w tym zmienne, typy danych, operatory, struktury kontrolne, funkcje oraz obiekty.",[6,27,9,28,29,30,31],[9,6],["D",1719705600000],{"_21":102,"_38":103},"Quiz: Podstawy JavaScript",[104,112,120,128,136],{"_41":105,"_43":106,"_49":50,"_51":111},"<p>Które słowo kluczowe powinieneś użyć do zadeklarowania stałej wartości w JavaScript?</p>",[107,108,109,110],"static","let","var","const","Stałe deklarujemy za pomocą const.",{"_41":113,"_43":114,"_49":77,"_51":119},"<p>Jakie typy danych NIE występują w JavaScript?</p>",[115,116,117,118],"String","Character","Number","Boolean","Typ 'Character' nie istnieje w JavaScript.",{"_41":121,"_43":122,"_49":50,"_51":127},"<p>Jak wygląda przykładowa funkcja strzałkowa, która zwraca sumę dwóch liczb?</p>",[123,124,125,126],"sum(a, b) => a + b;","function suma(a, b) { return a + b; }","let suma = add(a, b);","const suma = (a, b) => a + b;","Funkcja strzałkowa: const suma = (a, b) => a + b;",{"_41":129,"_43":130,"_49":60,"_51":135},"<p>Jak uzyskać długość tablicy w JavaScript?</p>",[131,132,133,134],"array.length","array.count","length(array)","array.size()","array.length zwraca długość tablicy.",{"_41":137,"_43":138,"_49":50,"_51":141},"<p>Co wypisze poniższy kod?</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let</span> x = <span class=\"hljs-number\">10</span>;\n<span class=\"hljs-keyword\">if</span> (x > <span class=\"hljs-number\">5</span>) { <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'OK'</span>); } <span class=\"hljs-keyword\">else</span> { <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'NIE'</span>); }\n</code></pre>",[83,139,85,140],"NIE","OK","Ponieważ 10 > 5, warunek jest prawdziwy i wypisze 'OK'.","47e0bac8-f3b4-48eb-9908-60d7e3e861dc","wprowadzenie-do-javascript","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/wprowadzenie-do-javascript.md"]
