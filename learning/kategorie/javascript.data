[{"_1":2},"course-list-with-category",{"_3":4},"data",{"_5":6,"_7":8,"_20":21},"category","javascript","categories",[9,10,11,12,6,13,14,15,16,17,18,19],"wprowadzenie","html","typescript","bazy-danych","css","sql","react","wzorce-projektowe","git","devops","seo","courses",[22,97],{"_23":24,"_25":26,"_27":28,"_7":34,"_35":36,"_37":38,"_89":90,"_91":92,"_93":94,"_95":96},"title","Renesans w JS, czyli nowoczesny JavaScript","description","JavaScript jest językiem programowania, który jest powszechnie stosowany do tworzenia dynamicznych i interaktywnych stron internetowych. W ciągu ostatnich lat JavaScript znacznie ewoluował, wprowadzając nowe funkcje i poprawiając istniejące mechanizmy. W tym kursie omówimy najważniejsze elementy nowoczesnego JavaScript, w tym ES6 i nowsze.","keywords",[6,29,9,30,31,32,33],"kurs","przewodnik","web","frontend","learning",[9,6],"createdAt",["D",1719705600000],"quiz",{"_23":39,"_40":41},"Quiz: Podstawy nowoczesnego JavaScript","questions",[42,55,64,73,81],{"_43":44,"_45":46,"_51":52,"_53":54},"question","<p>Jaką główną różnicę między <code>let</code> a <code>var</code> podkreśla się w nowoczesnym JavaScript?</p>","options",[47,48,49,50],"`var` nie istnieje w nowoczesnym JS","Zakres blokowy (`block scope`) w `let`","`let` nie pozwala na przyjmowanie wartości domyślnej","Obie są identyczne","answer",1,"explanation","`let` posiada zakres blokowy, podczas gdy `var` ma zakres funkcyjny.",{"_43":56,"_45":57,"_51":62,"_53":63},"<p>Co zwróci poniższy kod?</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> arr = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>];\n<span class=\"hljs-keyword\">const</span> [a, , b] = arr;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(a, b);\n</code></pre>",[58,59,60,61],"1 3","2 3","1 2","undefined 3",0,"Drugi element jest pomijany. Wynik to 1 i 3.",{"_43":65,"_45":66,"_51":71,"_53":72},"<p>Co robi operator spread (<code>...</code>)?</p>",[67,68,69,70],"Tworzy nowy Promise","Łączy Promise'y","Rozwija elementy tablicy lub właściwości obiektu","Deklaruje zmienną stałą",2,"Spread operator służy do rozwijania/skopiowania elementów tablicy lub obiektu.",{"_43":74,"_45":75,"_51":71,"_53":80},"<p>Czym różni się funkcja strzałkowa od zwykłej funkcji pod względem <code>this</code>?</p>",[76,77,78,79],"Funkcja strzałkowa tworzy nowy kontekst `this`","Nie ma różnicy","Funkcja strzałkowa nie ma własnego `this`","Funkcje strzałkowe nie działają w JS","Funkcje strzałkowe nie posiadają własnego `this` — dziedziczą go z otoczenia.",{"_43":82,"_45":83,"_51":62,"_53":88},"<p>Jaką wartość zwróci poniższy kod?</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">test</span>(<span class=\"hljs-params\"></span>) { <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">5</span>; }\n<span class=\"hljs-title function_\">test</span>().<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-property\">log</span>);\n</code></pre>",[84,85,86,87],"5","Błąd","Promise {<fulfilled>: 5}","undefined","Funkcja async zawsze zwraca Promise, ale `then` wypisze wartość 5.","id","2abbc768-fdcf-4449-a322-72867d9bf1f8","slug","nowoczesny-javascript","content","","resourceUrl","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/nowoczesny-javascript.md",{"_23":98,"_25":99,"_27":100,"_7":101,"_35":102,"_37":103,"_89":144,"_91":145,"_93":94,"_95":146},"Wprowadzenie do JavaScript","JavaScript jest językiem programowania, który jest powszechnie stosowany do tworzenia dynamicznych i interaktywnych stron internetowych. W tym kursie omówimy podstawy JavaScript, w tym zmienne, typy danych, operatory, struktury kontrolne, funkcje oraz obiekty.",[6,29,9,30,31,32,33],[9,6],["D",1719705600000],{"_23":104,"_40":105},"Quiz: Podstawy JavaScript",[106,114,122,130,138],{"_43":107,"_45":108,"_51":71,"_53":113},"<p>Które słowo kluczowe powinieneś użyć do zadeklarowania stałej wartości w JavaScript?</p>",[109,110,111,112],"static","var","const","let","Stałe deklarujemy za pomocą const.",{"_43":115,"_45":116,"_51":62,"_53":121},"<p>Jakie typy danych NIE występują w JavaScript?</p>",[117,118,119,120],"Character","Number","Boolean","String","Typ 'Character' nie istnieje w JavaScript.",{"_43":123,"_45":124,"_51":62,"_53":129},"<p>Jak wygląda przykładowa funkcja strzałkowa, która zwraca sumę dwóch liczb?</p>",[125,126,127,128],"const suma = (a, b) => a + b;","function suma(a, b) { return a + b; }","sum(a, b) => a + b;","let suma = add(a, b);","Funkcja strzałkowa: const suma = (a, b) => a + b;",{"_43":131,"_45":132,"_51":52,"_53":137},"<p>Jak uzyskać długość tablicy w JavaScript?</p>",[133,134,135,136],"length(array)","array.length","array.count","array.size()","array.length zwraca długość tablicy.",{"_43":139,"_45":140,"_51":52,"_53":143},"<p>Co wypisze poniższy kod?</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let</span> x = <span class=\"hljs-number\">10</span>;\n<span class=\"hljs-keyword\">if</span> (x > <span class=\"hljs-number\">5</span>) { <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'OK'</span>); } <span class=\"hljs-keyword\">else</span> { <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'NIE'</span>); }\n</code></pre>",[87,141,142,84],"OK","NIE","Ponieważ 10 > 5, warunek jest prawdziwy i wypisze 'OK'.","4b7c939e-28da-4808-899b-e74632e67934","wprowadzenie-do-javascript","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/wprowadzenie-do-javascript.md"]
