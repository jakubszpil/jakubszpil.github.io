[{"_1":2},"course-details",{"_3":4},"data",{"_5":6,"_7":8,"_9":10,"_17":18,"_19":20,"_21":22,"_73":74,"_75":76,"_77":78,"_79":80,"_81":82},"title","Czym jest DOM?","description","Czym jest DOM? DOM (Document Object Model) to interfejs programistyczny dla dokumentów HTML i XML. Umożliwia dynamiczne manipulowanie strukturą, stylem i treścią dokumentów. DOM reprezentuje dokument jako drzewo obiektów, gdzie każdy element, atrybut i tekst w dokumencie jest węzłem drzewa.","keywords",[11,12,13,14,15,16],"kurs","html","dom","struktura","wprowadzenie","learning","categories",[12],"createdAt","2024-06-30T00:00:00.000Z","quiz",{"_5":23,"_24":25},"Quiz: Podstawy DOM","questions",[26,39,48,56,64],{"_27":28,"_29":30,"_35":36,"_37":38},"question","<p>Co oznacza skrót DOM w kontekście stron internetowych?</p>","options",[31,32,33,34],"Dynamic Output Mapper","Data Oriented Module","Document Object Model","Document Option Method","answer",2,"explanation","DOM to Document Object Model – model obiektowy dokumentu HTML lub XML.",{"_27":40,"_29":41,"_35":46,"_37":47},"<p>Jaką strukturę prezentuje DOM?</p>",[42,43,44,45],"Drzewiastą (hierarchiczną)","Płaską","Tablicową","Listową",0,"DOM przedstawia dokument jako drzewo obiektów (węzłów).",{"_27":49,"_29":50,"_35":36,"_37":55},"<p>Która metoda pozwala pobrać element o określonym identyfikatorze?</p>",[51,52,53,54],"document.getElementsByClassName","document.querySelectorAll","document.getElementById","document.createElement","document.getElementById pobiera element o podanym id.",{"_27":57,"_29":58,"_35":36,"_37":63},"<p>Jak za pomocą DOM dodać nowy element do listy <code>ul</code>?</p>",[59,60,61,62],"Użyć innerHTML na ul","Użyć metody getElementsByTagName","Utworzyć element przez createElement i dołączyć przez appendChild","Zmienić atrybut src","Tworzymy element createElement i dołączamy przez appendChild.",{"_27":65,"_29":66,"_35":71,"_37":72},"<p>Co umożliwia metoda <code>querySelectorAll?</code></p>",[67,68,69,70],"Usunięcie elementu","Wybór wielu elementów za pomocą selektora CSS","Zmianę tekstu elementu","Zmianę atrybutu id",1,"querySelectorAll wybiera wszystkie pasujące elementy zgodnie z selektorem CSS.","id","2123c3f7-3eb9-409b-94cd-e32069eab6db","slug","wprowadzenie-do-dom","content","<p>Witaj w świecie <strong>DOM</strong>! 🌐 Jeśli HTML to struktura Twojej strony, a CSS to jej styl, to <strong>DOM</strong> jest niczym most, który pozwala Ci komunikować się z nimi za pomocą JavaScriptu. Dzięki DOM Twoje statyczne strony internetowe mogą ożyć, reagować na interakcje użytkownika i dynamicznie zmieniać swoją zawartość. Gotowy/a, by dowiedzieć się, jak JavaScript \"widzi\" Twoją stronę i jak możesz ją programowo modyfikować? Zaczynamy! 💻</p>\n<h2 id=\"spis-treści\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#spis-treści\">>></a>Spis treści</h2>\n<ol>\n<li><a href=\"#wprowadzenie-czym-jest-dom\">Wprowadzenie: Czym jest DOM?</a></li>\n<li><a href=\"#struktura-dom-drzewo-w%C4%99z%C5%82%C3%B3w\">Struktura DOM: Drzewo węzłów</a></li>\n<li><a href=\"#podstawowe-operacje-na-dom-za-pomoc%C4%85-javascriptu\">Podstawowe operacje na DOM za pomocą JavaScriptu</a>\n<ul>\n<li><a href=\"#wybieranie-element%C3%B3w\">Wybieranie elementów</a>\n<ul>\n<li><code>getElementById()</code></li>\n<li><code>getElementsByClassName()</code></li>\n<li><code>querySelector()</code> i <code>querySelectorAll()</code></li>\n</ul>\n</li>\n<li><a href=\"#manipulowanie-elementami\">Manipulowanie elementami</a>\n<ul>\n<li>Zmiana tekstu: <code>textContent</code> i <code>innerHTML</code></li>\n<li>Zmiana atrybutów: <code>setAttribute()</code>, <code>removeAttribute()</code>, <code>getAttribute()</code></li>\n<li>Zmiana stylów CSS: <code>style</code></li>\n<li>Dodawanie i usuwanie klas CSS: <code>classList</code></li>\n</ul>\n</li>\n<li><a href=\"#tworzenie-i-dodawanie-nowych-element%C3%B3w\">Tworzenie i dodawanie nowych elementów</a>\n<ul>\n<li><code>createElement()</code></li>\n<li><code>appendChild()</code> i <code>prepend()</code></li>\n<li><code>insertBefore()</code></li>\n</ul>\n</li>\n<li><a href=\"#usuwanie-element%C3%B3w\">Usuwanie elementów</a>\n<ul>\n<li><code>remove()</code></li>\n<li><code>removeChild()</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#zadania-do-wykonania-sprawd%C5%BA-swoje-umiej%C4%99tno%C5%9Bci\">Zadania do wykonania: Sprawdź swoje umiejętności!</a>\n<ul>\n<li><a href=\"#zadanie-1-dynamiczna-lista\">Zadanie 1: Dynamiczna lista</a></li>\n<li><a href=\"#zadanie-2-interaktywny-przycisk\">Zadanie 2: Interaktywny przycisk</a></li>\n<li><a href=\"#zadanie-3-zmieniaj%C4%85cy-si%C4%99-obrazek\">Zadanie 3: Zmieniający się obrazek</a></li>\n<li><a href=\"#zadanie-4-masowa-zmiana-stylu\">Zadanie 4: Masowa zmiana stylu</a></li>\n</ul>\n</li>\n</ol>\n<hr>\n<h2 id=\"wprowadzenie-czym-jest-dom\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#wprowadzenie-czym-jest-dom\">>></a>Wprowadzenie: Czym jest DOM?</h2>\n<p><strong>DOM</strong> (ang. <strong>Document Object Model</strong>, czyli Model Obiektowy Dokumentu) to <strong>interfejs programistyczny (API)</strong>, który pozwala na interakcję z dokumentami HTML i XML za pomocą języków skryptowych, takich jak <strong>JavaScript</strong>.</p>\n<p>Wyobraź sobie przeglądarkę internetową, która ładuje stronę HTML. Kiedy to się dzieje, przeglądarka nie widzi tylko surowego tekstu kodu. Zamiast tego, tworzy w pamięci <strong>obiektową reprezentację</strong> tego dokumentu – właśnie to jest DOM.</p>\n<p>DOM przedstawia cały dokument jako <strong>strukturę drzewiastą</strong>, gdzie każdy element HTML (jak <code>&#x3C;p></code>, <code>&#x3C;h1></code>, <code>&#x3C;div></code>), każdy atrybut (jak <code>href</code>, <code>src</code>, <code>id</code>, <code>class</code>) i każdy fragment tekstu (nawet komentarze) jest oddzielnym <strong>węzłem (node)</strong>. Te węzły są ze sobą powiązane relacjami rodzic-dziecko-rodzeństwo, tworząc hierarchiczne \"drzewo\".</p>\n<p><strong>Dlaczego to takie ważne?</strong>\nBez DOM, strony internetowe byłyby statyczne. Nie moglibyśmy:</p>\n<ul>\n<li>Zmieniać tekstu na stronie po jej załadowaniu.</li>\n<li>Dodawać lub usuwać nowych elementów (np. pozycji na liście zakupów).</li>\n<li>Modyfikować stylów CSS dynamicznie (np. zmienić kolor tła po kliknięciu przycisku).</li>\n<li>Reagować na akcje użytkownika (kliknięcia, ruchy myszy, wprowadzanie danych).</li>\n</ul>\n<p>Dzięki DOM, JavaScript może \"widzieć\" i \"dotykać\" każdy element na stronie, umożliwiając tworzenie dynamicznych i interaktywnych aplikacji webowych. To most między Twoim kodem HTML/CSS a logiką po stronie klienta, którą piszesz w JavaScripcie.</p>\n<hr>\n<h2 id=\"struktura-dom-drzewo-węzłów\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#struktura-dom-drzewo-węzłów\">>></a>Struktura DOM: Drzewo węzłów</h2>\n<p>Jak wspomniano, DOM reprezentuje dokument HTML jako <strong>hierarchiczne drzewo węzłów</strong>. Na samym szczycie znajduje się obiekt <code>document</code>, który jest punktem wejścia do całego drzewa. Każdy element HTML, tekst wewnątrz niego, a nawet atrybuty, stają się odrębnymi węzłami.</p>\n<p><strong>Przykładowy dokument HTML:</strong></p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Moja Strona<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"main-title\"</span>></span>Witaj na stronie!<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"intro-text\"</span>></span>To jest pierwszy akapit.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"https://example.com\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"intro-text\"</span>></span>Link<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<p><strong>Reprezentacja tego dokumentu w DOM (uproszczony widok drzewa):</strong></p>\n<pre><code>document (cały dokument)\n└── html (element HTML)\n    ├── head (element HTML)\n    │   └── title (element HTML)\n    │       └── \"Moja Strona\" (węzeł tekstowy)\n    └── body (element HTML)\n        ├── h1 (element HTML)\n        │   ├── id=\"main-title\" (węzeł atrybutu)\n        │   └── \"Witaj na stronie!\" (węzeł tekstowy)\n        ├── p (element HTML)\n        │   ├── class=\"intro-text\" (węzeł atrybutu)\n        │   └── \"To jest pierwszy akapit.\" (węzeł tekstowy)\n        └── a (element HTML)\n            ├── href=\"https://example.com\" (węzeł atrybutu)\n            ├── class=\"intro-text\" (węzeł atrybutu)\n            └── \"Link\" (węzeł tekstowy)\n</code></pre>\n<p>W tym drzewie:</p>\n<ul>\n<li><code>document</code> jest <strong>korzeniem</strong> drzewa.</li>\n<li><code>html</code> jest <strong>dzieckiem</strong> <code>document</code>.</li>\n<li><code>head</code> i <code>body</code> to <strong>dzieci</strong> <code>html</code> i jednocześnie <strong>rodzeństwo</strong> względem siebie.</li>\n<li><code>title</code> jest <strong>dzieckiem</strong> <code>head</code>.</li>\n<li>Tekst (\"Moja Strona\") jest <strong>dzieckiem</strong> <code>title</code>.</li>\n<li><code>h1</code>, <code>p</code>, <code>a</code> są <strong>dziećmi</strong> <code>body</code>.</li>\n<li>Każdy węzeł może mieć swoje własne dzieci.</li>\n<li>Atrybuty są również traktowane jako węzły.</li>\n</ul>\n<p>Zrozumienie tej struktury jest kluczowe, ponieważ wszystkie operacje DOM polegają na nawigowaniu po tym drzewie (np. znajdowanie rodziców, dzieci, rodzeństwa) i manipulowaniu jego węzłami.</p>\n<hr>\n<h2 id=\"podstawowe-operacje-na-dom-za-pomocą-javascriptu\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podstawowe-operacje-na-dom-za-pomocą-javascriptu\">>></a>Podstawowe operacje na DOM za pomocą JavaScriptu</h2>\n<p>Aby manipulować DOM, JavaScript oferuje szereg wbudowanych metod dostępnych poprzez globalny obiekt <code>document</code>. Oto najważniejsze z nich:</p>\n<h3 id=\"wybieranie-elementów\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#wybieranie-elementów\">>>></a>Wybieranie elementów</h3>\n<p>Zanim zmienisz cokolwiek na stronie, musisz najpierw <strong>wybrać</strong> element(y), które chcesz zmodyfikować.</p>\n<h4 id=\"getelementbyid\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#getelementbyid\">>>>></a><code>getElementById()</code></h4>\n<p>Ta metoda pozwala pobrać <strong>pojedynczy element</strong> o konkretnym atrybucie <code>id</code>. Ponieważ <code>id</code> powinno być unikalne na stronie, zawsze zwróci tylko jeden element lub <code>null</code>, jeśli nie znajdzie pasującego ID.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"mojAkapit\"</span>></span>Cześć, jestem akapit!<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"zmienPrzycisk\"</span>></span>Zmień ten tekst<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">button</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n  <span class=\"hljs-keyword\">const</span> akapit = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">\"mojAkapit\"</span>);\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(akapit.<span class=\"hljs-property\">textContent</span>); <span class=\"hljs-comment\">// \"Cześć, jestem akapit!\"</span>\n\n  <span class=\"hljs-keyword\">const</span> przycisk = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">\"zmienPrzycisk\"</span>);\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(przycisk.<span class=\"hljs-property\">tagName</span>); <span class=\"hljs-comment\">// \"BUTTON\"</span>\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n</code></pre>\n<h4 id=\"getelementsbyclassname\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#getelementsbyclassname\">>>>></a><code>getElementsByClassName()</code></h4>\n<p>Ta metoda zwraca <strong>HTMLCollection</strong> (podobną do tablicy) wszystkich elementów, które mają określoną klasę CSS.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ul</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"item\"</span>></span>Jabłko<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"item\"</span>></span>Gruszka<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"item active\"</span>></span>Banan<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ul</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n  <span class=\"hljs-keyword\">const</span> elementyListy = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementsByClassName</span>(<span class=\"hljs-string\">\"item\"</span>);\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(elementyListy.<span class=\"hljs-property\">length</span>); <span class=\"hljs-comment\">// 3</span>\n\n  <span class=\"hljs-comment\">// Możesz iterować po kolekcji:</span>\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &#x3C; elementyListy.<span class=\"hljs-property\">length</span>; i++) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(elementyListy[i].<span class=\"hljs-property\">textContent</span>);\n  }\n  <span class=\"hljs-comment\">// Wynik: \"Jabłko\", \"Gruszka\", \"Banan\"</span>\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n</code></pre>\n<h4 id=\"queryselector-i-queryselectorall\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#queryselector-i-queryselectorall\">>>>></a><code>querySelector()</code> i <code>querySelectorAll()</code></h4>\n<p>To są nowoczesne i bardzo elastyczne metody. Pozwalają wybierać elementy za pomocą <strong>dowolnego selektora CSS</strong>, tak jakbyś pisał/a reguły w pliku <code>.css</code>.</p>\n<ul>\n<li><strong><code>querySelector()</code></strong>: Zwraca <strong>pierwszy element</strong>, który pasuje do podanego selektora.</li>\n<li><strong><code>querySelectorAll()</code></strong>: Zwraca <strong>NodeList</strong> (również podobną do tablicy) wszystkich elementów, które pasują do podanego selektora.</li>\n</ul>\n<!-- end list -->\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"container\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"text\"</span>></span>Pierwszy akapit w kontenerze.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"text highlight\"</span>></span>Drugi akapit w kontenerze.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"test-span\"</span>></span>Test Span<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">span</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n  <span class=\"hljs-comment\">// Wybierz pierwszy akapit z klasą \"text\"</span>\n  <span class=\"hljs-keyword\">const</span> pierwszyTekst = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">querySelector</span>(<span class=\"hljs-string\">\".text\"</span>);\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(pierwszyTekst.<span class=\"hljs-property\">textContent</span>); <span class=\"hljs-comment\">// \"Pierwszy akapit w kontenerze.\"</span>\n\n  <span class=\"hljs-comment\">// Wybierz element o ID \"test-span\"</span>\n  <span class=\"hljs-keyword\">const</span> mojSpan = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">querySelector</span>(<span class=\"hljs-string\">\"#test-span\"</span>);\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(mojSpan.<span class=\"hljs-property\">tagName</span>); <span class=\"hljs-comment\">// \"SPAN\"</span>\n\n  <span class=\"hljs-comment\">// Wybierz wszystkie akapity wewnątrz diva z klasą \"container\"</span>\n  <span class=\"hljs-keyword\">const</span> wszystkieTekstyWKontenerze = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">querySelectorAll</span>(<span class=\"hljs-string\">\".container p\"</span>);\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(wszystkieTekstyWKontenerze.<span class=\"hljs-property\">length</span>); <span class=\"hljs-comment\">// 2</span>\n\n  <span class=\"hljs-comment\">// Możesz użyć forEach na NodeList (czego nie zrobisz bezpośrednio na HTMLCollection)</span>\n  wszystkieTekstyWKontenerze.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">p</span>) =></span> {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(p.<span class=\"hljs-property\">textContent</span>);\n  });\n  <span class=\"hljs-comment\">// Wynik: \"Pierwszy akapit w kontenerze.\", \"Drugi akapit w kontenerze.\"</span>\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n</code></pre>\n<p><strong>Wskazówka:</strong> <code>querySelector</code> i <code>querySelectorAll</code> są najbardziej uniwersalne i często preferowane ze względu na ich elastyczność w użyciu selektorów CSS.</p>\n<hr>\n<h3 id=\"manipulowanie-elementami\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#manipulowanie-elementami\">>>></a>Manipulowanie elementami</h3>\n<p>Po wybraniu elementu możesz zmieniać jego zawartość, atrybuty i styl.</p>\n<h4 id=\"zmiana-tekstu-textcontent-i-innerhtml\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zmiana-tekstu-textcontent-i-innerhtml\">>>>></a>Zmiana tekstu: <code>textContent</code> i <code>innerHTML</code></h4>\n<ul>\n<li><strong><code>textContent</code></strong>: Zmienia lub pobiera tylko <strong>tekstową zawartość</strong> elementu, ignorując wszelkie tagi HTML wewnątrz niego. Jest bezpieczniejszy, ponieważ nie interpretuje HTML.</li>\n<li><strong><code>innerHTML</code></strong>: Zmienia lub pobiera <strong>całą zawartość HTML</strong> wewnątrz elementu. Pozwala na wstawienie pełnego kodu HTML, ale jest mniej bezpieczny (ryzyko XSS), jeśli używasz danych od użytkownika.</li>\n</ul>\n<!-- end list -->\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"mojDiv\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Stary akapit<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n  <span class=\"hljs-keyword\">const</span> mojDiv = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">\"mojDiv\"</span>);\n\n  <span class=\"hljs-comment\">// Zmiana tekstu (bezpiecznie)</span>\n  mojDiv.<span class=\"hljs-property\">textContent</span> = <span class=\"hljs-string\">\"Tylko tekst\"</span>;\n\n  <span class=\"hljs-comment\">// Zmiana zawartości HTML (mniej bezpiecznie, ale elastycznie)</span>\n  mojDiv.<span class=\"hljs-property\">innerHTML</span> = <span class=\"hljs-string\">\"&#x3C;h2>Nowy nagłówek&#x3C;/h2>&#x3C;p>Z nowym akapitem.&#x3C;/p>\"</span>;\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n</code></pre>\n<h4 id=\"zmiana-atrybutów-setattribute-removeattribute-getattribute\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zmiana-atrybutów-setattribute-removeattribute-getattribute\">>>>></a>Zmiana atrybutów: <code>setAttribute()</code>, <code>removeAttribute()</code>, <code>getAttribute()</code></h4>\n<ul>\n<li><strong><code>setAttribute(nazwaAtrybutu, wartosc)</code></strong>: Ustawia nową wartość dla atrybutu.</li>\n<li><strong><code>removeAttribute(nazwaAtrybutu)</code></strong>: Usuwa atrybut.</li>\n<li><strong><code>getAttribute(nazwaAtrybutu)</code></strong>: Pobiera aktualną wartość atrybutu.</li>\n</ul>\n<!-- end list -->\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"logo\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"stare-logo.png\"</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">\"Stare logo firmy\"</span> /></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n  <span class=\"hljs-keyword\">const</span> logo = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">\"logo\"</span>);\n\n  <span class=\"hljs-comment\">// Zmień src i alt</span>\n  logo.<span class=\"hljs-title function_\">setAttribute</span>(<span class=\"hljs-string\">\"src\"</span>, <span class=\"hljs-string\">\"nowe-logo.png\"</span>);\n  logo.<span class=\"hljs-title function_\">setAttribute</span>(<span class=\"hljs-string\">\"alt\"</span>, <span class=\"hljs-string\">\"Nowe logo firmy\"</span>);\n\n  <span class=\"hljs-comment\">// Pobierz src</span>\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(logo.<span class=\"hljs-title function_\">getAttribute</span>(<span class=\"hljs-string\">\"src\"</span>)); <span class=\"hljs-comment\">// \"nowe-logo.png\"</span>\n\n  <span class=\"hljs-comment\">// Usuń atrybut alt</span>\n  logo.<span class=\"hljs-title function_\">removeAttribute</span>(<span class=\"hljs-string\">\"alt\"</span>);\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n</code></pre>\n<h4 id=\"zmiana-stylów-css-style\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zmiana-stylów-css-style\">>>>></a>Zmiana stylów CSS: <code>style</code></h4>\n<p>Bezpośrednio manipuluje stylami inline elementu.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"przyciskStyl\"</span>></span>Kliknij mnie<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">button</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n  <span class=\"hljs-keyword\">const</span> przyciskStyl = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">\"przyciskStyl\"</span>);\n\n  przyciskStyl.<span class=\"hljs-property\">style</span>.<span class=\"hljs-property\">backgroundColor</span> = <span class=\"hljs-string\">\"blue\"</span>;\n  przyciskStyl.<span class=\"hljs-property\">style</span>.<span class=\"hljs-property\">color</span> = <span class=\"hljs-string\">\"white\"</span>;\n  przyciskStyl.<span class=\"hljs-property\">style</span>.<span class=\"hljs-property\">padding</span> = <span class=\"hljs-string\">\"10px 20px\"</span>;\n  przyciskStyl.<span class=\"hljs-property\">style</span>.<span class=\"hljs-property\">borderRadius</span> = <span class=\"hljs-string\">\"5px\"</span>; <span class=\"hljs-comment\">// Właściwości z myślnikami w CSS są w CamelCase w JS</span>\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n</code></pre>\n<p><strong>Wskazówka:</strong> Często lepszym podejściem niż bezpośrednia manipulacja <code>style</code> jest dodawanie/usuwanie klas CSS, ponieważ to oddziela style od logiki JS.</p>\n<h4 id=\"dodawanie-i-usuwanie-klas-css-classlist\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#dodawanie-i-usuwanie-klas-css-classlist\">>>>></a>Dodawanie i usuwanie klas CSS: <code>classList</code></h4>\n<p>Właściwość <code>classList</code> obiektu elementu pozwala na łatwe zarządzanie klasami CSS.</p>\n<ul>\n<li><strong><code>classList.add('nazwa-klasy')</code></strong>: Dodaje jedną lub więcej klas.</li>\n<li><strong><code>classList.remove('nazwa-klasy')</code></strong>: Usuwa jedną lub więcej klas.</li>\n<li><strong><code>classList.toggle('nazwa-klasy')</code></strong>: Dodaje klasę, jeśli jej nie ma, lub usuwa, jeśli jest (przełącza).</li>\n<li><strong><code>classList.contains('nazwa-klasy')</code></strong>: Sprawdza, czy element ma daną klasę.</li>\n</ul>\n<!-- end list -->\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"komunikat\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"message\"</span>></span>To jest komunikat.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">style</span>></span><span class=\"css\">\n  <span class=\"hljs-selector-class\">.message</span> {\n    <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">10px</span>;\n    <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">1px</span> solid gray;\n  }\n  <span class=\"hljs-selector-class\">.error</span> {\n    <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#f8d7da</span>;\n    <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#721c24</span>;\n    <span class=\"hljs-attribute\">border-color</span>: <span class=\"hljs-number\">#f5c6cb</span>;\n  }\n  <span class=\"hljs-selector-class\">.hidden</span> {\n    <span class=\"hljs-attribute\">display</span>: none;\n  }\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">style</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n  <span class=\"hljs-keyword\">const</span> komunikat = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">\"komunikat\"</span>);\n\n  komunikat.<span class=\"hljs-property\">classList</span>.<span class=\"hljs-title function_\">add</span>(<span class=\"hljs-string\">\"error\"</span>); <span class=\"hljs-comment\">// Dodaj klasę \"error\"</span>\n  <span class=\"hljs-comment\">// Teraz div ma klasy \"message error\"</span>\n\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(komunikat.<span class=\"hljs-property\">classList</span>.<span class=\"hljs-title function_\">contains</span>(<span class=\"hljs-string\">\"message\"</span>)); <span class=\"hljs-comment\">// true</span>\n\n  komunikat.<span class=\"hljs-property\">classList</span>.<span class=\"hljs-title function_\">remove</span>(<span class=\"hljs-string\">\"message\"</span>); <span class=\"hljs-comment\">// Usuń klasę \"message\"</span>\n  <span class=\"hljs-comment\">// Teraz div ma tylko klasę \"error\"</span>\n\n  komunikat.<span class=\"hljs-property\">classList</span>.<span class=\"hljs-title function_\">toggle</span>(<span class=\"hljs-string\">\"hidden\"</span>); <span class=\"hljs-comment\">// Dodaj klasę \"hidden\" (div zniknie)</span>\n  <span class=\"hljs-comment\">// Teraz div ma klasy \"error hidden\"</span>\n\n  komunikat.<span class=\"hljs-property\">classList</span>.<span class=\"hljs-title function_\">toggle</span>(<span class=\"hljs-string\">\"hidden\"</span>); <span class=\"hljs-comment\">// Usuń klasę \"hidden\" (div ponownie się pojawi)</span>\n  <span class=\"hljs-comment\">// Teraz div ma tylko klasę \"error\"</span>\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n</code></pre>\n<hr>\n<h3 id=\"tworzenie-i-dodawanie-nowych-elementów\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#tworzenie-i-dodawanie-nowych-elementów\">>>></a>Tworzenie i dodawanie nowych elementów</h3>\n<p>Możesz dynamicznie budować całe fragmenty HTML za pomocą JavaScriptu.</p>\n<h4 id=\"createelement\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#createelement\">>>>></a><code>createElement()</code></h4>\n<p>Tworzy nowy węzeł elementu o podanej nazwie tagu. Nie dodaje go automatycznie do DOM; musisz to zrobić ręcznie.</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> nowyDiv = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">createElement</span>(<span class=\"hljs-string\">\"div\"</span>);\n<span class=\"hljs-keyword\">const</span> nowyAkapit = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">createElement</span>(<span class=\"hljs-string\">\"p\"</span>);\n<span class=\"hljs-keyword\">const</span> nowyObrazek = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">createElement</span>(<span class=\"hljs-string\">\"img\"</span>);\n</code></pre>\n<h4 id=\"appendchild-i-prepend\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#appendchild-i-prepend\">>>>></a><code>appendChild()</code> i <code>prepend()</code></h4>\n<ul>\n<li><strong><code>elementRodzic.appendChild(elementDziecko)</code></strong>: Dodaje <code>elementDziecko</code> na <strong>koniec</strong> listy dzieci <code>elementRodzic</code>.</li>\n<li><strong><code>elementRodzic.prepend(elementDziecko)</code></strong>: Dodaje <code>elementDziecko</code> na <strong>początek</strong> listy dzieci <code>elementRodzic</code>.</li>\n</ul>\n<!-- end list -->\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ul</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"listaZakupow\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span>Mleko<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span>Chleb<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ul</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n  <span class=\"hljs-keyword\">const</span> lista = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">\"listaZakupow\"</span>);\n\n  <span class=\"hljs-comment\">// Dodaj na koniec</span>\n  <span class=\"hljs-keyword\">const</span> platki = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">createElement</span>(<span class=\"hljs-string\">\"li\"</span>);\n  platki.<span class=\"hljs-property\">textContent</span> = <span class=\"hljs-string\">\"Płatki\"</span>;\n  lista.<span class=\"hljs-title function_\">appendChild</span>(platki); <span class=\"hljs-comment\">// HTML: ... &#x3C;li>Chleb&#x3C;/li> &#x3C;li>Płatki&#x3C;/li>&#x3C;/ul></span>\n\n  <span class=\"hljs-comment\">// Dodaj na początek</span>\n  <span class=\"hljs-keyword\">const</span> jajka = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">createElement</span>(<span class=\"hljs-string\">\"li\"</span>);\n  jajka.<span class=\"hljs-property\">textContent</span> = <span class=\"hljs-string\">\"Jajka\"</span>;\n  lista.<span class=\"hljs-title function_\">prepend</span>(jajka); <span class=\"hljs-comment\">// HTML: ... &#x3C;li>Jajka&#x3C;/li> &#x3C;li>Mleko&#x3C;/li> ...</span>\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n</code></pre>\n<h4 id=\"insertbefore\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#insertbefore\">>>>></a><code>insertBefore()</code></h4>\n<p>Umożliwia wstawienie nowego elementu <strong>przed</strong> istniejącym elementem referencyjnym.</p>\n<p><code>elementRodzic.insertBefore(nowyElement, referencyjnyElement)</code></p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ul</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"listaZakupow2\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span>Mleko<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"chleb\"</span>></span>Chleb<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span>Płatki<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ul</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n  <span class=\"hljs-keyword\">const</span> lista2 = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">\"listaZakupow2\"</span>);\n  <span class=\"hljs-keyword\">const</span> chleb = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">\"chleb\"</span>);\n\n  <span class=\"hljs-keyword\">const</span> maslo = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">createElement</span>(<span class=\"hljs-string\">\"li\"</span>);\n  maslo.<span class=\"hljs-property\">textContent</span> = <span class=\"hljs-string\">\"Masło\"</span>;\n\n  <span class=\"hljs-comment\">// Wstaw \"Masło\" przed \"Chleb\"</span>\n  lista2.<span class=\"hljs-title function_\">insertBefore</span>(maslo, chleb);\n  <span class=\"hljs-comment\">// HTML: ... &#x3C;li>Mleko&#x3C;/li> &#x3C;li>Masło&#x3C;/li> &#x3C;li>Chleb&#x3C;/li> &#x3C;li>Płatki&#x3C;/li>&#x3C;/ul></span>\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n</code></pre>\n<hr>\n<h3 id=\"usuwanie-elementów\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#usuwanie-elementów\">>>></a>Usuwanie elementów</h3>\n<h4 id=\"remove\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#remove\">>>>></a><code>remove()</code></h4>\n<p>Nowoczesna i prosta metoda do usuwania elementu bezpośrednio z DOM.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"doUsuniecia\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Ten div zostanie usunięty.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n  <span class=\"hljs-keyword\">const</span> divDoUsuniecia = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">\"doUsuniecia\"</span>);\n  divDoUsuniecia.<span class=\"hljs-title function_\">remove</span>(); <span class=\"hljs-comment\">// Element znika z DOM</span>\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n</code></pre>\n<h4 id=\"removechild\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#removechild\">>>>></a><code>removeChild()</code></h4>\n<p>Starsza metoda, która usuwa określone dziecko z rodzica. Musisz mieć referencję do rodzica i do dziecka.</p>\n<p><code>elementRodzic.removeChild(elementDziecko)</code></p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ul</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"listaDoModyfikacji\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span>Item 1<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"item2\"</span>></span>Item 2<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span>Item 3<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ul</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n  <span class=\"hljs-keyword\">const</span> listaModyfikacji = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">\"listaDoModyfikacji\"</span>);\n  <span class=\"hljs-keyword\">const</span> item2 = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">\"item2\"</span>);\n\n  listaModyfikacji.<span class=\"hljs-title function_\">removeChild</span>(item2); <span class=\"hljs-comment\">// Usuwa \"Item 2\"</span>\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n</code></pre>\n<hr>\n<h2 id=\"zadania-do-wykonania-sprawdź-swoje-umiejętności\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadania-do-wykonania-sprawdź-swoje-umiejętności\">>></a>Zadania do wykonania: Sprawdź swoje umiejętności!</h2>\n<p>Czas na praktykę! Użyj JavaScriptu do manipulacji DOM w poniższych zadaniach. Pamiętaj, aby cały kod JavaScript umieścić wewnątrz tagu <code>&#x3C;script></code> najlepiej na końcu <code>&#x3C;body></code> (przed <code>&#x3C;/body></code>), aby mieć pewność, że HTML jest już załadowany, zanim skrypt spróbuje nim manipulować.</p>\n<h3 id=\"zadanie-1-dynamiczna-lista\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-1-dynamiczna-lista\">>>></a>Zadanie 1: Dynamiczna lista</h3>\n<p>Stwórz stronę HTML z nagłówkiem <code>&#x3C;h1></code> i pustą listą nieuporządkowaną (<code>&#x3C;ul></code>) z atrybutem <code>id=\"mojaLista\"</code>. Następnie, za pomocą JavaScriptu:</p>\n<ol>\n<li>Dodaj trzy nowe elementy listy (<code>&#x3C;li></code>) do tej listy. Każdy element powinien zawierać inny tekst (np. \"Pierwszy element\", \"Drugi element\", \"Trzeci element\").</li>\n</ol>\n<details>\n<summary>\n<span>Pokaż rozwiązanie</span>\n</summary>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"pl\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Zadanie 1 - Dynamiczna Lista<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>Moja lista zakupów<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ul</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"mojaLista\"</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ul</span>></span>\n\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n      <span class=\"hljs-comment\">// 1. Pobierz referencję do listy</span>\n      <span class=\"hljs-keyword\">const</span> lista = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">\"mojaLista\"</span>);\n\n      <span class=\"hljs-comment\">// 2. Utwórz i dodaj trzy nowe elementy listy</span>\n      <span class=\"hljs-keyword\">const</span> element1 = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">createElement</span>(<span class=\"hljs-string\">\"li\"</span>);\n      element1.<span class=\"hljs-property\">textContent</span> = <span class=\"hljs-string\">\"Mleko\"</span>;\n      lista.<span class=\"hljs-title function_\">appendChild</span>(element1);\n\n      <span class=\"hljs-keyword\">const</span> element2 = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">createElement</span>(<span class=\"hljs-string\">\"li\"</span>);\n      element2.<span class=\"hljs-property\">textContent</span> = <span class=\"hljs-string\">\"Chleb\"</span>;\n      lista.<span class=\"hljs-title function_\">appendChild</span>(element2);\n\n      <span class=\"hljs-keyword\">const</span> element3 = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">createElement</span>(<span class=\"hljs-string\">\"li\"</span>);\n      element3.<span class=\"hljs-property\">textContent</span> = <span class=\"hljs-string\">\"Jajka\"</span>;\n      lista.<span class=\"hljs-title function_\">appendChild</span>(element3);\n\n      <span class=\"hljs-comment\">// Opcjonalnie: możesz dodać do listy z tablicy</span>\n      <span class=\"hljs-comment\">/*\n        const itemsToAdd = [\"Kawa\", \"Cukier\", \"Mąka\"];\n        itemsToAdd.forEach(itemText => {\n            const newItem = document.createElement(\"li\");\n            newItem.textContent = itemText;\n            lista.appendChild(newItem);\n        });\n        */</span>\n    </span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-2-interaktywny-przycisk\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-2-interaktywny-przycisk\">>>></a>Zadanie 2: Interaktywny przycisk</h3>\n<p>Utwórz formularz HTML z jednym polem tekstowym (<code>&#x3C;input type=\"text\"></code>) i jednym przyciskiem (<code>&#x3C;button id=\"przyciskAkcji\">Kliknij mnie&#x3C;/button></code>). Za pomocą JavaScriptu:</p>\n<ol>\n<li>Dodaj <strong>nasłuchiwanie zdarzenia kliknięcia</strong> na przycisk.</li>\n<li>Po kliknięciu, <strong>zmień tekst przycisku</strong> na \"Wysłano!\"</li>\n<li>Dodatkowo, <strong>zmień kolor tła</strong> pola tekstowego na jasnoszary (<code>#f0f0f0</code>).</li>\n</ol>\n<details>\n<summary>\n<span>Pokaż rozwiązanie</span>\n</summary>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"pl\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Zadanie 2 - Interaktywny Przycisk<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">style</span>></span><span class=\"css\">\n      <span class=\"hljs-selector-tag\">body</span> {\n        <span class=\"hljs-attribute\">font-family</span>: sans-serif;\n        <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">20px</span>;\n      }\n      <span class=\"hljs-selector-tag\">form</span> {\n        <span class=\"hljs-attribute\">margin-top</span>: <span class=\"hljs-number\">20px</span>;\n        <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">1px</span> solid <span class=\"hljs-number\">#ccc</span>;\n        <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">20px</span>;\n        <span class=\"hljs-attribute\">border-radius</span>: <span class=\"hljs-number\">8px</span>;\n        <span class=\"hljs-attribute\">max-width</span>: <span class=\"hljs-number\">300px</span>;\n      }\n      <span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-attr\">[type=<span class=\"hljs-string\">\"text\"</span>]</span> {\n        <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">10px</span>;\n        <span class=\"hljs-attribute\">margin-bottom</span>: <span class=\"hljs-number\">10px</span>;\n        <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">1px</span> solid <span class=\"hljs-number\">#ddd</span>;\n        <span class=\"hljs-attribute\">border-radius</span>: <span class=\"hljs-number\">4px</span>;\n        <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-built_in\">calc</span>(<span class=\"hljs-number\">100%</span> - <span class=\"hljs-number\">22px</span>);\n      }\n      <span class=\"hljs-selector-tag\">button</span> {\n        <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">10px</span> <span class=\"hljs-number\">15px</span>;\n        <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#007bff</span>;\n        <span class=\"hljs-attribute\">color</span>: white;\n        <span class=\"hljs-attribute\">border</span>: none;\n        <span class=\"hljs-attribute\">border-radius</span>: <span class=\"hljs-number\">4px</span>;\n        <span class=\"hljs-attribute\">cursor</span>: pointer;\n      }\n      <span class=\"hljs-selector-tag\">button</span><span class=\"hljs-selector-pseudo\">:hover</span> {\n        <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#0056b3</span>;\n      }\n    </span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">style</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>Formularz<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">form</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"mojePoleTekstowe\"</span> <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">\"Wpisz coś...\"</span> /></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"button\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"przyciskAkcji\"</span>></span>Wyślij<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">button</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">form</span>></span>\n\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n      <span class=\"hljs-comment\">// 1. Pobierz referencje do elementów</span>\n      <span class=\"hljs-keyword\">const</span> przycisk = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">\"przyciskAkcji\"</span>);\n      <span class=\"hljs-keyword\">const</span> poleTekstowe = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">\"mojePoleTekstowe\"</span>);\n\n      <span class=\"hljs-comment\">// 2. Dodaj nasłuchiwanie zdarzenia \"click\"</span>\n      przycisk.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">\"click\"</span>, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) {\n        <span class=\"hljs-comment\">// 3. Zmień tekst przycisku</span>\n        przycisk.<span class=\"hljs-property\">textContent</span> = <span class=\"hljs-string\">\"Wysłano!\"</span>;\n\n        <span class=\"hljs-comment\">// 4. Zmień kolor tła pola tekstowego</span>\n        poleTekstowe.<span class=\"hljs-property\">style</span>.<span class=\"hljs-property\">backgroundColor</span> = <span class=\"hljs-string\">\"#f0f0f0\"</span>;\n        <span class=\"hljs-comment\">// Możesz też opcjonalnie wyłączyć pole tekstowe po wysłaniu</span>\n        poleTekstowe.<span class=\"hljs-property\">disabled</span> = <span class=\"hljs-literal\">true</span>;\n        przycisk.<span class=\"hljs-property\">disabled</span> = <span class=\"hljs-literal\">true</span>; <span class=\"hljs-comment\">// Wyłącz przycisk, żeby nie klikać ponownie</span>\n      });\n    </span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-3-zmieniający-się-obrazek\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-3-zmieniający-się-obrazek\">>>></a>Zadanie 3: Zmieniający się obrazek</h3>\n<p>Napisz kod HTML z jednym obrazkiem (<code>&#x3C;img></code>) z atrybutem <code>id=\"mojObrazek\"</code> i początkowym <code>src</code> (może to być dowolny obrazek z internetu lub lokalny plik). Za pomocą JavaScriptu:</p>\n<ol>\n<li>Dodaj <strong>nasłuchiwanie zdarzenia kliknięcia</strong> na obrazek.</li>\n<li>Po kliknięciu, <strong>zmień atrybut <code>src</code> obrazka</strong> na inny URL (inną grafikę).</li>\n</ol>\n<details>\n<summary>\n<span>Pokaż rozwiązanie</span>\n</summary>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"pl\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Zadanie 3 - Zmieniający się Obrazek<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">style</span>></span><span class=\"css\">\n      <span class=\"hljs-selector-tag\">body</span> {\n        <span class=\"hljs-attribute\">font-family</span>: sans-serif;\n        <span class=\"hljs-attribute\">text-align</span>: center;\n        <span class=\"hljs-attribute\">margin-top</span>: <span class=\"hljs-number\">50px</span>;\n      }\n      <span class=\"hljs-selector-tag\">img</span> {\n        <span class=\"hljs-attribute\">max-width</span>: <span class=\"hljs-number\">400px</span>;\n        <span class=\"hljs-attribute\">height</span>: auto;\n        <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">2px</span> solid <span class=\"hljs-number\">#ccc</span>;\n        <span class=\"hljs-attribute\">border-radius</span>: <span class=\"hljs-number\">8px</span>;\n        <span class=\"hljs-attribute\">cursor</span>: pointer;\n        <span class=\"hljs-attribute\">transition</span>: transform <span class=\"hljs-number\">0.3s</span> ease;\n      }\n      <span class=\"hljs-selector-tag\">img</span><span class=\"hljs-selector-pseudo\">:hover</span> {\n        <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">scale</span>(<span class=\"hljs-number\">1.02</span>);\n      }\n    </span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">style</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>Kliknij na obrazek!<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">img</span>\n      <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"mojObrazek\"</span>\n      <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"https://via.placeholder.com/400x200/FF5733/FFFFFF?text=Obrazek+1\"</span>\n      <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">\"Pierwszy obrazek\"</span>\n    /></span>\n\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n      <span class=\"hljs-comment\">// 1. Pobierz referencję do obrazka</span>\n      <span class=\"hljs-keyword\">const</span> obrazek = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">\"mojObrazek\"</span>);\n\n      <span class=\"hljs-comment\">// Lista URL-i obrazków do przełączania</span>\n      <span class=\"hljs-keyword\">const</span> obrazki = [\n        <span class=\"hljs-string\">\"https://via.placeholder.com/400x200/FF5733/FFFFFF?text=Obrazek+1\"</span>,\n        <span class=\"hljs-string\">\"https://via.placeholder.com/400x200/33FF57/FFFFFF?text=Obrazek+2\"</span>,\n        <span class=\"hljs-string\">\"https://via.placeholder.com/400x200/3357FF/FFFFFF?text=Obrazek+3\"</span>,\n      ];\n      <span class=\"hljs-keyword\">let</span> currentIndex = <span class=\"hljs-number\">0</span>; <span class=\"hljs-comment\">// Aktualny indeks obrazka</span>\n\n      <span class=\"hljs-comment\">// 2. Dodaj nasłuchiwanie zdarzenia \"click\"</span>\n      obrazek.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">\"click\"</span>, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) {\n        <span class=\"hljs-comment\">// Zwiększ indeks, a jeśli przekroczysz długość tablicy, wróć na początek</span>\n        currentIndex = (currentIndex + <span class=\"hljs-number\">1</span>) % obrazki.<span class=\"hljs-property\">length</span>;\n\n        <span class=\"hljs-comment\">// Zmień atrybut src na nowy obrazek</span>\n        obrazek.<span class=\"hljs-property\">src</span> = obrazki[currentIndex];\n        obrazek.<span class=\"hljs-property\">alt</span> = <span class=\"hljs-string\">`Obrazek <span class=\"hljs-subst\">${currentIndex + <span class=\"hljs-number\">1</span>}</span>`</span>; <span class=\"hljs-comment\">// Zmień też tekst alternatywny</span>\n      });\n    </span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-4-masowa-zmiana-stylu\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-4-masowa-zmiana-stylu\">>>></a>Zadanie 4: Masowa zmiana stylu</h3>\n<p>Utwórz stronę HTML z pięcioma akapitami (<code>&#x3C;p></code>). Nadaj im wszystkim tę samą klasę, np. <code>tekst-do-zmiany</code>. Za pomocą JavaScriptu:</p>\n<ol>\n<li>Pobierz <strong>wszystkie</strong> akapity o tej klasie.</li>\n<li>Używając pętli (np. <code>forEach</code>), <strong>zmień kolor tekstu</strong> każdego z nich na niebieski (<code>blue</code>) i <strong>rozmiar czcionki</strong> na <code>18px</code>.</li>\n</ol>\n<details>\n<summary>\n<span>Pokaż rozwiązanie</span>\n</summary>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"pl\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Zadanie 4 - Masowa Zmiana Stylu<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">style</span>></span><span class=\"css\">\n      <span class=\"hljs-selector-tag\">body</span> {\n        <span class=\"hljs-attribute\">font-family</span>: sans-serif;\n        <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">20px</span>;\n      }\n      <span class=\"hljs-selector-class\">.tekst-do-zmiany</span> {\n        <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">1px</span> solid <span class=\"hljs-number\">#eee</span>;\n        <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">10px</span>;\n        <span class=\"hljs-attribute\">margin-bottom</span>: <span class=\"hljs-number\">8px</span>;\n        <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#f9f9f9</span>;\n      }\n    </span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">style</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>Akapity do ostylowania<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"tekst-do-zmiany\"</span>></span>To jest pierwszy akapit. Zmienimy jego styl!<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"tekst-do-zmiany\"</span>></span>Drugi akapit, również do modyfikacji.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"tekst-do-zmiany\"</span>></span>Trzeci akapit. Poćwicz DOM!<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"tekst-do-zmiany\"</span>></span>Czwarty akapit. Świetnie sobie radzisz!<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"tekst-do-zmiany\"</span>></span>Piąty akapit. Ostatni do zmiany.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n      <span class=\"hljs-comment\">// 1. Pobierz wszystkie akapity o klasie \"tekst-do-zmiany\"</span>\n      <span class=\"hljs-keyword\">const</span> akapityDoZmiany = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">querySelectorAll</span>(<span class=\"hljs-string\">\".tekst-do-zmiany\"</span>);\n\n      <span class=\"hljs-comment\">// 2. Iteruj po kolekcji i zmień styl każdego akapitu</span>\n      akapityDoZmiany.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">p</span>) {\n        p.<span class=\"hljs-property\">style</span>.<span class=\"hljs-property\">color</span> = <span class=\"hljs-string\">\"blue\"</span>;\n        p.<span class=\"hljs-property\">style</span>.<span class=\"hljs-property\">fontSize</span> = <span class=\"hljs-string\">\"18px\"</span>;\n        p.<span class=\"hljs-property\">style</span>.<span class=\"hljs-property\">fontWeight</span> = <span class=\"hljs-string\">\"bold\"</span>; <span class=\"hljs-comment\">// Dodajmy też pogrubienie dla efektu</span>\n      });\n    </span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n</details>\n<hr>\n<p>Gratulacje! 🎉 Ukończyłeś/aś kurs podstaw DOM. Masz teraz narzędzia, by sprawić, że Twoje strony będą dynamiczne i interaktywne. Pamiętaj, że manipulowanie DOM to serce wielu operacji frontendowych w JavaScripcie.</p>\n<p>Co dalej? Możesz zgłębić temat:</p>\n<ul>\n<li><strong>Obsługa zdarzeń (Event Handling)</strong> w DOM (np. <code>click</code>, <code>mouseover</code>, <code>submit</code>).</li>\n<li><strong>Delegowanie zdarzeń (Event Delegation)</strong> dla optymalizacji.</li>\n<li>Interakcje z <strong>formularzami</strong> i walidacja danych wejściowych.</li>\n<li>Wykorzystanie DOM w połączeniu z <strong>bibliotekami/frameworkami JavaScript</strong> (np. React, Vue, Angular), które często abstrakcyjnie podchodzą do bezpośredniej manipulacji DOM.</li>\n</ul>\n<p>Masz pytania dotyczące konkretnych scenariuszy z DOM? Chcesz dowiedzieć się więcej o interakcjach użytkownika? Daj znać! 😊</p>","resourceUrl","/app/content/courses/wprowadzenie-do-dom.md","readingTime","11 minut"]
