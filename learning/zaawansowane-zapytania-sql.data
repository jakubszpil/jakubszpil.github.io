[{"_1":2},"course-details",{"_3":4},"data",{"_5":6,"_7":8,"_9":10,"_21":22,"_24":25,"_26":27,"_78":79,"_80":81,"_82":83,"_84":85,"_86":87},"title","Zaawansowane zapytania SQL","description","Poznaj techniki budowania bardziej złożonych zapytań SQL. Naucz się korzystać z JOIN, agregacji, podzapytań, funkcji i zaawansowanych operacji na danych. Praktyczny przewodnik po zaawansowanym SQL z przykładami i szczegółowymi wyjaśnieniami.","keywords",[11,12,13,14,15,16,17,18,19,20],"sql","join","group by","having","podzapytania","agregacja","zaawansowane zapytania","wyjaśnienia","praktyka","learning","categories",[11,23],"bazy-danych","createdAt",["D",1751673600000],"quiz",{"_5":28,"_29":30},"Quiz: Zaawansowane zapytania SQL","questions",[31,44,53,62,70],{"_32":33,"_34":35,"_40":41,"_42":43},"question","<p>Do czego służy polecenie JOIN?</p>","options",[36,37,38,39],"Do usuwania danych","Do tworzenia nowych tabel","Do pobierania danych z kilku tabel powiązanych relacjami","Do sortowania wyników","answer",2,"explanation","JOIN pozwala łączyć dane z kilku tabel na podstawie relacji.",{"_32":45,"_34":46,"_40":51,"_42":52},"<p>Czym różni się INNER JOIN od LEFT JOIN?</p>",[47,48,49,50],"INNER JOIN zwraca tylko pasujące rekordy, LEFT JOIN zwraca też te bez dopasowania z lewej tabeli","Nie ma różnicy","LEFT JOIN zawsze łączy wszystkie rekordy obu tabel","INNER JOIN sortuje dane",0,"INNER JOIN zwraca tylko pasujące rekordy, LEFT JOIN także te z lewej tabeli bez dopasowania.",{"_32":54,"_34":55,"_40":60,"_42":61},"<p>Jakie polecenie agreguje dane według zadanej kolumny?</p>",[56,57,58,59],"ORDER BY","JOIN","UNION","GROUP BY",3,"GROUP BY grupuje dane według wybranej kolumny.",{"_32":63,"_34":64,"_40":41,"_42":69},"<p>Czym jest podzapytanie (subquery)?</p>",[65,66,67,68],"Funkcją matematyczną","Kolejną tabelą","Zapytaniem wewnątrz innego zapytania","Sortowaniem wyników","Podzapytanie to zapytanie zagnieżdżone w innym zapytaniu SQL.",{"_32":71,"_34":72,"_40":51,"_42":77},"<p>Do czego służy HAVING?</p>",[73,74,75,76],"Do filtrowania grup po agregacji (po GROUP BY)","Do zmiany struktury tabeli","Do łączenia tabel","Do filtrowania całej tabeli","HAVING filtruje wyniki po agregacji i grupowaniu.","id","91411327-dbc3-4a0f-87e5-403234751c3c","slug","zaawansowane-zapytania-sql","content","<p>SQL pozwala nie tylko pobierać i modyfikować proste dane, ale również realizować bardzo złożone analizy, łączyć wiele tabel, grupować, sumować i filtrować rekordy na różne sposoby. Poznaj zaawansowane techniki, które otworzą przed Tobą nowe możliwości!<br>\nW tym kursie znajdziesz nie tylko przykłady, ale także szczegółowe wyjaśnienia, co robi każda komenda i jak działa składnia.</p>\n<h2 id=\"spis-treści\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#spis-treści\">>></a>Spis treści</h2>\n<ol>\n<li><a href=\"#%C5%82%C4%85czenie-tabel-join\">Łączenie tabel (JOIN)</a>\n<ul>\n<li><a href=\"#czym-jest-join-i-po-co-go-u%C5%BCywa%C4%87\">Czym jest JOIN i po co go używać?</a></li>\n<li><a href=\"#inner-join\">INNER JOIN</a></li>\n<li><a href=\"#left-join-right-join-full-join\">LEFT JOIN, RIGHT JOIN, FULL JOIN</a></li>\n<li><a href=\"#samoz%C5%82%C4%85czenia-self-join\">Samozłączenia (SELF JOIN)</a></li>\n</ul>\n</li>\n<li><a href=\"#agregacje-i-grupowanie-danych\">Agregacje i grupowanie danych</a>\n<ul>\n<li><a href=\"#group-by\">GROUP BY</a></li>\n<li><a href=\"#funkcje-agreguj%C4%85ce\">Funkcje agregujące</a></li>\n<li><a href=\"#having\">HAVING</a></li>\n</ul>\n</li>\n<li><a href=\"#podzapytania-subqueries\">Podzapytania (subqueries)</a>\n<ul>\n<li><a href=\"#podzapytania-w-select\">Podzapytania w SELECT</a></li>\n<li><a href=\"#podzapytania-w-where-i-having\">Podzapytania w WHERE i HAVING</a></li>\n<li><a href=\"#podzapytania-skorelowane\">Podzapytania skorelowane</a></li>\n</ul>\n</li>\n<li><a href=\"#operacje-na-zbiorach-union-intersect-except\">Operacje na zbiorach (UNION, INTERSECT, EXCEPT)</a></li>\n<li><a href=\"#funkcje-wbudowane-w-sql\">Funkcje wbudowane w SQL</a>\n<ul>\n<li><a href=\"#funkcje-tekstowe\">Funkcje tekstowe</a></li>\n<li><a href=\"#funkcje-daty-i-czasu\">Funkcje daty i czasu</a></li>\n<li><a href=\"#funkcje-warunkowe\">Funkcje warunkowe</a></li>\n</ul>\n</li>\n<li><a href=\"#widoki-view-i-ich-zastosowania\">Widoki (VIEW) i ich zastosowania</a></li>\n<li><a href=\"#praktyczne-zadania\">Praktyczne zadania</a></li>\n<li><a href=\"#podsumowanie\">Podsumowanie</a></li>\n</ol>\n<hr>\n<h2 id=\"łączenie-tabel-join\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#łączenie-tabel-join\">>></a>Łączenie tabel (JOIN)</h2>\n<h3 id=\"czym-jest-join-i-po-co-go-używać\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#czym-jest-join-i-po-co-go-używać\">>>></a>Czym jest JOIN i po co go używać?</h3>\n<p>JOIN pozwala połączyć dane z kilku tabel w jednym zapytaniu – jest to niezbędne, jeśli chcesz łączyć informacje rozdzielone na logiczne części (np. dane klienta i jego zamówienia).<br>\nBez JOIN musiałbyś pisać wiele zapytań lub duplikować dane w jednej tabeli.</p>\n<hr>\n<h3 id=\"inner-join\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#inner-join\">>>></a>INNER JOIN</h3>\n<p><strong>Opis:</strong><br>\nZwraca tylko te rekordy, które mają dopasowanie w obu łączonych tabelach (czyli tylko pasujące pary).</p>\n<p><strong>Składnia:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> tabela1.kolumnaA, tabela2.kolumnaB\n<span class=\"hljs-keyword\">FROM</span> tabela1\n<span class=\"hljs-keyword\">INNER</span> <span class=\"hljs-keyword\">JOIN</span> tabela2 <span class=\"hljs-keyword\">ON</span> tabela1.klucz <span class=\"hljs-operator\">=</span> tabela2.klucz_obcy;\n</code></pre>\n<ul>\n<li><code>INNER JOIN</code> – typ złączenia.</li>\n<li><code>ON tabela1.klucz = tabela2.klucz_obcy</code> – warunek, określający, które rekordy mają być połączone.</li>\n</ul>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> Klient.imie, Zamowienie.data\n<span class=\"hljs-keyword\">FROM</span> Klient\n<span class=\"hljs-keyword\">INNER</span> <span class=\"hljs-keyword\">JOIN</span> Zamowienie <span class=\"hljs-keyword\">ON</span> Klient.id <span class=\"hljs-operator\">=</span> Zamowienie.klient_id;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nPobierz imię klienta oraz datę jego zamówienia. Rekord zostanie zwrócony tylko, jeśli klient ma zamówienia.</p>\n<hr>\n<h3 id=\"left-join-right-join-full-join\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#left-join-right-join-full-join\">>>></a>LEFT JOIN, RIGHT JOIN, FULL JOIN</h3>\n<h4 id=\"left-join\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#left-join\">>>>></a>LEFT JOIN</h4>\n<p><strong>Opis:</strong><br>\nZwraca wszystkie rekordy z lewej tabeli oraz dopasowania z prawej, a jeśli ich nie ma – wstawia NULL.</p>\n<p><strong>Składnia:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> Klient.imie, Zamowienie.data\n<span class=\"hljs-keyword\">FROM</span> Klient\n<span class=\"hljs-keyword\">LEFT</span> <span class=\"hljs-keyword\">JOIN</span> Zamowienie <span class=\"hljs-keyword\">ON</span> Klient.id <span class=\"hljs-operator\">=</span> Zamowienie.klient_id;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nZwraca wszystkich klientów, niezależnie czy mają zamówienia. Jeśli nie mają, w kolumnie <code>data</code> pojawi się NULL.</p>\n<h4 id=\"right-join\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#right-join\">>>>></a>RIGHT JOIN</h4>\n<p><strong>Opis:</strong><br>\nDziała jak LEFT JOIN, ale odwrotnie – zwraca wszystkie rekordy z prawej tabeli.</p>\n<h4 id=\"full-join\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#full-join\">>>>></a>FULL JOIN</h4>\n<p><strong>Opis:</strong><br>\nZwraca wszystkie rekordy z obu tabel, dopasowane lub nie.</p>\n<p><strong>Przykład porównania wyników:</strong></p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Klient.imie</th><th>Zamowienie.data</th></tr></thead><tbody><tr><td>Jan</td><td>2025-01-01</td></tr><tr><td>Anna</td><td>NULL</td></tr></tbody></table>\n<hr>\n<h3 id=\"samozłączenia-self-join\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#samozłączenia-self-join\">>>></a>Samozłączenia (SELF JOIN)</h3>\n<p>Czasem trzeba połączyć tabelę samą z sobą (np. struktura przełożonych i pracowników).</p>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> A.imie <span class=\"hljs-keyword\">AS</span> pracownik, B.imie <span class=\"hljs-keyword\">AS</span> przelozony\n<span class=\"hljs-keyword\">FROM</span> Pracownik A\n<span class=\"hljs-keyword\">LEFT</span> <span class=\"hljs-keyword\">JOIN</span> Pracownik B <span class=\"hljs-keyword\">ON</span> A.przelozony_id <span class=\"hljs-operator\">=</span> B.id;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nKażdy pracownik ma przełożonego – łączymy tabelę Pracownik z samą sobą, by uzyskać imię szefa.</p>\n<hr>\n<h2 id=\"agregacje-i-grupowanie-danych\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#agregacje-i-grupowanie-danych\">>></a>Agregacje i grupowanie danych</h2>\n<h3 id=\"group-by\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#group-by\">>>></a>GROUP BY</h3>\n<p><strong>Opis:</strong><br>\nGROUP BY służy do grupowania rekordów wg wskazanej kolumny, np. pokazania liczby zamówień dla każdego klienta.</p>\n<p><strong>Składnia:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> kolumna_grupujaca, funkcja_agregujaca(kolumna)\n<span class=\"hljs-keyword\">FROM</span> tabela\n<span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> kolumna_grupujaca;\n</code></pre>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> miasto, <span class=\"hljs-built_in\">COUNT</span>(<span class=\"hljs-operator\">*</span>) <span class=\"hljs-keyword\">AS</span> liczba_klientow\n<span class=\"hljs-keyword\">FROM</span> Klient\n<span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> miasto;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nZlicz ilu klientów pochodzi z każdego miasta.</p>\n<hr>\n<h3 id=\"funkcje-agregujące\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#funkcje-agregujące\">>>></a>Funkcje agregujące</h3>\n<ul>\n<li><code>COUNT(*)</code> – zlicza wszystkie rekordy w grupie.</li>\n<li><code>SUM(kolumna)</code> – suma wartości z danej kolumny.</li>\n<li><code>AVG(kolumna)</code> – średnia wartość.</li>\n<li><code>MIN(kolumna)</code> / <code>MAX(kolumna)</code> – najmniejsza/największa wartość.</li>\n</ul>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> produkt_id, <span class=\"hljs-built_in\">SUM</span>(ilosc) <span class=\"hljs-keyword\">AS</span> sprzedano\n<span class=\"hljs-keyword\">FROM</span> Zamowienie_Produkt\n<span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> produkt_id;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nIle sztuk każdego produktu sprzedano w sumie?</p>\n<hr>\n<h3 id=\"having\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#having\">>>></a>HAVING</h3>\n<p><strong>Opis:</strong><br>\nHAVING filtruje wyniki po agregacji (po GROUP BY), czego nie można zrobić za pomocą WHERE.</p>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> miasto, <span class=\"hljs-built_in\">COUNT</span>(<span class=\"hljs-operator\">*</span>) <span class=\"hljs-keyword\">AS</span> liczba\n<span class=\"hljs-keyword\">FROM</span> Klient\n<span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> miasto\n<span class=\"hljs-keyword\">HAVING</span> <span class=\"hljs-built_in\">COUNT</span>(<span class=\"hljs-operator\">*</span>) <span class=\"hljs-operator\">></span> <span class=\"hljs-number\">5</span>;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nWyświetl tylko te miasta, w których liczba klientów jest większa niż 5.</p>\n<hr>\n<h2 id=\"podzapytania-subqueries\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podzapytania-subqueries\">>></a>Podzapytania (subqueries)</h2>\n<p>Podzapytanie to zapytanie SQL „wewnątrz” innego zapytania.</p>\n<hr>\n<h3 id=\"podzapytania-w-select\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podzapytania-w-select\">>>></a>Podzapytania w SELECT</h3>\n<p><strong>Opis:</strong><br>\nMożesz użyć podzapytania, by wyliczyć wartość dla każdego rekordu.</p>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> imie,\n  (<span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">COUNT</span>(<span class=\"hljs-operator\">*</span>) <span class=\"hljs-keyword\">FROM</span> Zamowienie <span class=\"hljs-keyword\">WHERE</span> Zamowienie.klient_id <span class=\"hljs-operator\">=</span> Klient.id) <span class=\"hljs-keyword\">AS</span> liczba_zamowien\n<span class=\"hljs-keyword\">FROM</span> Klient;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nPobierz imię klienta i liczbę jego zamówień – dla każdego klienta osobno liczymy zamówienia.</p>\n<hr>\n<h3 id=\"podzapytania-w-where-i-having\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podzapytania-w-where-i-having\">>>></a>Podzapytania w WHERE i HAVING</h3>\n<p><strong>Opis:</strong><br>\nPodzapytania mogą służyć jako warunek wyboru rekordów.</p>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> imie <span class=\"hljs-keyword\">FROM</span> Klient\n<span class=\"hljs-keyword\">WHERE</span> id <span class=\"hljs-keyword\">IN</span> (<span class=\"hljs-keyword\">SELECT</span> klient_id <span class=\"hljs-keyword\">FROM</span> Zamowienie <span class=\"hljs-keyword\">WHERE</span> data <span class=\"hljs-operator\">></span> <span class=\"hljs-string\">'2025-01-01'</span>);\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nWyświetl tylko klientów, którzy złożyli zamówienie po 1 stycznia 2025.</p>\n<hr>\n<h3 id=\"podzapytania-skorelowane\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podzapytania-skorelowane\">>>></a>Podzapytania skorelowane</h3>\n<p><strong>Opis:</strong><br>\nPodzapytanie odwołuje się do wartości z zewnętrznego zapytania.</p>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> imie\n<span class=\"hljs-keyword\">FROM</span> Klient k\n<span class=\"hljs-keyword\">WHERE</span> <span class=\"hljs-keyword\">EXISTS</span> (\n  <span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">FROM</span> Zamowienie z <span class=\"hljs-keyword\">WHERE</span> z.klient_id <span class=\"hljs-operator\">=</span> k.id <span class=\"hljs-keyword\">AND</span> z.data <span class=\"hljs-operator\">></span> <span class=\"hljs-string\">'2025-01-01'</span>\n);\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nSprawdzamy dla każdego klienta, czy istnieje zamówienie po podanej dacie.</p>\n<hr>\n<h2 id=\"operacje-na-zbiorach-union-intersect-except\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#operacje-na-zbiorach-union-intersect-except\">>></a>Operacje na zbiorach (UNION, INTERSECT, EXCEPT)</h2>\n<ul>\n<li><strong>UNION:</strong> łączy wyniki wielu zapytań, eliminując duplikaty.</li>\n<li><strong>UNION ALL:</strong> jak UNION, ale zachowuje duplikaty.</li>\n<li><strong>INTERSECT:</strong> zwraca wspólne rekordy.</li>\n<li><strong>EXCEPT:</strong> zwraca rekordy z pierwszego zapytania, których nie ma w drugim.</li>\n</ul>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> imie <span class=\"hljs-keyword\">FROM</span> Klient\n<span class=\"hljs-keyword\">UNION</span>\n<span class=\"hljs-keyword\">SELECT</span> imie <span class=\"hljs-keyword\">FROM</span> Pracownik;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nPobierz listę wszystkich imion – zarówno klientów, jak i pracowników (bez powtórzeń).</p>\n<hr>\n<h2 id=\"funkcje-wbudowane-w-sql\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#funkcje-wbudowane-w-sql\">>></a>Funkcje wbudowane w SQL</h2>\n<h3 id=\"funkcje-tekstowe\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#funkcje-tekstowe\">>>></a>Funkcje tekstowe</h3>\n<ul>\n<li><code>LOWER(tekst)</code> – zamienia tekst na małe litery.</li>\n<li><code>UPPER(tekst)</code> – na wielkie litery.</li>\n<li><code>CONCAT(a, b)</code> – łączy teksty.</li>\n<li><code>SUBSTRING(tekst, start, długość)</code> – wycina fragment tekstu.</li>\n<li><code>LENGTH(tekst)</code> – długość tekstu.</li>\n</ul>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> CONCAT(imie, <span class=\"hljs-string\">' '</span>, nazwisko) <span class=\"hljs-keyword\">AS</span> pelne_imie <span class=\"hljs-keyword\">FROM</span> Klient;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nTworzy pełne imię i nazwisko klienta.</p>\n<hr>\n<h3 id=\"funkcje-daty-i-czasu\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#funkcje-daty-i-czasu\">>>></a>Funkcje daty i czasu</h3>\n<ul>\n<li><code>NOW()</code> – aktualna data i czas.</li>\n<li><code>DATE()</code> – wydobywa datę z pola daty/czasu.</li>\n<li><code>YEAR(data)</code> – wyciąga rok z daty.</li>\n</ul>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> imie, <span class=\"hljs-keyword\">YEAR</span>(data_urodzenia) <span class=\"hljs-keyword\">AS</span> rok_urodzenia <span class=\"hljs-keyword\">FROM</span> Klient;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nWyświetla imię klienta i rok jego urodzenia.</p>\n<hr>\n<h3 id=\"funkcje-warunkowe\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#funkcje-warunkowe\">>>></a>Funkcje warunkowe</h3>\n<ul>\n<li><code>CASE WHEN ... THEN ... ELSE ... END</code> – pozwala warunkowo zmieniać wartości.</li>\n</ul>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> imie,\n  <span class=\"hljs-keyword\">CASE</span>\n    <span class=\"hljs-keyword\">WHEN</span> wiek <span class=\"hljs-operator\">&#x3C;</span> <span class=\"hljs-number\">18</span> <span class=\"hljs-keyword\">THEN</span> <span class=\"hljs-string\">'niepełnoletni'</span>\n    <span class=\"hljs-keyword\">ELSE</span> <span class=\"hljs-string\">'pełnoletni'</span>\n  <span class=\"hljs-keyword\">END</span> <span class=\"hljs-keyword\">AS</span> status\n<span class=\"hljs-keyword\">FROM</span> Klient;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nDla każdego klienta określa status na podstawie wieku.</p>\n<hr>\n<h2 id=\"widoki-view-i-ich-zastosowania\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#widoki-view-i-ich-zastosowania\">>></a>Widoki (VIEW) i ich zastosowania</h2>\n<p><strong>Opis:</strong><br>\nWidok (VIEW) to „wirtualna tabela” będąca wynikiem zapytania. Widoki upraszczają kod, mogą ukrywać złożoność i zabezpieczać dane.</p>\n<p><strong>Tworzenie widoku:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">VIEW</span> Klienci_aktywni <span class=\"hljs-keyword\">AS</span>\n<span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> Klient <span class=\"hljs-keyword\">WHERE</span> aktywny <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span>;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nTworzymy widok z aktywnymi klientami. Potem używamy go jak zwykłej tabeli:</p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> Klienci_aktywni;\n</code></pre>\n<hr>\n<h2 id=\"praktyczne-zadania\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#praktyczne-zadania\">>></a>Praktyczne zadania</h2>\n<h3 id=\"zadanie-1-złączenia\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-1-złączenia\">>>></a>Zadanie 1: Złączenia</h3>\n<p>Pobierz imię klienta oraz datę każdego jego zamówienia.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> Klient.imie, Zamowienie.data\n<span class=\"hljs-keyword\">FROM</span> Klient\n<span class=\"hljs-keyword\">INNER</span> <span class=\"hljs-keyword\">JOIN</span> Zamowienie <span class=\"hljs-keyword\">ON</span> Klient.id <span class=\"hljs-operator\">=</span> Zamowienie.klient_id;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nŁączymy tabelę Klient z Zamówienie po kluczu głównym Klient.id i kluczu obcym Zamowienie.klient_id.</p>\n</details>\n<hr>\n<h3 id=\"zadanie-2-agregacja\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-2-agregacja\">>>></a>Zadanie 2: Agregacja</h3>\n<p>Wyświetl liczbę zamówień złożonych przez każdego klienta.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> Klient.imie, <span class=\"hljs-built_in\">COUNT</span>(Zamowienie.id) <span class=\"hljs-keyword\">AS</span> liczba_zamowien\n<span class=\"hljs-keyword\">FROM</span> Klient\n<span class=\"hljs-keyword\">LEFT</span> <span class=\"hljs-keyword\">JOIN</span> Zamowienie <span class=\"hljs-keyword\">ON</span> Klient.id <span class=\"hljs-operator\">=</span> Zamowienie.klient_id\n<span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> Klient.imie;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nŁączymy tabele i grupujemy po imieniu klienta. LEFT JOIN pozwala pokazać także tych, którzy nie mają zamówień (liczba_zamowien = 0).</p>\n</details>\n<hr>\n<h3 id=\"zadanie-3-podzapytanie\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-3-podzapytanie\">>>></a>Zadanie 3: Podzapytanie</h3>\n<p>Wyświetl produkty zamówione przez klientów z miasta \"Warszawa\".</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> Produkt.nazwa\n<span class=\"hljs-keyword\">FROM</span> Produkt\n<span class=\"hljs-keyword\">INNER</span> <span class=\"hljs-keyword\">JOIN</span> Zamowienie_Produkt <span class=\"hljs-keyword\">ON</span> Produkt.id <span class=\"hljs-operator\">=</span> Zamowienie_Produkt.produkt_id\n<span class=\"hljs-keyword\">INNER</span> <span class=\"hljs-keyword\">JOIN</span> Zamowienie <span class=\"hljs-keyword\">ON</span> Zamowienie_Produkt.zamowienie_id <span class=\"hljs-operator\">=</span> Zamowienie.id\n<span class=\"hljs-keyword\">INNER</span> <span class=\"hljs-keyword\">JOIN</span> Klient <span class=\"hljs-keyword\">ON</span> Zamowienie.klient_id <span class=\"hljs-operator\">=</span> Klient.id\n<span class=\"hljs-keyword\">WHERE</span> Klient.miasto <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">'Warszawa'</span>;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nŁączymy cztery tabele, by uzyskać produkty z zamówień klientów z Warszawy.</p>\n</details>\n<hr>\n<h3 id=\"zadanie-4-operacje-na-zbiorach\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-4-operacje-na-zbiorach\">>>></a>Zadanie 4: Operacje na zbiorach</h3>\n<p>Wyświetl imiona osób będących zarówno klientami, jak i pracownikami.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> imie <span class=\"hljs-keyword\">FROM</span> Klient\n<span class=\"hljs-keyword\">INTERSECT</span>\n<span class=\"hljs-keyword\">SELECT</span> imie <span class=\"hljs-keyword\">FROM</span> Pracownik;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nINTERSECT zwraca tylko te imiona, które są jednocześnie w obu tabelach.</p>\n</details>\n<hr>\n<h3 id=\"zadanie-5-widoki\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-5-widoki\">>>></a>Zadanie 5: Widoki</h3>\n<p>Stwórz widok prezentujący tylko klientów, którzy mają więcej niż 2 zamówienia.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">VIEW</span> Klienci_czesto_zamawiajacy <span class=\"hljs-keyword\">AS</span>\n<span class=\"hljs-keyword\">SELECT</span> Klient.id, Klient.imie\n<span class=\"hljs-keyword\">FROM</span> Klient\n<span class=\"hljs-keyword\">JOIN</span> Zamowienie <span class=\"hljs-keyword\">ON</span> Klient.id <span class=\"hljs-operator\">=</span> Zamowienie.klient_id\n<span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> Klient.id, Klient.imie\n<span class=\"hljs-keyword\">HAVING</span> <span class=\"hljs-built_in\">COUNT</span>(Zamowienie.id) <span class=\"hljs-operator\">></span> <span class=\"hljs-number\">2</span>;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nWidok zawiera tylko tych klientów, którzy mają więcej niż dwa zamówienia (dzięki HAVING).</p>\n</details>\n<hr>\n<h3 id=\"zadanie-6-funkcje-tekstowe-i-warunkowe\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-6-funkcje-tekstowe-i-warunkowe\">>>></a>Zadanie 6: Funkcje tekstowe i warunkowe</h3>\n<p>Wyświetl imię i status pełnoletności każdego klienta (pełnoletni/niepełnoletni), imię wypisz wielkimi literami.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">UPPER</span>(imie) <span class=\"hljs-keyword\">AS</span> imie,\n  <span class=\"hljs-keyword\">CASE</span> <span class=\"hljs-keyword\">WHEN</span> wiek <span class=\"hljs-operator\">&#x3C;</span> <span class=\"hljs-number\">18</span> <span class=\"hljs-keyword\">THEN</span> <span class=\"hljs-string\">'niepełnoletni'</span> <span class=\"hljs-keyword\">ELSE</span> <span class=\"hljs-string\">'pełnoletni'</span> <span class=\"hljs-keyword\">END</span> <span class=\"hljs-keyword\">AS</span> status\n<span class=\"hljs-keyword\">FROM</span> Klient;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nUPPER konwertuje imię na wielkie litery, CASE określa status na podstawie wieku.</p>\n</details>\n<hr>\n<h2 id=\"podsumowanie\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podsumowanie\">>></a>Podsumowanie</h2>\n<p>Zaawansowane zapytania SQL pozwalają na efektywną analizę i przetwarzanie dużych zbiorów danych. Łączenie tabel, agregacje, podzapytania i widoki otwierają szerokie możliwości analityczne i raportowe. Szczegółowe zrozumienie składni i działania każdej komendy to klucz do budowania profesjonalnych rozwiązań bazodanowych!</p>","resourceUrl","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/zaawansowane-zapytania-sql.md","readingTime","5 minut"]
