[{"_1":2},"routes/search",{"_3":4},"data",{"_5":6,"_89":90,"_1222":1223},"articles",[7,37,55,67,78],{"_8":9,"_10":11,"_12":13,"_22":23,"_24":25,"_26":27,"_28":29,"_30":31,"_32":33,"_34":-7,"_35":36},"title","Framework na 70 linii, czyli implementacja Signal API od zera","description","Dowiedz się, jak zaimplementować minimalistyczny system reaktywny (Signal API) w JavaScript/TypeScript w mniej niż 70 liniach kodu. Praktyczny przewodnik krok po kroku.","keywords",[14,15,16,17,18,19,20,21],"signal","reactive","javascript","typescript","frontend","framework","architektura","blog","categories",[17],"createdAt",["D",1750550400000],"id","2c653b6f-53f1-4bbb-92d9-0c062c2b2fd4","slug","framework-na-70-linii-czyli-implementacja-signal-api-od-zera","content","<p>Dowiedz się, jak zbudować własny, minimalistyczny system reaktywny inspirowany Signal API – od koncepcji po gotowy kod. Ten artykuł przeprowadzi Cię krok po kroku przez założenia architektury, implementację, przykłady użycia i pomysły na dalszy rozwój. 🚦</p>\n<h2 id=\"spis-treści\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#spis-treści\">>></a>Spis treści</h2>\n<ol>\n<li><a href=\"#czym-jest-signal-api\">Czym jest Signal API?</a></li>\n<li><a href=\"#po-co-nam-sygna%C5%82y\">Po co nam sygnały?</a></li>\n<li><a href=\"#podstawowe-za%C5%82o%C5%BCenia-architektury\">Podstawowe założenia architektury</a></li>\n<li><a href=\"#implementacja-signal-api\">Implementacja Signal API</a></li>\n<li><a href=\"#prosty-przyk%C5%82ad-u%C5%BCycia\">Prosty przykład użycia</a></li>\n<li><a href=\"#co-dalej-inspiracje-i-rozwijanie-w%C5%82asnego-frameworka\">Co dalej? Inspiracje i rozwijanie własnego frameworka</a></li>\n</ol>\n<hr>\n<h2 id=\"czym-jest-signal-api\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#czym-jest-signal-api\">>></a>Czym jest Signal API?</h2>\n<p><strong>Signal API</strong> to nowoczesny sposób zarządzania stanem i propagowania zmian w aplikacjach frontendowych. Sygnał (Signal) to po prostu wartość, która jest obserwowalna – każda zmiana tej wartości automatycznie powiadamia powiązane fragmenty kodu, które mogą na nią zareagować (np. przerysować UI). Dzięki temu nie musisz ręcznie pilnować subskrypcji i aktualizacji — system robi to za Ciebie w sposób wydajny i przewidywalny.</p>\n<hr>\n<h2 id=\"po-co-nam-sygnały\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#po-co-nam-sygnały\">>></a>Po co nam sygnały?</h2>\n<ul>\n<li>Eliminują ręczną obsługę subskrypcji i odświeżania 🔄</li>\n<li>Upraszczają zarządzanie stanem i zależnościami w aplikacji</li>\n<li>Pozwalają na budowę bardzo wydajnych i przewidywalnych interfejsów</li>\n<li>Zwiększają czytelność i modularność kodu</li>\n</ul>\n<p>Mechanika sygnałów leży u podstaw takich rozwiązań jak SolidJS Signals, Preact Signals czy system reaktywności w Vue.js.</p>\n<hr>\n<h2 id=\"podstawowe-założenia-architektury\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podstawowe-założenia-architektury\">>></a>Podstawowe założenia architektury</h2>\n<ol>\n<li><strong>Signal</strong>: funkcja przechowująca wartość i listę „tasków” (efektów) zależnych od tej wartości.</li>\n<li><strong>effect</strong>: funkcja, która wykona zadanie reagując automatycznie na zmiany sygnału.</li>\n<li><strong>computed</strong>: sygnał zależny, obliczany na podstawie innych sygnałów.</li>\n<li><strong>Task i AbortSignal</strong>: pozwalają bezpiecznie anulować zadania, gdy są już niepotrzebne.</li>\n</ol>\n<p>Cel: zachować prostotę implementacji i zrozumienie działania reaktywności od podstaw.</p>\n<hr>\n<h2 id=\"implementacja-signal-api\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#implementacja-signal-api\">>></a>Implementacja Signal API</h2>\n<p>Poniżej znajdziesz kompletny kod minimalistycznego Signal API – całość w TypeScript, gotowa do użycia i dalszej rozbudowy! 🛠️</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">Task</span> = <span class=\"hljs-function\">(<span class=\"hljs-params\"><span class=\"hljs-attr\">abortSignal</span>: <span class=\"hljs-title class_\">AbortSignal</span></span>) =></span> <span class=\"hljs-built_in\">void</span>;\n\n<span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">Signal</span>&#x3C;T> = <span class=\"hljs-function\">() =></span> T;\n\n<span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">WritableSignal</span>&#x3C;T> = <span class=\"hljs-title class_\">Signal</span>&#x3C;T> &#x26; {\n  <span class=\"hljs-title function_\">set</span>(<span class=\"hljs-attr\">value</span>: T): <span class=\"hljs-built_in\">void</span>;\n  <span class=\"hljs-title function_\">update</span>(<span class=\"hljs-attr\">fn</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\"><span class=\"hljs-attr\">value</span>: T</span>) =></span> T): <span class=\"hljs-built_in\">void</span>;\n};\n\n<span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">currentTask</span>: <span class=\"hljs-title class_\">Task</span> | <span class=\"hljs-literal\">null</span> = <span class=\"hljs-literal\">null</span>;\n<span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">currentAbortController</span>: <span class=\"hljs-title class_\">AbortController</span> | <span class=\"hljs-literal\">null</span> = <span class=\"hljs-literal\">null</span>;\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">runTask</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">task</span>: <span class=\"hljs-title class_\">Task</span></span>) {\n  <span class=\"hljs-keyword\">if</span> (currentAbortController) currentAbortController.<span class=\"hljs-title function_\">abort</span>();\n  currentAbortController = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">AbortController</span>();\n  <span class=\"hljs-title function_\">task</span>(currentAbortController.<span class=\"hljs-property\">signal</span>);\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">effect</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">task</span>: <span class=\"hljs-title class_\">Task</span></span>): <span class=\"hljs-built_in\">void</span> {\n  currentTask = task;\n  <span class=\"hljs-title function_\">runTask</span>(task);\n  currentTask = <span class=\"hljs-literal\">null</span>;\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">function</span> signal&#x3C;T>(<span class=\"hljs-attr\">setupOrValue</span>: T | (<span class=\"hljs-function\">() =></span> T)): <span class=\"hljs-title class_\">WritableSignal</span>&#x3C;T> {\n  <span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">tasks</span>: <span class=\"hljs-title class_\">Set</span>&#x3C;<span class=\"hljs-title class_\">Task</span>> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Set</span>();\n  <span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">value</span>: T;\n  <span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">valueSnapshot</span>: <span class=\"hljs-built_in\">string</span>;\n  <span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">previousValueSnapshot</span>: <span class=\"hljs-built_in\">string</span>;\n\n  <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">callSetupOrValue</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">if</span> (setupOrValue <span class=\"hljs-keyword\">instanceof</span> <span class=\"hljs-title class_\">Function</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title function_\">setupOrValue</span>();\n    <span class=\"hljs-keyword\">return</span> setupOrValue;\n  }\n\n  <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">getValue</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">const</span> currentValue = <span class=\"hljs-title function_\">callSetupOrValue</span>();\n    <span class=\"hljs-keyword\">const</span> currentValueSnapshot = <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(currentValue);\n\n    <span class=\"hljs-keyword\">if</span> (currentValueSnapshot !== previousValueSnapshot) {\n      previousValueSnapshot = currentValueSnapshot;\n      value = currentValue;\n      valueSnapshot = currentValueSnapshot;\n    }\n\n    <span class=\"hljs-keyword\">return</span> value;\n  }\n\n  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">signal</span>: <span class=\"hljs-title class_\">WritableSignal</span>&#x3C;T> = <span class=\"hljs-function\">() =></span> {\n    <span class=\"hljs-keyword\">if</span> (currentTask) tasks.<span class=\"hljs-title function_\">add</span>(currentTask);\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title function_\">getValue</span>();\n  };\n\n  <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">updateValue</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">payload</span>: T</span>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-keyword\">const</span> payloadSnapshot = <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(payload);\n    <span class=\"hljs-keyword\">if</span> (valueSnapshot === payloadSnapshot) <span class=\"hljs-keyword\">return</span>;\n    value = payload;\n    valueSnapshot = payloadSnapshot;\n    tasks.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">task</span>) =></span> <span class=\"hljs-title function_\">runTask</span>(task));\n  }\n\n  signal.<span class=\"hljs-property\">set</span> = <span class=\"hljs-function\">(<span class=\"hljs-params\">value</span>) =></span> <span class=\"hljs-title function_\">updateValue</span>(value);\n\n  signal.<span class=\"hljs-property\">update</span> = <span class=\"hljs-function\">(<span class=\"hljs-params\">setter</span>) =></span> <span class=\"hljs-title function_\">updateValue</span>(<span class=\"hljs-title function_\">setter</span>(<span class=\"hljs-title function_\">getValue</span>()));\n\n  <span class=\"hljs-keyword\">return</span> signal;\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> computed = &#x3C;T>(<span class=\"hljs-attr\">setup</span>: <span class=\"hljs-function\">() =></span> T): <span class=\"hljs-title class_\">Signal</span>&#x3C;T> => setup;\n</code></pre>\n<hr>\n<h2 id=\"prosty-przykład-użycia\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#prosty-przykład-użycia\">>></a>Prosty przykład użycia</h2>\n<p>Zobacz, jak można wykorzystać własny system sygnałów w praktyce: 👇</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">import</span> { signal, effect } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"./lib\"</span>;\n\n<span class=\"hljs-keyword\">const</span> count = <span class=\"hljs-title function_\">signal</span>(<span class=\"hljs-number\">0</span>);\n\n<span class=\"hljs-title function_\">effect</span>(<span class=\"hljs-function\">() =></span> {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">\"Wartość licznika:\"</span>, <span class=\"hljs-title function_\">count</span>());\n});\n\ncount.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-number\">1</span>); <span class=\"hljs-comment\">// Wartość licznika: 1</span>\ncount.<span class=\"hljs-title function_\">update</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">v</span>) =></span> v + <span class=\"hljs-number\">5</span>); <span class=\"hljs-comment\">// Wartość licznika: 6</span>\n</code></pre>\n<h3 id=\"signal-z-obiektem\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#signal-z-obiektem\">>>></a>signal z obiektem</h3>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">import</span> { signal, effect } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"./lib\"</span>;\n\n<span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">User</span> {\n  <span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\">number</span>;\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span>;\n}\n\n<span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">State</span> {\n  <span class=\"hljs-attr\">users</span>: <span class=\"hljs-title class_\">Array</span>&#x3C;<span class=\"hljs-title class_\">User</span>>;\n}\n\n<span class=\"hljs-keyword\">const</span> state = signal&#x3C;<span class=\"hljs-title class_\">State</span>>({\n  <span class=\"hljs-attr\">users</span>: [],\n});\n\n<span class=\"hljs-title function_\">effect</span>(<span class=\"hljs-function\">() =></span> {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">\"Wartość stanu aplikacji: \"</span>, <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(<span class=\"hljs-title function_\">state</span>()));\n});\n\nstate.<span class=\"hljs-title function_\">set</span>({ <span class=\"hljs-attr\">users</span>: [{ <span class=\"hljs-attr\">id</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Kuba\"</span> }] }); <span class=\"hljs-comment\">// Wartość stanu aplikacji:  {\"users\":[{\"id\":1,\"name\":\"Kuba\"}]}</span>\n\nstate.<span class=\"hljs-title function_\">update</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">prev</span>) =></span> ({\n  ...prev,\n  <span class=\"hljs-attr\">users</span>: [...prev.<span class=\"hljs-property\">users</span>, { <span class=\"hljs-attr\">id</span>: <span class=\"hljs-number\">2</span>, <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Ola\"</span> }],\n})); <span class=\"hljs-comment\">// Wartość stanu aplikacji:  {\"users\":[{\"id\":1,\"name\":\"Kuba\"},{\"id\":2,\"name\":\"Ola\"}]}</span>\n</code></pre>\n<h3 id=\"computed\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#computed\">>>></a>computed</h3>\n<p>Obliczanie wartości zależnej od innych sygnałów jest bardzo proste i pozwala na deklaratywność podobną do nowoczesnych frameworków:</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">import</span> { signal, effect, computed } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"./lib\"</span>;\n\n<span class=\"hljs-keyword\">const</span> a = <span class=\"hljs-title function_\">signal</span>(<span class=\"hljs-number\">2</span>);\n<span class=\"hljs-keyword\">const</span> b = <span class=\"hljs-title function_\">signal</span>(<span class=\"hljs-number\">3</span>);\n<span class=\"hljs-keyword\">const</span> sum = <span class=\"hljs-title function_\">computed</span>(<span class=\"hljs-function\">() =></span> <span class=\"hljs-title function_\">a</span>() + <span class=\"hljs-title function_\">b</span>());\n\n<span class=\"hljs-title function_\">effect</span>(<span class=\"hljs-function\">() =></span> {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">\"Suma:\"</span>, <span class=\"hljs-title function_\">sum</span>());\n});\n\na.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-number\">10</span>); <span class=\"hljs-comment\">// Suma: 13</span>\nb.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-number\">20</span>); <span class=\"hljs-comment\">// Suma: 30</span>\n</code></pre>\n<hr>\n<h2 id=\"co-dalej-inspiracje-i-rozwijanie-własnego-frameworka\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#co-dalej-inspiracje-i-rozwijanie-własnego-frameworka\">>></a>Co dalej? Inspiracje i rozwijanie własnego frameworka</h2>\n<ul>\n<li>Dodaj obsługę efektów czyszczących (cleanup) i anulowanie subskrypcji</li>\n<li>Przenieś sygnały bezpośrednio na poziom UI (np. automatyczna aktualizacja DOM)</li>\n<li>Zintegruj z React, Vue lub własnym mini-frameworkiem</li>\n<li>Zainspiruj się kodem SolidJS, Preact Signals i systemem reaktywnym Vue</li>\n<li>Przetestuj własne pomysły na optymalizację i rozbudowę systemu</li>\n</ul>\n<blockquote>\n<p>Minimalizm daje moc! Dzięki prostej implementacji możesz zrozumieć, jak działają sygnały pod maską i stworzyć swój własny system reaktywności dostosowany do potrzeb. 💡</p>\n</blockquote>","resourceUrl","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/articles/framework-na-70-linii-czyli-implementacja-signal-api-od-zera.md","quiz","readingTime","3 minuty",{"_8":38,"_10":39,"_12":40,"_22":46,"_24":49,"_26":50,"_28":51,"_30":52,"_32":53,"_34":-7,"_35":54},"Proste deployowanie przy użyciu GitHub Actions","Dowiedz się, jak wdrożyć dowolną aplikację za pomocą GitHub Actions w prosty i automatyczny sposób.",[41,42,43,44,45,21],"react","github actions","deployment","CI/CD","automatyzacja",[47,48],"devops","ci",["D",1741996800000],"e463dc79-cda2-4c3d-ae21-4a204cf54656","deployment-github-actions","<p>GitHub Actions to potężne narzędzie do automatyzacji procesów CI/CD. W tym artykule na przykładzie aplikacji React pokażę, jak w prosty sposób skonfigurować automatyczne wdrażanie na GitHub Pages z wykorzystaniem GitHub Actions.</p>\n<hr>\n<h2 id=\"spis-treści\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#spis-treści\">>></a>Spis treści</h2>\n<ol>\n<li><a href=\"#wprowadzenie\">Wprowadzenie</a></li>\n<li><a href=\"#wymagania-wst%C4%99pne\">Wymagania wstępne</a></li>\n<li><a href=\"#tworzenie-aplikacji-react\">Tworzenie aplikacji React</a></li>\n<li><a href=\"#konfiguracja-workflow-github-actions\">Konfiguracja workflow GitHub Actions</a>\n<ul>\n<li><a href=\"#przyk%C5%82adowy-plik-deployyml\">Przykładowy plik deploy.yml</a></li>\n<li><a href=\"#om%C3%B3wienie-krok%C3%B3w-workflow\">Omówienie kroków workflow</a></li>\n</ul>\n</li>\n<li><a href=\"#konfiguracja-github-pages\">Konfiguracja GitHub Pages</a></li>\n<li><a href=\"#podsumowanie\">Podsumowanie</a></li>\n<li><a href=\"#bonus-pe%C5%82ny-przyk%C5%82ad-w-repozytorium\">Bonus: Pełny przykład w repozytorium</a></li>\n</ol>\n<hr>\n<h2 id=\"wprowadzenie\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#wprowadzenie\">>></a>Wprowadzenie</h2>\n<p>GitHub Actions umożliwia automatyzację procesów związanych z budowaniem, testowaniem i wdrażaniem aplikacji. Dzięki temu możesz wdrażać swoją aplikację na GitHub Pages lub inny hosting jednym commitem – bez ręcznego wykonywania deployu.</p>\n<hr>\n<h2 id=\"wymagania-wstępne\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#wymagania-wstępne\">>></a>Wymagania wstępne</h2>\n<p>Przed rozpoczęciem upewnij się, że posiadasz:</p>\n<ul>\n<li>Konto na GitHubie,</li>\n<li>Zainstalowany Node.js oraz npm,</li>\n<li>Aplikację React utworzoną przez <code>create-react-app</code> lub <code>create-react-router</code> (w przykładzie użyto tego drugiego).</li>\n</ul>\n<hr>\n<h2 id=\"tworzenie-aplikacji-react\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#tworzenie-aplikacji-react\">>></a>Tworzenie aplikacji React</h2>\n<p>Nie masz jeszcze projektu? Oto jak szybko utworzyć aplikację React:</p>\n<pre><code class=\"hljs language-sh\">npx create-react-router@latest my-app\n<span class=\"hljs-built_in\">cd</span> my-app\ngit init\ngit remote add origin https://github.com/twoj-user/twoj-repo.git\n</code></pre>\n<blockquote>\n<p><strong>Uwaga:</strong> Zmień <code>twoj-user</code> i <code>twoj-repo</code> na nazwę swojego użytkownika i repozytorium na GitHubie.</p>\n</blockquote>\n<hr>\n<h2 id=\"konfiguracja-workflow-github-actions\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#konfiguracja-workflow-github-actions\">>></a>Konfiguracja workflow GitHub Actions</h2>\n<p>Aby wdrożyć aplikację na GitHub Pages automatycznie, utwórz w repozytorium folder <code>.github/workflows</code>, a w nim plik <code>deploy.yml</code>.</p>\n<h3 id=\"przykładowy-plik-deployyml\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#przykładowy-plik-deployyml\">>>></a>Przykładowy plik deploy.yml</h3>\n<pre><code class=\"hljs language-yaml\"><span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Deploy</span> <span class=\"hljs-string\">React</span> <span class=\"hljs-string\">App</span> <span class=\"hljs-string\">to</span> <span class=\"hljs-string\">GitHub</span> <span class=\"hljs-string\">Pages</span>\n\n<span class=\"hljs-attr\">on:</span>\n  <span class=\"hljs-attr\">pull_request:</span>\n  <span class=\"hljs-attr\">push:</span>\n    <span class=\"hljs-attr\">branches:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">main</span>\n\n<span class=\"hljs-attr\">permissions:</span>\n  <span class=\"hljs-attr\">contents:</span> <span class=\"hljs-string\">write</span>\n\n<span class=\"hljs-attr\">jobs:</span>\n  <span class=\"hljs-attr\">build-and-deploy:</span>\n    <span class=\"hljs-attr\">runs-on:</span> <span class=\"hljs-string\">ubuntu-latest</span>\n    <span class=\"hljs-attr\">steps:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Checkout</span> <span class=\"hljs-string\">repo</span>\n        <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/checkout@v4</span>\n\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Install</span> <span class=\"hljs-string\">dependencies</span>\n        <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">install</span>\n\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Build</span> <span class=\"hljs-string\">project</span>\n        <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">run</span> <span class=\"hljs-string\">build</span>\n\n      <span class=\"hljs-comment\"># - name: Test project</span>\n      <span class=\"hljs-comment\">#   run: npm run test</span>\n\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Deploy</span> <span class=\"hljs-string\">to</span> <span class=\"hljs-string\">GitHub</span> <span class=\"hljs-string\">Pages</span>\n        <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">JamesIves/github-pages-deploy-action@v4</span>\n        <span class=\"hljs-attr\">if:</span> <span class=\"hljs-string\">github.ref</span> <span class=\"hljs-string\">==</span> <span class=\"hljs-string\">'refs/heads/main'</span> <span class=\"hljs-string\">&#x26;&#x26;</span> <span class=\"hljs-string\">github.event_name</span> <span class=\"hljs-string\">==</span> <span class=\"hljs-string\">'push'</span>\n        <span class=\"hljs-attr\">with:</span>\n          <span class=\"hljs-attr\">branch:</span> <span class=\"hljs-string\">gh-pages</span>\n          <span class=\"hljs-attr\">folder:</span> <span class=\"hljs-string\">build</span>\n</code></pre>\n<h3 id=\"omówienie-kroków-workflow\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#omówienie-kroków-workflow\">>>></a>Omówienie kroków workflow</h3>\n<ul>\n<li><strong>Trigger</strong>: Workflow uruchamia się na każdy <code>push</code> do brancha <code>main</code> oraz przy <code>pull_request</code>.</li>\n<li><strong>Uprawnienia</strong>: <code>permissions: contents: write</code> jest niezbędne do wykonania zapisu na branchu z GitHub Pages.</li>\n<li><strong>Kroki:</strong>\n<ol>\n<li><strong>Checkout repo</strong> – pobranie kodu źródłowego.</li>\n<li><strong>Install dependencies</strong> – instalacja zależności npm.</li>\n<li><strong>Build project</strong> – budowanie aplikacji produkcyjnej.</li>\n<li><em>(Opcjonalnie)</em> <strong>Test project</strong> – uruchomienie testów jednostkowych.</li>\n<li><strong>Deploy to GitHub Pages</strong> – automatyczny deploy do gałęzi <code>gh-pages</code> przy użyciu <a href=\"https://github.com/JamesIves/github-pages-deploy-action\">JamesIves/github-pages-deploy-action</a>.</li>\n</ol>\n</li>\n</ul>\n<hr>\n<h2 id=\"konfiguracja-github-pages\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#konfiguracja-github-pages\">>></a>Konfiguracja GitHub Pages</h2>\n<p>Aby GitHub Pages korzystało ze zdeployowanej aplikacji:</p>\n<ol>\n<li>Wejdź w ustawienia repozytorium: <strong>Settings</strong> → <strong>Pages</strong>.</li>\n<li>W sekcji <strong>Build and deployment</strong> ustaw <strong>Source</strong> na <code>GitHub Actions</code>.</li>\n<li>Zapisz zmiany. Od teraz każda zmiana na branchu <code>main</code> uruchomi automatyczny deploy.</li>\n</ol>\n<hr>\n<h2 id=\"podsumowanie\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podsumowanie\">>></a>Podsumowanie</h2>\n<p>GitHub Actions pozwala w pełni zautomatyzować proces wdrażania aplikacji React na GitHub Pages. Wystarczy commit na branchu <code>main</code>, a całość zostanie zbudowana i opublikowana bez Twojej ingerencji.</p>\n<hr>\n<h2 id=\"bonus-pełny-przykład-w-repozytorium\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#bonus-pełny-przykład-w-repozytorium\">>></a>Bonus: Pełny przykład w repozytorium</h2>\n<p>Chcesz zobaczyć kompletną konfigurację w praktyce?<br>\n<a href=\"https://github.com/jakubszpil/jakubszpil.github.io/blob/main/.github/workflows/deploy.yml\">Zajrzyj tutaj</a></p>","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/articles/deployment-github-actions.md","2 minuty",{"_8":56,"_10":57,"_12":58,"_22":60,"_24":62,"_26":63,"_28":64,"_30":65,"_32":66,"_34":-7,"_35":36},"Szczepienie kodu, czyli jak Typescript radzi sobie z Dependency Injection","Dependency Injection (DI) to wzorzec projektowy stosowany w celu zwiększenia modularności i testowalności kodu. Umożliwia to oddzielenie tworzenia obiektów od ich używania, co prowadzi do lepszej separacji odpowiedzialności i łatwiejszego zarządzania zależnościami. W TypeScript, DI można zaimplementować na kilka sposobów, w tym za funkcji wstrzykujących, które są odpowiedzialne za tworzenie i wstrzykiwanie zależności. Przyjrzyjmy się, jak można zaimplementować DI w TypeScript z wykorzystaniem prostych przykładów.",[17,59,16,21],"wzorce projektowe",[17,61],"wzorce-projektowe",["D",1718841600000],"9cfbe26d-ba4c-4e4f-8fa9-bf3193374036","dependency-injection-kontra-typescript","<p>Dependency Injection (DI) to wzorzec projektowy stosowany w celu zwiększenia modularności i testowalności kodu. Pozwala on na oddzielenie tworzenia obiektów od ich używania, co prowadzi do lepszej separacji odpowiedzialności oraz ułatwia zarządzanie zależnościami w projekcie. 🔗</p>\n<p>W TypeScript DI można zaimplementować na różne sposoby, m.in. za pomocą funkcji wstrzykujących, kontenerów IoC oraz dekoratorów. Poniżej znajdziesz szczegółowe omówienie praktycznych sposobów implementacji DI w TypeScript wraz z przykładami i wskazówkami.</p>\n<hr>\n<h2 id=\"spis-treści\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#spis-treści\">>></a>Spis treści</h2>\n<ol>\n<li><a href=\"#czym-jest-dependency-injection\">Czym jest Dependency Injection?</a></li>\n<li><a href=\"#zalety-stosowania-di\">Zalety stosowania DI</a></li>\n<li><a href=\"#podstawowy-przyk%C5%82ad-dependency-injection\">Podstawowy przykład Dependency Injection</a></li>\n<li><a href=\"#wstrzykiwanie-zale%C5%BCno%C5%9Bci-przy-pomocy-funkcji\">Wstrzykiwanie zależności przy pomocy funkcji</a></li>\n<li><a href=\"#kontener-ioc-i-automatyzacja-di\">Kontener IoC i automatyzacja DI</a></li>\n<li><a href=\"#testowanie-z-wykorzystaniem-di\">Testowanie z wykorzystaniem DI</a></li>\n<li><a href=\"#podsumowanie\">Podsumowanie</a></li>\n</ol>\n<hr>\n<h2 id=\"czym-jest-dependency-injection\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#czym-jest-dependency-injection\">>></a>Czym jest Dependency Injection?</h2>\n<p><strong>Dependency Injection</strong> polega na przekazywaniu obiektów zależnych (tzw. zależności) do obiektu zamiast tworzenia ich bezpośrednio w jego wnętrzu. Dzięki temu możemy łatwo podmieniać zależności – np. na ich mocki podczas testowania – bez zmian w logice biznesowej.</p>\n<p>DI zwiększa elastyczność kodu, ułatwia jego testowanie oraz pozwala na lepszą separację odpowiedzialności. Dzięki temu Twój kod staje się bardziej modularny, przejrzysty i łatwy w utrzymaniu. 💡</p>\n<hr>\n<h2 id=\"zalety-stosowania-di\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zalety-stosowania-di\">>></a>Zalety stosowania DI</h2>\n<ul>\n<li><strong>Łatwiejsze testowanie</strong> – zależności można zamieniać na mocki lub stuby w testach jednostkowych.</li>\n<li><strong>Lepsza modularność</strong> – klasy nie są silnie powiązane z konkretnymi implementacjami.</li>\n<li><strong>Łatwiejsze zarządzanie zależnościami</strong> – zmiany w zależnościach nie wymagają modyfikacji całego kodu.</li>\n<li><strong>Wspieranie zasad SOLID</strong> – zwłaszcza zasady odwrócenia zależności (Dependency Inversion Principle).</li>\n<li><strong>Zwiększona elastyczność</strong> – łatwo rozszerzać i modyfikować funkcjonalność bez naruszania istniejących klas.</li>\n</ul>\n<hr>\n<h2 id=\"podstawowy-przykład-dependency-injection\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podstawowy-przykład-dependency-injection\">>></a>Podstawowy przykład Dependency Injection</h2>\n<p>Rozważmy prosty scenariusz, w którym klasa <code>UserService</code> korzysta z <code>UserRepository</code>:</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">UserRepository</span> {\n  <span class=\"hljs-title function_\">getUser</span>(<span class=\"hljs-attr\">userId</span>: <span class=\"hljs-built_in\">number</span>): <span class=\"hljs-built_in\">string</span> {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`User <span class=\"hljs-subst\">${userId}</span>`</span>;\n  }\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">UserService</span> {\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">userRepository</span>: <span class=\"hljs-title class_\">UserRepository</span>;\n\n  <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">userRepository</span>: <span class=\"hljs-title class_\">UserRepository</span></span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">userRepository</span> = userRepository;\n  }\n\n  <span class=\"hljs-title function_\">getUserName</span>(<span class=\"hljs-attr\">userId</span>: <span class=\"hljs-built_in\">number</span>): <span class=\"hljs-built_in\">string</span> {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">userRepository</span>.<span class=\"hljs-title function_\">getUser</span>(userId);\n  }\n}\n\n<span class=\"hljs-keyword\">const</span> userRepository = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">UserRepository</span>();\n<span class=\"hljs-keyword\">const</span> userService = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">UserService</span>(userRepository);\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(userService.<span class=\"hljs-title function_\">getUserName</span>(<span class=\"hljs-number\">1</span>)); <span class=\"hljs-comment\">// User 1</span>\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nW tym przykładzie <code>UserRepository</code> jest wstrzykiwany do <code>UserService</code> poprzez konstruktor. Dzięki temu możemy łatwo podmienić repozytorium np. w testach jednostkowych lub zamienić na inną implementację.</p>\n<hr>\n<h2 id=\"wstrzykiwanie-zależności-przy-pomocy-funkcji\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#wstrzykiwanie-zależności-przy-pomocy-funkcji\">>></a>Wstrzykiwanie zależności przy pomocy funkcji</h2>\n<p>W większych aplikacjach zarządzanie zależnościami ręcznie może być uciążliwe. Możemy zastosować funkcję <code>inject</code>, która będzie przechowywać i dostarczać instancje klas (prosta wersja kontenera IoC):</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">dependencies</span>: <span class=\"hljs-title class_\">Map</span>&#x3C;<span class=\"hljs-built_in\">string</span>, <span class=\"hljs-built_in\">any</span>> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Map</span>();\n\n<span class=\"hljs-keyword\">function</span> inject&#x3C;T>(<span class=\"hljs-attr\">dependency</span>: <span class=\"hljs-title function_\">new</span> () => T): T {\n  <span class=\"hljs-keyword\">if</span> (dependencies.<span class=\"hljs-title function_\">has</span>(dependency.<span class=\"hljs-property\">name</span>)) {\n    <span class=\"hljs-keyword\">return</span> dependencies.<span class=\"hljs-title function_\">get</span>(dependency.<span class=\"hljs-property\">name</span>);\n  }\n  <span class=\"hljs-keyword\">const</span> dep = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title function_\">dependency</span>();\n  dependencies.<span class=\"hljs-title function_\">set</span>(dependency.<span class=\"hljs-property\">name</span>, dep);\n  <span class=\"hljs-keyword\">return</span> dep;\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">UserRepository</span> {\n  <span class=\"hljs-title function_\">getUser</span>(<span class=\"hljs-attr\">userId</span>: <span class=\"hljs-built_in\">number</span>): <span class=\"hljs-built_in\">string</span> {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`User <span class=\"hljs-subst\">${userId}</span>`</span>;\n  }\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">UserService</span> {\n  <span class=\"hljs-keyword\">protected</span> userRepository = <span class=\"hljs-title function_\">inject</span>(<span class=\"hljs-title class_\">UserRepository</span>);\n\n  <span class=\"hljs-title function_\">getUserName</span>(<span class=\"hljs-attr\">userId</span>: <span class=\"hljs-built_in\">number</span>): <span class=\"hljs-built_in\">string</span> {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">userRepository</span>.<span class=\"hljs-title function_\">getUser</span>(userId);\n  }\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ExtendedUserService</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">UserService</span> {}\n\n<span class=\"hljs-keyword\">const</span> extendedUserService = <span class=\"hljs-title function_\">inject</span>(<span class=\"hljs-title class_\">ExtendedUserService</span>);\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(extendedUserService.<span class=\"hljs-title function_\">getUserName</span>(<span class=\"hljs-number\">1</span>)); <span class=\"hljs-comment\">// User 1</span>\n</code></pre>\n<p><strong>Wyjaśnienie:</strong></p>\n<ul>\n<li>Funkcja <code>inject</code> rejestruje i przechowuje instancje klas, zapewniając singleton dla każdej z nich.</li>\n<li>Nie musisz przekazywać zależności przez konstruktor – są pobierane automatycznie.</li>\n<li>Klasy można łatwo rozszerzać, a zależności są zarządzane centralnie – to duże ułatwienie w dużych projektach. 🛠️</li>\n</ul>\n<hr>\n<h2 id=\"kontener-ioc-i-automatyzacja-di\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#kontener-ioc-i-automatyzacja-di\">>></a>Kontener IoC i automatyzacja DI</h2>\n<p>W rozbudowanych projektach warto rozważyć użycie gotowych rozwiązań, np. <a href=\"https://inversify.io/\">InversifyJS</a>, które pozwalają korzystać z dekoratorów i automatycznie rozwiązywać zależności.</p>\n<p>Przykład z użyciem InversifyJS:</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">\"reflect-metadata\"</span>;\n<span class=\"hljs-keyword\">import</span> { injectable, inject, <span class=\"hljs-title class_\">Container</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"inversify\"</span>;\n\n<span class=\"hljs-meta\">@injectable</span>()\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">UserRepository</span> {\n  <span class=\"hljs-title function_\">getUser</span>(<span class=\"hljs-attr\">userId</span>: <span class=\"hljs-built_in\">number</span>): <span class=\"hljs-built_in\">string</span> {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`User <span class=\"hljs-subst\">${userId}</span>`</span>;\n  }\n}\n\n<span class=\"hljs-meta\">@injectable</span>()\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">UserService</span> {\n  <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-meta\">@inject</span>(UserRepository) <span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">userRepository</span>: <span class=\"hljs-title class_\">UserRepository</span></span>) {}\n\n  <span class=\"hljs-title function_\">getUserName</span>(<span class=\"hljs-attr\">userId</span>: <span class=\"hljs-built_in\">number</span>): <span class=\"hljs-built_in\">string</span> {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">userRepository</span>.<span class=\"hljs-title function_\">getUser</span>(userId);\n  }\n}\n\n<span class=\"hljs-keyword\">const</span> container = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Container</span>();\ncontainer.<span class=\"hljs-title function_\">bind</span>(<span class=\"hljs-title class_\">UserRepository</span>).<span class=\"hljs-title function_\">toSelf</span>();\ncontainer.<span class=\"hljs-title function_\">bind</span>(<span class=\"hljs-title class_\">UserService</span>).<span class=\"hljs-title function_\">toSelf</span>();\n\n<span class=\"hljs-keyword\">const</span> userService = container.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-title class_\">UserService</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(userService.<span class=\"hljs-title function_\">getUserName</span>(<span class=\"hljs-number\">1</span>)); <span class=\"hljs-comment\">// User 1</span>\n</code></pre>\n<p><strong>Zalety takiego podejścia:</strong></p>\n<ul>\n<li>Automatyczna rejestracja i rozwiązywanie zależności.</li>\n<li>Wsparcie dla różnych zakresów życia obiektu (singleton, transient).</li>\n<li>Możliwość wstrzykiwania zależności przez dekoratory.</li>\n<li>Łatwiejsze zarządzanie rozbudowaną strukturą aplikacji.</li>\n</ul>\n<hr>\n<h2 id=\"testowanie-z-wykorzystaniem-di\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#testowanie-z-wykorzystaniem-di\">>></a>Testowanie z wykorzystaniem DI</h2>\n<p>Dzięki zastosowaniu DI możemy łatwo podmieniać implementacje zależności, np. na mocki lub stuby podczas testów jednostkowych:</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">MockUserRepository</span> {\n  <span class=\"hljs-title function_\">getUser</span>(<span class=\"hljs-attr\">userId</span>: <span class=\"hljs-built_in\">number</span>): <span class=\"hljs-built_in\">string</span> {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"Mock User\"</span>;\n  }\n}\n\n<span class=\"hljs-keyword\">const</span> mockRepo = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">MockUserRepository</span>();\n<span class=\"hljs-keyword\">const</span> userService = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">UserService</span>(mockRepo);\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(userService.<span class=\"hljs-title function_\">getUserName</span>(<span class=\"hljs-number\">1</span>)); <span class=\"hljs-comment\">// Mock User</span>\n</code></pre>\n<p><strong>Korzyści:</strong></p>\n<ul>\n<li>Testy są niezależne od rzeczywistej implementacji zależności.</li>\n<li>Można łatwo symulować różne scenariusze i przypadki brzegowe.</li>\n<li>Utrzymanie i rozwijanie testów staje się prostsze.</li>\n</ul>\n<hr>\n<h2 id=\"podsumowanie\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podsumowanie\">>></a>Podsumowanie</h2>\n<p>Dependency Injection w TypeScript to potężny sposób na zwiększenie elastyczności, testowalności i modularności kodu. Najprostsze podejście to ręczne wstrzykiwanie zależności przez konstruktor, jednak w miarę wzrostu projektu warto pomyśleć o własnym kontenerze IoC lub sięgnąć po gotowe biblioteki jak InversifyJS. DI pozwala na lepszą separację odpowiedzialności i sprawia, że kod jest łatwiejszy w utrzymaniu i testowaniu.</p>\n<hr>\n<p><strong>Dalsza lektura:</strong> 📚</p>\n<ul>\n<li><a href=\"https://github.com/inversify/InversifyJS\">InversifyJS Documentation</a></li>\n<li><a href=\"https://angular.dev/guide/di\">Dependency Injection w TypeScript – Angular</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/SOLID\">SOLID Principles</a></li>\n</ul>","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/articles/dependency-injection-kontra-typescript.md",{"_8":68,"_10":69,"_12":70,"_22":72,"_24":73,"_26":74,"_28":75,"_30":76,"_32":77,"_34":-7,"_35":36},"Obserwatorium, czyli wzorzec projektowy obserwatora","Wzorzec projektowy Obserwator (ang. Observer) jest jednym z najważniejszych wzorców projektowych, szczególnie użytecznym w kontekście programowania reaktywnego i aplikacji, które muszą reagować na zmiany stanu. W TypeScript możemy zaimplementować ten wzorzec w sposób typowany, co dodatkowo zwiększa bezpieczeństwo i czytelność kodu.",[17,59,71,21],"programowanie",[17,61],["D",1718841600000],"3f653343-4d59-4ea7-a707-fa52936521c8","obserwatorium-czyli-wzorzec-projektowy-obserwatora","<p>Wzorzec projektowy Obserwator (ang. Observer) to jeden z kluczowych wzorców, szczególnie przydatny w programowaniu reaktywnym oraz w aplikacjach wymagających reagowania na zmiany stanu. TypeScript pozwala na typowaną implementację tego wzorca, co zwiększa bezpieczeństwo i czytelność kodu.</p>\n<hr>\n<h2 id=\"spis-treści\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#spis-treści\">>></a>Spis treści</h2>\n<ol>\n<li><a href=\"#czym-jest-wzorzec-obserwatora\">Czym jest Wzorzec Obserwatora?</a></li>\n<li><a href=\"#korzy%C5%9Bci-z-u%C5%BCywania-wzorca-obserwatora\">Korzyści z używania Wzorca Obserwatora</a></li>\n<li><a href=\"#prosta-implementacja-wzorca-obserwatora\">Prosta implementacja wzorca Obserwatora</a></li>\n<li><a href=\"#rozbudowana-implementacja-generics\">Rozbudowana implementacja generics</a></li>\n<li><a href=\"#przyk%C5%82ad-praktyczny--monitorowanie-temperatury\">Przykład praktyczny — monitorowanie temperatury</a></li>\n<li><a href=\"#podsumowanie\">Podsumowanie</a></li>\n</ol>\n<hr>\n<h2 id=\"czym-jest-wzorzec-obserwatora\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#czym-jest-wzorzec-obserwatora\">>></a>Czym jest Wzorzec Obserwatora?</h2>\n<p>Wzorzec Obserwatora polega na tym, że obiekt zwany obserwowanym (Subject) zarządza listą swoich obserwatorów (Observers) i automatycznie powiadamia ich o zmianach swojego stanu. Mechanizm ten realizowany jest dzięki metodom do subskrybowania, odsubskrybowania i powiadamiania.</p>\n<hr>\n<h2 id=\"korzyści-z-używania-wzorca-obserwatora\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#korzyści-z-używania-wzorca-obserwatora\">>></a>Korzyści z używania Wzorca Obserwatora</h2>\n<ul>\n<li><strong>Reaktywność</strong> – automatyczne powiadamianie obserwatorów o zmianach.</li>\n<li><strong>Luźne powiązania</strong> – obserwatorzy nie muszą znać szczegółów implementacji obiektu obserwowanego.</li>\n<li><strong>Elastyczność</strong> – łatwość dodawania nowych obserwatorów bez modyfikacji istniejącego kodu.</li>\n</ul>\n<hr>\n<h2 id=\"prosta-implementacja-wzorca-obserwatora\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#prosta-implementacja-wzorca-obserwatora\">>></a>Prosta implementacja wzorca Obserwatora</h2>\n<p>Poniżej znajdziesz bazową implementację wzorca Obserwatora w TypeScript:</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-comment\">// Interfejs obserwatora</span>\n<span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">Observer</span> {\n  <span class=\"hljs-title function_\">update</span>(<span class=\"hljs-attr\">message</span>: <span class=\"hljs-built_in\">string</span>): <span class=\"hljs-built_in\">void</span>;\n}\n\n<span class=\"hljs-comment\">// Klasa obserwowana</span>\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Subject</span> {\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">observers</span>: <span class=\"hljs-title class_\">Observer</span>[] = [];\n\n  <span class=\"hljs-title function_\">subscribe</span>(<span class=\"hljs-attr\">observer</span>: <span class=\"hljs-title class_\">Observer</span>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">observers</span>.<span class=\"hljs-title function_\">push</span>(observer);\n  }\n\n  <span class=\"hljs-title function_\">unsubscribe</span>(<span class=\"hljs-attr\">observer</span>: <span class=\"hljs-title class_\">Observer</span>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">observers</span> = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">observers</span>.<span class=\"hljs-title function_\">filter</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">obs</span>) =></span> obs !== observer);\n  }\n\n  <span class=\"hljs-title function_\">notify</span>(<span class=\"hljs-attr\">message</span>: <span class=\"hljs-built_in\">string</span>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">observers</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">observer</span>) =></span> observer.<span class=\"hljs-title function_\">update</span>(message));\n  }\n}\n\n<span class=\"hljs-comment\">// Implementacja obserwatora</span>\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ConcreteObserver</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">Observer</span> {\n  <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span></span>) {}\n\n  <span class=\"hljs-title function_\">update</span>(<span class=\"hljs-attr\">message</span>: <span class=\"hljs-built_in\">string</span>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`<span class=\"hljs-subst\">${<span class=\"hljs-variable language_\">this</span>.name}</span> received message: <span class=\"hljs-subst\">${message}</span>`</span>);\n  }\n}\n\n<span class=\"hljs-comment\">// Użycie wzorca Obserwatora</span>\n<span class=\"hljs-keyword\">const</span> subject = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Subject</span>();\n\n<span class=\"hljs-keyword\">const</span> observer1 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ConcreteObserver</span>(<span class=\"hljs-string\">\"Observer 1\"</span>);\n<span class=\"hljs-keyword\">const</span> observer2 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ConcreteObserver</span>(<span class=\"hljs-string\">\"Observer 2\"</span>);\n\nsubject.<span class=\"hljs-title function_\">subscribe</span>(observer1);\nsubject.<span class=\"hljs-title function_\">subscribe</span>(observer2);\n\nsubject.<span class=\"hljs-title function_\">notify</span>(<span class=\"hljs-string\">\"Hello, Observers!\"</span>);\n\n<span class=\"hljs-comment\">// Output:</span>\n<span class=\"hljs-comment\">// Observer 1 received message: Hello, Observers!</span>\n<span class=\"hljs-comment\">// Observer 2 received message: Hello, Observers!</span>\n</code></pre>\n<p><strong>Opis:</strong><br>\n<code>Subject</code> zarządza listą obserwatorów i powiadamia ich o zmianach. Każdy obserwator implementuje interfejs <code>Observer</code> z metodą <code>update</code>.</p>\n<hr>\n<h2 id=\"rozbudowana-implementacja-generics\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#rozbudowana-implementacja-generics\">>></a>Rozbudowana implementacja generics</h2>\n<p>W bardziej zaawansowanych przypadkach warto użyć typów generycznych, co pozwala przekazywać różne typy danych:</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-comment\">// Interfejs obserwatora z typem generycznym</span>\n<span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">Observer</span>&#x3C;T> {\n  <span class=\"hljs-title function_\">update</span>(<span class=\"hljs-attr\">data</span>: T): <span class=\"hljs-built_in\">void</span>;\n}\n\n<span class=\"hljs-comment\">// Klasa obserwowana z typem generycznym</span>\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Subject</span>&#x3C;T> {\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">observers</span>: <span class=\"hljs-title class_\">Observer</span>&#x3C;T>[] = [];\n\n  <span class=\"hljs-title function_\">subscribe</span>(<span class=\"hljs-attr\">observer</span>: <span class=\"hljs-title class_\">Observer</span>&#x3C;T>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">observers</span>.<span class=\"hljs-title function_\">push</span>(observer);\n  }\n\n  <span class=\"hljs-title function_\">unsubscribe</span>(<span class=\"hljs-attr\">observer</span>: <span class=\"hljs-title class_\">Observer</span>&#x3C;T>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">observers</span> = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">observers</span>.<span class=\"hljs-title function_\">filter</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">obs</span>) =></span> obs !== observer);\n  }\n\n  <span class=\"hljs-title function_\">notify</span>(<span class=\"hljs-attr\">data</span>: T): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">observers</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">observer</span>) =></span> observer.<span class=\"hljs-title function_\">update</span>(data));\n  }\n}\n\n<span class=\"hljs-comment\">// Implementacja obserwatora</span>\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ConcreteObserver</span>&#x3C;T> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">Observer</span>&#x3C;T> {\n  <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span></span>) {}\n\n  <span class=\"hljs-title function_\">update</span>(<span class=\"hljs-attr\">data</span>: T): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`<span class=\"hljs-subst\">${<span class=\"hljs-variable language_\">this</span>.name}</span> received data:`</span>, data);\n  }\n}\n\n<span class=\"hljs-comment\">// Użycie z typem generycznym</span>\n<span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">User</span> {\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span>;\n  <span class=\"hljs-attr\">age</span>: <span class=\"hljs-built_in\">number</span>;\n}\n\n<span class=\"hljs-keyword\">const</span> userSubject = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Subject</span>&#x3C;<span class=\"hljs-title class_\">User</span>>();\n\n<span class=\"hljs-keyword\">const</span> userObserver1 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ConcreteObserver</span>&#x3C;<span class=\"hljs-title class_\">User</span>>(<span class=\"hljs-string\">\"User Observer 1\"</span>);\n<span class=\"hljs-keyword\">const</span> userObserver2 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ConcreteObserver</span>&#x3C;<span class=\"hljs-title class_\">User</span>>(<span class=\"hljs-string\">\"User Observer 2\"</span>);\n\nuserSubject.<span class=\"hljs-title function_\">subscribe</span>(userObserver1);\nuserSubject.<span class=\"hljs-title function_\">subscribe</span>(userObserver2);\n\nuserSubject.<span class=\"hljs-title function_\">notify</span>({ <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Alice\"</span>, <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">30</span> });\n\n<span class=\"hljs-comment\">// Output:</span>\n<span class=\"hljs-comment\">// User Observer 1 received data: { name: 'Alice', age: 30 }</span>\n<span class=\"hljs-comment\">// User Observer 2 received data: { name: 'Alice', age: 30 }</span>\n</code></pre>\n<p><strong>Opis:</strong><br>\nDzięki zastosowaniu typów generycznych, wzorzec staje się bardziej elastyczny i bezpieczny typowo. Możesz przekazywać dowolne typy danych bez utraty ich struktury.</p>\n<hr>\n<h2 id=\"przykład-praktyczny--monitorowanie-temperatury\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#przykład-praktyczny--monitorowanie-temperatury\">>></a>Przykład praktyczny – monitorowanie temperatury</h2>\n<p>Aby zobaczyć praktyczne zastosowanie, oto przykład aplikacji monitorującej zmiany temperatury:</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-comment\">// Interfejs obserwatora</span>\n<span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">Observer</span>&#x3C;T> {\n  <span class=\"hljs-title function_\">update</span>(<span class=\"hljs-attr\">data</span>: T): <span class=\"hljs-built_in\">void</span>;\n}\n\n<span class=\"hljs-comment\">// Klasa obserwowana</span>\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TemperatureSensor</span> {\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">observers</span>: <span class=\"hljs-title class_\">Observer</span>&#x3C;<span class=\"hljs-built_in\">number</span>>[] = [];\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">temperature</span>: <span class=\"hljs-built_in\">number</span> = <span class=\"hljs-number\">0</span>;\n\n  <span class=\"hljs-title function_\">subscribe</span>(<span class=\"hljs-attr\">observer</span>: <span class=\"hljs-title class_\">Observer</span>&#x3C;<span class=\"hljs-built_in\">number</span>>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">observers</span>.<span class=\"hljs-title function_\">push</span>(observer);\n  }\n\n  <span class=\"hljs-title function_\">unsubscribe</span>(<span class=\"hljs-attr\">observer</span>: <span class=\"hljs-title class_\">Observer</span>&#x3C;<span class=\"hljs-built_in\">number</span>>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">observers</span> = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">observers</span>.<span class=\"hljs-title function_\">filter</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">obs</span>) =></span> obs !== observer);\n  }\n\n  <span class=\"hljs-title function_\">setTemperature</span>(<span class=\"hljs-attr\">temp</span>: <span class=\"hljs-built_in\">number</span>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`Setting temperature to <span class=\"hljs-subst\">${temp}</span>`</span>);\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">temperature</span> = temp;\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">notify</span>(temp);\n  }\n\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-title function_\">notify</span>(<span class=\"hljs-attr\">temp</span>: <span class=\"hljs-built_in\">number</span>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">observers</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">observer</span>) =></span> observer.<span class=\"hljs-title function_\">update</span>(temp));\n  }\n}\n\n<span class=\"hljs-comment\">// Implementacje obserwatorów</span>\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TemperatureDisplay</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">Observer</span>&#x3C;<span class=\"hljs-built_in\">number</span>> {\n  <span class=\"hljs-title function_\">update</span>(<span class=\"hljs-attr\">temp</span>: <span class=\"hljs-built_in\">number</span>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`Temperature Display: <span class=\"hljs-subst\">${temp}</span>°C`</span>);\n  }\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TemperatureLogger</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">Observer</span>&#x3C;<span class=\"hljs-built_in\">number</span>> {\n  <span class=\"hljs-title function_\">update</span>(<span class=\"hljs-attr\">temp</span>: <span class=\"hljs-built_in\">number</span>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`Logging temperature: <span class=\"hljs-subst\">${temp}</span>°C`</span>);\n  }\n}\n\n<span class=\"hljs-comment\">// Użycie wzorca Obserwatora</span>\n<span class=\"hljs-keyword\">const</span> sensor = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TemperatureSensor</span>();\n<span class=\"hljs-keyword\">const</span> display = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TemperatureDisplay</span>();\n<span class=\"hljs-keyword\">const</span> logger = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TemperatureLogger</span>();\n\nsensor.<span class=\"hljs-title function_\">subscribe</span>(display);\nsensor.<span class=\"hljs-title function_\">subscribe</span>(logger);\n\nsensor.<span class=\"hljs-title function_\">setTemperature</span>(<span class=\"hljs-number\">25</span>); <span class=\"hljs-comment\">// Output: Setting temperature to 25</span>\n<span class=\"hljs-comment\">//         Temperature Display: 25°C</span>\n<span class=\"hljs-comment\">//         Logging temperature: 25°C</span>\n\nsensor.<span class=\"hljs-title function_\">setTemperature</span>(<span class=\"hljs-number\">30</span>); <span class=\"hljs-comment\">// Output: Setting temperature to 30</span>\n<span class=\"hljs-comment\">//         Temperature Display: 30°C</span>\n<span class=\"hljs-comment\">//         Logging temperature: 30°C</span>\n</code></pre>\n<p><strong>Opis:</strong><br>\n<code>TemperatureSensor</code> pełni rolę obserwowanego, powiadamiając obserwatorów (<code>TemperatureDisplay</code>, <code>TemperatureLogger</code>) o zmianach temperatury. Wzorzec ten świetnie nadaje się do aplikacji monitorujących różne parametry w czasie rzeczywistym.</p>\n<hr>\n<h2 id=\"podsumowanie\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podsumowanie\">>></a>Podsumowanie</h2>\n<p>Wzorzec Obserwatora to potężne narzędzie, które pozwala reagować na zmiany stanu w sposób luźno powiązany i elastyczny. W TypeScript dzięki silnemu typowaniu implementacja staje się jeszcze bezpieczniejsza i bardziej czytelna. Pokazane powyżej przykłady prezentują zarówno podstawową, jak i zaawansowaną wersję, która wykorzystuje typy generyczne. Zachęcam do eksperymentowania z tym wzorcem w swoich projektach – pozwala on na znacząco lepsze zarządzanie zależnościami i reaktywnością aplikacji.</p>","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/articles/obserwatorium-czyli-wzorzec-projektowy-obserwatora.md",{"_8":79,"_10":80,"_12":81,"_22":83,"_24":84,"_26":85,"_28":86,"_30":87,"_32":88,"_34":-7,"_35":54},"Signalizacja, czyli koncept Signals w Typescript","Signal to koncepcja pochodząca z programowania reaktywnego, której celem jest uproszczenie komunikacji między komponentami oraz zarządzania stanem aplikacji. W TypeScript, dzięki silnemu typowaniu, można zaimplementować sygnały w sposób bezpieczny i efektywny.",[17,59,82,21],"signals",[17,61],["D",1718841600000],"1ed56054-1ef9-4752-a1d9-1e407e743773","signalizacja-czyli-koncept-signals-w-typescript","<p>Signal to koncepcja znana z programowania reaktywnego, której celem jest uproszczenie komunikacji między komponentami oraz zarządzanie stanem aplikacji. Dzięki silnemu typowaniu TypeScript, sygnały można zaimplementować w sposób bezpieczny, czytelny i efektywny.</p>\n<hr>\n<h2 id=\"spis-treści\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#spis-treści\">>></a>Spis treści</h2>\n<ol>\n<li><a href=\"#czym-jest-signal\">Czym jest Signal?</a></li>\n<li><a href=\"#korzy%C5%9Bci-z-u%C5%BCywania-signal\">Korzyści z używania Signal</a></li>\n<li><a href=\"#prosta-implementacja-signal-w-typescript\">Prosta implementacja Signal w TypeScript</a></li>\n<li><a href=\"#zaawansowana-implementacja-signal-z-typowaniem\">Zaawansowana implementacja Signal z typowaniem</a></li>\n<li><a href=\"#praktyczne-zastosowania-sygna%C5%82%C3%B3w\">Praktyczne zastosowania sygnałów</a></li>\n<li><a href=\"#podsumowanie\">Podsumowanie</a></li>\n</ol>\n<hr>\n<h2 id=\"czym-jest-signal\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#czym-jest-signal\">>></a>Czym jest Signal?</h2>\n<p><strong>Signal</strong> (sygnał) to obiekt reprezentujący strumień danych, który może być obserwowany i reagować na ich zmiany. Sygnały świetnie sprawdzają się w aplikacjach frontendowych, gdzie mogą służyć do reagowania na:</p>\n<ul>\n<li>zdarzenia użytkownika,</li>\n<li>zmiany stanu aplikacji,</li>\n<li>asynchroniczne operacje (np. żądania sieciowe).</li>\n</ul>\n<hr>\n<h2 id=\"korzyści-z-używania-signal\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#korzyści-z-używania-signal\">>></a>Korzyści z używania Signal</h2>\n<ul>\n<li><strong>Reaktywność:</strong> Automatyczne reagowanie na zmiany danych w aplikacji.</li>\n<li><strong>Czytelność:</strong> Eliminacja złożonych zależności i ręcznego zarządzania stanem.</li>\n<li><strong>Modularność:</strong> Oddzielenie logiki zarządzania stanem od komponentów, co ułatwia rozwój i utrzymanie kodu.</li>\n</ul>\n<hr>\n<h2 id=\"prosta-implementacja-signal-w-typescript\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#prosta-implementacja-signal-w-typescript\">>></a>Prosta implementacja Signal w TypeScript</h2>\n<p>Poniższy przykład przedstawia bazową implementację sygnału:</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">Listener</span>&#x3C;T> = <span class=\"hljs-function\">(<span class=\"hljs-params\"><span class=\"hljs-attr\">value</span>: T</span>) =></span> <span class=\"hljs-built_in\">void</span>;\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Signal</span>&#x3C;T> {\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">listeners</span>: <span class=\"hljs-title class_\">Listener</span>&#x3C;T>[] = [];\n\n  <span class=\"hljs-title function_\">subscribe</span>(<span class=\"hljs-attr\">listener</span>: <span class=\"hljs-title class_\">Listener</span>&#x3C;T>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">listeners</span>.<span class=\"hljs-title function_\">push</span>(listener);\n  }\n\n  <span class=\"hljs-title function_\">unsubscribe</span>(<span class=\"hljs-attr\">listener</span>: <span class=\"hljs-title class_\">Listener</span>&#x3C;T>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">listeners</span> = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">listeners</span>.<span class=\"hljs-title function_\">filter</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">l</span>) =></span> l !== listener);\n  }\n\n  <span class=\"hljs-title function_\">emit</span>(<span class=\"hljs-attr\">value</span>: T): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">listeners</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">listener</span>) =></span> <span class=\"hljs-title function_\">listener</span>(value));\n  }\n}\n\n<span class=\"hljs-comment\">// Użycie sygnału</span>\n<span class=\"hljs-keyword\">const</span> numberSignal = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Signal</span>&#x3C;<span class=\"hljs-built_in\">number</span>>();\n\nnumberSignal.<span class=\"hljs-title function_\">subscribe</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">value</span>) =></span> {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`Received value: <span class=\"hljs-subst\">${value}</span>`</span>);\n});\n\nnumberSignal.<span class=\"hljs-title function_\">emit</span>(<span class=\"hljs-number\">42</span>); <span class=\"hljs-comment\">// Output: Received value: 42</span>\n</code></pre>\n<p><strong>Opis:</strong><br>\nKlasa <code>Signal</code> pozwala na subskrybowanie funkcji-odbiorców, ich usuwanie oraz emitowanie wartości do wszystkich subskrybentów.</p>\n<hr>\n<h2 id=\"zaawansowana-implementacja-signal-z-typowaniem\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zaawansowana-implementacja-signal-z-typowaniem\">>></a>Zaawansowana implementacja Signal z typowaniem</h2>\n<p>W większych aplikacjach warto zastosować typy generyczne i kolekcje, które zapobiegają wielokrotnemu dodawaniu tego samego subskrybenta:</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">Listener</span>&#x3C;T> = <span class=\"hljs-function\">(<span class=\"hljs-params\"><span class=\"hljs-attr\">value</span>: T</span>) =></span> <span class=\"hljs-built_in\">void</span>;\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Signal</span>&#x3C;T> {\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">listeners</span>: <span class=\"hljs-title class_\">Set</span>&#x3C;<span class=\"hljs-title class_\">Listener</span>&#x3C;T>> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Set</span>();\n\n  <span class=\"hljs-title function_\">subscribe</span>(<span class=\"hljs-attr\">listener</span>: <span class=\"hljs-title class_\">Listener</span>&#x3C;T>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">listeners</span>.<span class=\"hljs-title function_\">add</span>(listener);\n  }\n\n  <span class=\"hljs-title function_\">unsubscribe</span>(<span class=\"hljs-attr\">listener</span>: <span class=\"hljs-title class_\">Listener</span>&#x3C;T>): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">listeners</span>.<span class=\"hljs-title function_\">delete</span>(listener);\n  }\n\n  <span class=\"hljs-title function_\">emit</span>(<span class=\"hljs-attr\">value</span>: T): <span class=\"hljs-built_in\">void</span> {\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">const</span> listener <span class=\"hljs-keyword\">of</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">listeners</span>) {\n      <span class=\"hljs-title function_\">listener</span>(value);\n    }\n  }\n}\n\n<span class=\"hljs-comment\">// Użycie sygnału z typem generycznym</span>\n<span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">User</span> {\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span>;\n  <span class=\"hljs-attr\">age</span>: <span class=\"hljs-built_in\">number</span>;\n}\n\n<span class=\"hljs-keyword\">const</span> userSignal = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Signal</span>&#x3C;<span class=\"hljs-title class_\">User</span>>();\n\nuserSignal.<span class=\"hljs-title function_\">subscribe</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">user</span>) =></span> {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`User: <span class=\"hljs-subst\">${user.name}</span>, Age: <span class=\"hljs-subst\">${user.age}</span>`</span>);\n});\n\nuserSignal.<span class=\"hljs-title function_\">emit</span>({ <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"John Doe\"</span>, <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">30</span> }); <span class=\"hljs-comment\">// Output: User: John Doe, Age: 30</span>\n</code></pre>\n<p><strong>Opis:</strong><br>\nDzięki użyciu <code>Set</code>, każdy subskrybent pojawia się tylko raz. Typy generyczne umożliwiają tworzenie sygnałów dla różnych typów danych.</p>\n<hr>\n<h2 id=\"praktyczne-zastosowania-sygnałów\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#praktyczne-zastosowania-sygnałów\">>></a>Praktyczne zastosowania sygnałów</h2>\n<p>Sygnały są szeroko stosowane m.in. w:</p>\n<ul>\n<li>zarządzaniu stanem komponentów w frameworkach frontendowych (np. Angular Signals, SolidJS Signals),</li>\n<li>reagowaniu na zmiany danych w czasie rzeczywistym (np. WebSocket, API),</li>\n<li>obsłudze zdarzeń pomiędzy niezależnymi modułami (np. event bus).</li>\n</ul>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-comment\">// Sygnał do powiadamiania o zmianie zalogowanego użytkownika</span>\n<span class=\"hljs-keyword\">const</span> authSignal = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Signal</span>&#x3C;<span class=\"hljs-title class_\">User</span> | <span class=\"hljs-literal\">null</span>>();\n\nauthSignal.<span class=\"hljs-title function_\">subscribe</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">user</span>) =></span> {\n  <span class=\"hljs-keyword\">if</span> (user) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">\"Zalogowano użytkownika:\"</span>, user.<span class=\"hljs-property\">name</span>);\n  } <span class=\"hljs-keyword\">else</span> {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">\"Wylogowano użytkownika\"</span>);\n  }\n});\n\n<span class=\"hljs-comment\">// Logowanie użytkownika</span>\nauthSignal.<span class=\"hljs-title function_\">emit</span>({ <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Anna\"</span>, <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">25</span> });\n<span class=\"hljs-comment\">// Wylogowanie użytkownika</span>\nauthSignal.<span class=\"hljs-title function_\">emit</span>(<span class=\"hljs-literal\">null</span>);\n</code></pre>\n<hr>\n<h2 id=\"podsumowanie\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podsumowanie\">>></a>Podsumowanie</h2>\n<p>Signal w TypeScript to skuteczny sposób na budowę reaktywnych aplikacji i automatyczne reagowanie na zmiany stanu. Silne typowanie pozwala uniknąć wielu błędów i sprawia, że kod jest zrozumiały oraz łatwy w utrzymaniu. Implementując sygnały, możesz znacząco uprościć zarządzanie stanem i poprawić architekturę swoich aplikacji.</p>","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/articles/signalizacja-czyli-koncept-signals-w-typescript.md","courses",[91,165,225,284,347,405,501,621,676,733,781,844,900,953,1011,1064,1119,1171],{"_8":92,"_10":93,"_12":94,"_22":105,"_24":107,"_34":108,"_26":160,"_28":161,"_30":162,"_32":163,"_35":164},"Bezpieczeństwo baz danych","Dowiedz się, jak chronić bazę danych przed atakami, utratą danych i nieautoryzowanym dostępem. Poznaj najlepsze praktyki, typowe zagrożenia, narzędzia i praktyczne przykłady zabezpieczania baz danych. Kurs dla każdego, kto zarządza danymi.",[95,96,97,98,99,100,101,102,103,104],"bezpieczeństwo","baza danych","ochrona","uprawnienia","backup","sql injection","szyfrowanie","audyt","praktyka","learning",[106],"bazy-danych",["D",1751673600000],{"_8":109,"_110":111},"Quiz: Bezpieczeństwo baz danych","questions",[112,125,134,143,152],{"_113":114,"_115":116,"_121":122,"_123":124},"question","<p>Czym jest SQL Injection?</p>","options",[117,118,119,120],"Rodzajem ataku polegającym na wstrzykiwaniu złośliwych zapytań SQL","Legalnym sposobem na szybkie pobieranie danych","Funkcją przyspieszającą zapytania","Metodą szyfrowania bazy danych","answer",0,"explanation","SQL Injection to atak polegający na wstrzyknięciu złośliwego kodu SQL przez podatne zapytania.",{"_113":126,"_115":127,"_121":132,"_123":133},"<p>Dlaczego warto regularnie wykonywać kopie zapasowe bazy danych?</p>",[128,129,130,131],"Aby zwiększyć liczbę użytkowników","Aby mieć więcej kopii danych do analizy","Aby móc przywrócić dane w razie awarii, ataku lub błędu","Aby przyspieszyć działanie bazy",2,"Kopie zapasowe pozwalają odtworzyć dane po awarii lub ataku.",{"_113":135,"_115":136,"_121":141,"_123":142},"<p>Jakie uprawnienia powinien mieć użytkownik aplikacyjny w bazie?</p>",[137,138,139,140],"Brak uprawnień","Dostęp tylko do backupów","Pełny dostęp do bazy","Tylko te, które są niezbędne do działania aplikacji",3,"Zasada minimalnych uprawnień zwiększa bezpieczeństwo bazy danych.",{"_113":144,"_115":145,"_121":150,"_123":151},"<p>Co to jest szyfrowanie danych w bazie?</p>",[146,147,148,149],"Zmiana tabel na indeksy","Zabezpieczenie danych przed nieautoryzowanym odczytem","Metoda importu danych","Usuwanie danych",1,"Szyfrowanie pozwala chronić dane przed odczytem przez osoby niepowołane.",{"_113":153,"_115":154,"_121":141,"_123":159},"<p>Czym jest audyt w bazie danych?</p>",[155,156,157,158],"Sposób na optymalizację zapytań","Kopia zapasowa","Rodzaj indeksu","Proces monitorowania i rejestrowania operacji na bazie","Audyt to rejestrowanie dostępu i operacji na danych – kluczowy element bezpieczeństwa.","1269bec9-8201-423d-bda0-6a93e76f25de","bezpieczenstwo-baz-danych","<p>Bezpieczeństwo bazy danych to podstawa ochrony danych osobowych, firmowych i finansowych. Nawet najlepsza baza jest podatna na ataki, błędy użytkowników czy awarie sprzętu, jeśli nie zadbamy o jej zabezpieczenie. Poznaj praktyczne zasady, narzędzia i realne przykłady, które pomogą Ci zabezpieczyć Twoją bazę!</p>\n<h2 id=\"spis-treści\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#spis-treści\">>></a>Spis treści</h2>\n<ol>\n<li><a href=\"#dlaczego-bezpiecze%C5%84stwo-baz-danych-jest-wa%C5%BCne\">Dlaczego bezpieczeństwo baz danych jest ważne?</a></li>\n<li><a href=\"#typowe-zagro%C5%BCenia\">Typowe zagrożenia</a>\n<ul>\n<li><a href=\"#sql-injection\">SQL Injection</a></li>\n<li><a href=\"#utrata-danych\">Utrata danych</a></li>\n<li><a href=\"#nieautoryzowany-dost%C4%99p\">Nieautoryzowany dostęp</a></li>\n<li><a href=\"#wycieki-i-kradzie%C5%BC-danych\">Wycieki i kradzież danych</a></li>\n<li><a href=\"#ataki-typu-ransomware-i-ddos\">Ataki typu ransomware i DDoS</a></li>\n</ul>\n</li>\n<li><a href=\"#uprawnienia-i-zarz%C4%85dzanie-u%C5%BCytkownikami\">Uprawnienia i zarządzanie użytkownikami</a>\n<ul>\n<li><a href=\"#przyk%C5%82ady-nadawania-uprawnie%C5%84\">Przykłady nadawania uprawnień</a></li>\n<li><a href=\"#zasada-minimalnych-uprawnie%C5%84\">Zasada minimalnych uprawnień</a></li>\n</ul>\n</li>\n<li><a href=\"#szyfrowanie-danych\">Szyfrowanie danych</a>\n<ul>\n<li><a href=\"#szyfrowanie-w-spoczynku\">Szyfrowanie \"w spoczynku\"</a></li>\n<li><a href=\"#szyfrowanie-w-tranzycie\">Szyfrowanie \"w tranzycie\"</a></li>\n<li><a href=\"#szyfrowanie-wybranych-p%C3%B3l-danych-wra%C5%BCliwych\">Szyfrowanie wybranych pól (danych wrażliwych)</a></li>\n</ul>\n</li>\n<li><a href=\"#kopie-zapasowe-backup-i-odtwarzanie-danych\">Kopie zapasowe (backup) i odtwarzanie danych</a>\n<ul>\n<li><a href=\"#rodzaje-backup%C3%B3w\">Rodzaje backupów</a></li>\n<li><a href=\"#bezpieczne-przechowywanie-backup%C3%B3w\">Bezpieczne przechowywanie backupów</a></li>\n</ul>\n</li>\n<li><a href=\"#audyt-i-monitorowanie\">Audyt i monitorowanie</a>\n<ul>\n<li><a href=\"#rejestrowanie-operacji-logi\">Rejestrowanie operacji (logi)</a></li>\n<li><a href=\"#przyk%C5%82ady-alert%C3%B3w-i-monitoringu\">Przykłady alertów i monitoringu</a></li>\n</ul>\n</li>\n<li><a href=\"#bezpieczne-praktyki-programistyczne\">Bezpieczne praktyki programistyczne</a>\n<ul>\n<li><a href=\"#przyk%C5%82ady-kodu-bezpiecznego-i-podatnego\">Przykłady kodu bezpiecznego i podatnego</a></li>\n<li><a href=\"#walidacja-i-sanityzacja-danych\">Walidacja i sanityzacja danych</a></li>\n</ul>\n</li>\n<li><a href=\"#aktualizacje-i-zarz%C4%85dzanie-podatno%C5%9Bciami\">Aktualizacje i zarządzanie podatnościami</a>\n<ul>\n<li><a href=\"#cve-i-%C5%9Bledzenie-luk-bezpiecze%C5%84stwa\">CVE i śledzenie luk bezpieczeństwa</a></li>\n</ul>\n</li>\n<li><a href=\"#bezpiecze%C5%84stwo-fizyczne-i-sieciowe\">Bezpieczeństwo fizyczne i sieciowe</a></li>\n<li><a href=\"#praktyczne-zadania\">Praktyczne zadania</a></li>\n<li><a href=\"#podsumowanie\">Podsumowanie</a></li>\n</ol>\n<hr>\n<h2 id=\"dlaczego-bezpieczeństwo-baz-danych-jest-ważne\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#dlaczego-bezpieczeństwo-baz-danych-jest-ważne\">>></a>Dlaczego bezpieczeństwo baz danych jest ważne?</h2>\n<ul>\n<li>Przechowujesz wrażliwe dane (osobowe, finansowe, firmowe, medyczne).</li>\n<li>Utrata lub wyciek danych = straty finansowe, wizerunkowe, prawne (RODO/GDPR, kary).</li>\n<li>Ataki na bazy danych są jednym z najczęstszych celów cyberprzestępców.</li>\n<li>Odpowiednia ochrona pozwala zminimalizować skutki błędów i awarii.</li>\n</ul>\n<hr>\n<h2 id=\"typowe-zagrożenia\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#typowe-zagrożenia\">>></a>Typowe zagrożenia</h2>\n<h3 id=\"sql-injection\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#sql-injection\">>>></a>SQL Injection</h3>\n<p><strong>Opis:</strong><br>\nNajpopularniejszy atak na aplikacje korzystające z baz – polega na przesłaniu złośliwego fragmentu SQL np. przez formularz. Może prowadzić do kradzieży lub usunięcia danych, modyfikacji kont czy przejęcia kontroli nad bazą.</p>\n<p><strong>Przykład ataku:</strong><br>\nZałóżmy, że użytkownik podaje login, a aplikacja wykonuje zapytanie (NIEBEZPIECZNE!):</p>\n<pre><code class=\"hljs language-python\">query = <span class=\"hljs-string\">\"SELECT * FROM Uzytkownicy WHERE login = '\"</span> + login + <span class=\"hljs-string\">\"';\"</span>\n</code></pre>\n<p>Jeśli użytkownik wpisze <code>admin' OR '1'='1</code>, zapytanie stanie się:</p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> Uzytkownicy <span class=\"hljs-keyword\">WHERE</span> login <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">'admin'</span> <span class=\"hljs-keyword\">OR</span> <span class=\"hljs-string\">'1'</span><span class=\"hljs-operator\">=</span><span class=\"hljs-string\">'1'</span>;\n</code></pre>\n<p>Co zwróci wszystkich użytkowników!</p>\n<p><strong>Bezpieczna wersja (parametryzacja):</strong></p>\n<pre><code class=\"hljs language-python\">cursor.execute(<span class=\"hljs-string\">\"SELECT * FROM Uzytkownicy WHERE login = %s;\"</span>, (login,))\n</code></pre>\n<p><strong>Dodatkowe przykłady:</strong></p>\n<ul>\n<li><code>DROP TABLE Uzytkownicy; --</code> jako login może usunąć całą tabelę!</li>\n<li>Zmiana hasła administratora przez podatne zapytania UPDATE.</li>\n</ul>\n<p><strong>Jak się bronić?</strong></p>\n<ul>\n<li>Używaj zapytań parametryzowanych (prepared statements).</li>\n<li>Waliduj i filtruj dane wejściowe.</li>\n<li>Ograniczaj uprawnienia użytkowników bazodanowych.</li>\n</ul>\n<hr>\n<h3 id=\"utrata-danych\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#utrata-danych\">>>></a>Utrata danych</h3>\n<ul>\n<li>Awaria sprzętu, błąd człowieka (np. przypadkowe usunięcie tabeli), atak (np. ransomware).</li>\n<li>Brak kopii zapasowej = trwała utrata danych!</li>\n<li>Przykład: awaria dysku, pożar serwerowni, błąd w aplikacji masowo kasujący dane.</li>\n</ul>\n<hr>\n<h3 id=\"nieautoryzowany-dostęp\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#nieautoryzowany-dostęp\">>>></a>Nieautoryzowany dostęp</h3>\n<ul>\n<li>Używanie domyślnych lub prostych haseł.</li>\n<li>Nieusuwanie starych kont.</li>\n<li>Brak ograniczeń adresów IP, z których można się połączyć.</li>\n<li>Przykład: administrator zapomniał odebrać uprawnienia byłemu pracownikowi.</li>\n</ul>\n<hr>\n<h3 id=\"wycieki-i-kradzież-danych\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#wycieki-i-kradzież-danych\">>>></a>Wycieki i kradzież danych</h3>\n<ul>\n<li>Uprawnienia nadane zbyt szeroko (każdy widzi wszystko).</li>\n<li>Błędy konfiguracyjne: baza dostępna z internetu bez zabezpieczeń.</li>\n<li>Przykład: publicznie dostępna baza MongoDB z danymi klientów.</li>\n</ul>\n<hr>\n<h3 id=\"ataki-typu-ransomware-i-ddos\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#ataki-typu-ransomware-i-ddos\">>>></a>Ataki typu ransomware i DDoS</h3>\n<ul>\n<li>Zaszyfrowanie bazy i żądanie okupu.</li>\n<li>Przeciążenie serwera bazą fałszywych zapytań (brak limitów i zabezpieczeń).</li>\n</ul>\n<hr>\n<h2 id=\"uprawnienia-i-zarządzanie-użytkownikami\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#uprawnienia-i-zarządzanie-użytkownikami\">>></a>Uprawnienia i zarządzanie użytkownikami</h2>\n<h3 id=\"przykłady-nadawania-uprawnień\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#przykłady-nadawania-uprawnień\">>>></a>Przykłady nadawania uprawnień</h3>\n<ul>\n<li>\n<p><strong>Zła praktyka:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">GRANT</span> <span class=\"hljs-keyword\">ALL</span> PRIVILEGES <span class=\"hljs-keyword\">ON</span> <span class=\"hljs-operator\">*</span>.<span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">TO</span> <span class=\"hljs-string\">'app'</span>@<span class=\"hljs-string\">'%'</span>;\n</code></pre>\n<p>(pełne uprawnienia dla wszystkich z każdego adresu IP!)</p>\n</li>\n<li>\n<p><strong>Dobra praktyka:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">GRANT</span> <span class=\"hljs-keyword\">SELECT</span>, <span class=\"hljs-keyword\">INSERT</span>, <span class=\"hljs-keyword\">UPDATE</span> <span class=\"hljs-keyword\">ON</span> moja_baza.<span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">TO</span> <span class=\"hljs-string\">'app'</span>@<span class=\"hljs-string\">'localhost'</span> IDENTIFIED <span class=\"hljs-keyword\">BY</span> <span class=\"hljs-string\">'silnehaslo'</span>;\n</code></pre>\n<p>(tylko potrzebne uprawnienia, tylko z lokalnego serwera)</p>\n</li>\n</ul>\n<h3 id=\"zasada-minimalnych-uprawnień\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zasada-minimalnych-uprawnień\">>>></a>Zasada minimalnych uprawnień</h3>\n<ul>\n<li>Przydzielaj tylko niezbędne prawa (np. brak CREATE/DROP dla użytkownika aplikacyjnego).</li>\n<li>Różnicuj konta: inne dla developerów, inne dla produkcji.</li>\n<li>Regularnie audytuj i usuwaj nieużywane konta.</li>\n</ul>\n<hr>\n<h2 id=\"szyfrowanie-danych\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#szyfrowanie-danych\">>></a>Szyfrowanie danych</h2>\n<h3 id=\"szyfrowanie-w-spoczynku\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#szyfrowanie-w-spoczynku\">>>></a>Szyfrowanie \"w spoczynku\"</h3>\n<ul>\n<li>Szyfrowanie plików bazy na dysku (np. TDE – Transparent Data Encryption).</li>\n<li>Przykład: dane na skradzionym dysku nie są czytelne bez klucza.</li>\n</ul>\n<h3 id=\"szyfrowanie-w-tranzycie\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#szyfrowanie-w-tranzycie\">>>></a>Szyfrowanie \"w tranzycie\"</h3>\n<ul>\n<li>Używanie połączeń szyfrowanych (SSL/TLS) między aplikacją a serwerem bazy.</li>\n<li>Przykład: przechwycenie ruchu sieciowego nie ujawnia haseł/danych.</li>\n</ul>\n<h3 id=\"szyfrowanie-wybranych-pól-danych-wrażliwych\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#szyfrowanie-wybranych-pól-danych-wrażliwych\">>>></a>Szyfrowanie wybranych pól (danych wrażliwych)</h3>\n<ul>\n<li>Szyfruj tylko kluczowe dane (np. PESEL, numer karty).</li>\n<li>Przykład (PostgreSQL, funkcja pgcrypto):\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">UPDATE</span> klienci <span class=\"hljs-keyword\">SET</span> pesel <span class=\"hljs-operator\">=</span> pgp_sym_encrypt(<span class=\"hljs-string\">'12345678901'</span>, <span class=\"hljs-string\">'tajny_klucz'</span>);\n</code></pre>\n</li>\n</ul>\n<hr>\n<h2 id=\"kopie-zapasowe-backup-i-odtwarzanie-danych\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#kopie-zapasowe-backup-i-odtwarzanie-danych\">>></a>Kopie zapasowe (backup) i odtwarzanie danych</h2>\n<h3 id=\"rodzaje-backupów\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#rodzaje-backupów\">>>></a>Rodzaje backupów</h3>\n<ul>\n<li><strong>Pełny:</strong> cała baza, wykonywany regularnie (np. co noc).</li>\n<li><strong>Przyrostowy/delta:</strong> tylko zmiany od ostatniego backupu.</li>\n<li><strong>Automatyczny:</strong> narzędzia typu cron, narzędzia DBMS.</li>\n</ul>\n<h3 id=\"bezpieczne-przechowywanie-backupów\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#bezpieczne-przechowywanie-backupów\">>>></a>Bezpieczne przechowywanie backupów</h3>\n<ul>\n<li>Przechowuj kopie poza głównym serwerem (np. inny serwer, chmura).</li>\n<li>Szyfruj backupy!</li>\n<li>Testuj przywracanie danych – backup bez testu = brak backupu.</li>\n</ul>\n<p><strong>Przykład backupu MySQL:</strong></p>\n<pre><code class=\"hljs language-bash\">mysqldump -u user -p baza > baza_backup.sql\n</code></pre>\n<hr>\n<h2 id=\"audyt-i-monitorowanie\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#audyt-i-monitorowanie\">>></a>Audyt i monitorowanie</h2>\n<h3 id=\"rejestrowanie-operacji-logi\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#rejestrowanie-operacji-logi\">>>></a>Rejestrowanie operacji (logi)</h3>\n<ul>\n<li>Loguj: logowania, próby nieautoryzowanego dostępu, zmiany danych, nadania uprawnień.</li>\n<li>Przykład:\n<ul>\n<li>Kto i kiedy zmienił rekord?</li>\n<li>Ile razy próbowano zalogować się z błędnym hasłem?</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"przykłady-alertów-i-monitoringu\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#przykłady-alertów-i-monitoringu\">>>></a>Przykłady alertów i monitoringu</h3>\n<ul>\n<li>Alert na przekroczenie liczby nieudanych logowań.</li>\n<li>Alert na próbę usunięcia większej liczby rekordów niż zazwyczaj.</li>\n<li>Monitorowanie czasu odpowiedzi bazy i liczby aktywnych połączeń.</li>\n</ul>\n<hr>\n<h2 id=\"bezpieczne-praktyki-programistyczne\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#bezpieczne-praktyki-programistyczne\">>></a>Bezpieczne praktyki programistyczne</h2>\n<h3 id=\"przykłady-kodu-bezpiecznego-i-podatnego\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#przykłady-kodu-bezpiecznego-i-podatnego\">>>></a>Przykłady kodu bezpiecznego i podatnego</h3>\n<p><strong>Podatny na SQL Injection:</strong></p>\n<pre><code class=\"hljs language-python\">login = <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">\"Podaj login: \"</span>)\nquery = <span class=\"hljs-string\">\"SELECT * FROM Uzytkownicy WHERE login = '\"</span> + login + <span class=\"hljs-string\">\"';\"</span>\ncursor.execute(query)\n</code></pre>\n<p><strong>Bezpieczny:</strong></p>\n<pre><code class=\"hljs language-python\">login = <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">\"Podaj login: \"</span>)\ncursor.execute(<span class=\"hljs-string\">\"SELECT * FROM Uzytkownicy WHERE login = %s;\"</span>, (login,))\n</code></pre>\n<h3 id=\"walidacja-i-sanityzacja-danych\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#walidacja-i-sanityzacja-danych\">>>></a>Walidacja i sanityzacja danych</h3>\n<ul>\n<li>Sprawdzaj, czy dane mają oczekiwany typ i format (np. e-mail, liczba).</li>\n<li>Ogranicz długość danych wejściowych.</li>\n<li>Odrzucaj dane zawierające podejrzane znaki lub sekwencje.</li>\n</ul>\n<hr>\n<h2 id=\"aktualizacje-i-zarządzanie-podatnościami\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#aktualizacje-i-zarządzanie-podatnościami\">>></a>Aktualizacje i zarządzanie podatnościami</h2>\n<ul>\n<li>Regularnie aktualizuj silnik bazy, oprogramowanie serwera, aplikacje.</li>\n<li>Śledź CVE (Common Vulnerabilities and Exposures) oraz biuletyny bezpieczeństwa dostawców.</li>\n<li>Szybko reaguj na publikowane luki bezpieczeństwa.</li>\n<li>Używaj narzędzi do skanowania podatności (np. Nessus, OpenVAS).</li>\n</ul>\n<hr>\n<h2 id=\"bezpieczeństwo-fizyczne-i-sieciowe\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#bezpieczeństwo-fizyczne-i-sieciowe\">>></a>Bezpieczeństwo fizyczne i sieciowe</h2>\n<ul>\n<li>Ogranicz dostęp do serwera bazy (np. tylko z wybranych adresów IP, VPN).</li>\n<li>Stosuj zapory sieciowe (firewall) oraz segmentację sieci.</li>\n<li>Serwer bazy nie powinien być dostępny z publicznego internetu!</li>\n<li>Zabezpiecz serwer fizycznie (zamykane serwerownie, monitoring).</li>\n</ul>\n<hr>\n<h2 id=\"praktyczne-zadania\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#praktyczne-zadania\">>></a>Praktyczne zadania</h2>\n<h3 id=\"zadanie-1-sql-injection\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-1-sql-injection\">>>></a>Zadanie 1: SQL Injection</h3>\n<p>Zidentyfikuj i popraw podatny na SQL Injection fragment kodu:</p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-comment\"># NIEBEZPIECZNE!</span>\nquery = <span class=\"hljs-string\">\"SELECT * FROM Uzytkownicy WHERE login = '\"</span> + login + <span class=\"hljs-string\">\"';\"</span>\n</code></pre>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<p><strong>Bezpieczne rozwiązanie (przykład w Pythonie z parametryzacją):</strong></p>\n<pre><code class=\"hljs language-python\">cursor.execute(<span class=\"hljs-string\">\"SELECT * FROM Uzytkownicy WHERE login = %s;\"</span>, (login,))\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nParametryzacja przekazuje dane osobno od zapytania – nawet jeśli użytkownik wpisze złośliwy kod, nie zostanie on wykonany jako SQL.</p>\n</details>\n<hr>\n<h3 id=\"zadanie-2-uprawnienia\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-2-uprawnienia\">>>></a>Zadanie 2: Uprawnienia</h3>\n<p>Zaproponuj sposób nadania tylko niezbędnych uprawnień użytkownikowi aplikacyjnemu w MySQL.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">GRANT</span> <span class=\"hljs-keyword\">SELECT</span>, <span class=\"hljs-keyword\">INSERT</span>, <span class=\"hljs-keyword\">UPDATE</span> <span class=\"hljs-keyword\">ON</span> baza.<span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">TO</span> <span class=\"hljs-string\">'app_user'</span>@<span class=\"hljs-string\">'localhost'</span> IDENTIFIED <span class=\"hljs-keyword\">BY</span> <span class=\"hljs-string\">'silnehaslo'</span>;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nUżytkownik nie może kasować ani zmieniać struktury bazy – tylko podstawowe operacje.</p>\n</details>\n<hr>\n<h3 id=\"zadanie-3-backup-i-odtwarzanie\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-3-backup-i-odtwarzanie\">>>></a>Zadanie 3: Backup i odtwarzanie</h3>\n<p>Wypisz polecenie do stworzenia backupu bazy \"sklep\" w MySQL oraz opisz, gdzie bezpiecznie go przechować.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-bash\">mysqldump -u user -p sklep > sklep_backup.sql\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nBackup najlepiej przechowywać na zaszyfrowanym dysku w innej lokalizacji niż produkcyjny serwer.</p>\n</details>\n<hr>\n<h3 id=\"zadanie-4-audyt\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-4-audyt\">>>></a>Zadanie 4: Audyt</h3>\n<p>Opisz, jakie informacje warto logować w bazie w celach bezpieczeństwa.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<ul>\n<li>Logi logowania i wylogowania użytkowników</li>\n<li>Próby nieautoryzowanego dostępu</li>\n<li>Operacje modyfikujące dane (INSERT, UPDATE, DELETE)</li>\n<li>Zmiany uprawnień i konfiguracji\n<strong>Wyjaśnienie:</strong><br>\nTakie logi pozwalają wykryć ataki, nadużycia i szybciej reagować na incydenty.</li>\n</ul>\n</details>\n<hr>\n<h3 id=\"zadanie-5-szyfrowanie\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-5-szyfrowanie\">>>></a>Zadanie 5: Szyfrowanie</h3>\n<p>Podaj dwa przykłady zastosowania szyfrowania w bazie danych.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<ul>\n<li>Szyfrowanie połączenia klient-serwer (SSL/TLS), np. <code>mysql --ssl-mode=REQUIRED</code></li>\n<li>Szyfrowanie danych na dysku (np. TDE – Transparent Data Encryption w MS SQL, MariaDB)\n<strong>Wyjaśnienie:</strong><br>\nSzyfrowanie chroni przed kradzieżą danych podczas transmisji i fizycznego dostępu do dysków.</li>\n</ul>\n</details>\n<hr>\n<h3 id=\"zadanie-6-przykład-walidacji-danych-wejściowych\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-6-przykład-walidacji-danych-wejściowych\">>>></a>Zadanie 6: Przykład walidacji danych wejściowych</h3>\n<p>Podaj przykład sprawdzania poprawności adresu e-mail przed zapisaniem do bazy.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<p><strong>W Pythonie:</strong></p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import</span> re\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">valid_email</span>(<span class=\"hljs-params\">email</span>):\n    <span class=\"hljs-keyword\">return</span> re.<span class=\"hljs-keyword\">match</span>(<span class=\"hljs-string\">r\"^[^@]+@[^@]+\\.[^@]+$\"</span>, email)\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nAkceptujemy tylko dane zgodne z ustalonym wzorcem – minimalizujemy ryzyko wstrzyknięcia niepożądanych znaków.</p>\n</details>\n<hr>\n<h3 id=\"zadanie-7-przykład-ograniczenia-dostępu-sieciowego\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-7-przykład-ograniczenia-dostępu-sieciowego\">>>></a>Zadanie 7: Przykład ograniczenia dostępu sieciowego</h3>\n<p>Jak ograniczyć dostęp do bazy tylko z określonych adresów IP?</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<ul>\n<li>W MySQL przy tworzeniu użytkownika określ w host: <code>'app_user'@'192.168.1.100'</code></li>\n<li>Skonfiguruj firewall (iptables, security group w chmurze), by akceptował ruch tylko z zaufanych adresów.\n<strong>Wyjaśnienie:</strong><br>\nTylko aplikacja działająca na wybranym serwerze może połączyć się z bazą, ataki z zewnątrz są blokowane.</li>\n</ul>\n</details>\n<hr>\n<h2 id=\"podsumowanie\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podsumowanie\">>></a>Podsumowanie</h2>\n<p>Bezpieczeństwo baz danych wymaga ciągłej uwagi, aktualizacji i stosowania dobrych praktyk. Najlepsza ochrona to połączenie technologii, kontroli dostępu, backupów, szyfrowania, audytu oraz świadomych użytkowników i programistów. Nawet najprostsze rozwiązania mogą zapobiec poważnym konsekwencjom wycieku lub utraty danych!</p>","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/bezpieczenstwo-baz-danych.md","5 minut",{"_8":166,"_10":167,"_12":168,"_22":176,"_24":177,"_34":178,"_26":221,"_28":222,"_30":223,"_32":224,"_35":36},"Optymalizacja baz danych i zapytań SQL","Dowiedz się, jak przyspieszyć działanie baz danych i zapytań SQL. Poznaj techniki indeksowania, optymalizacji zapytań, analizy wydajności oraz dobre praktyki projektowe. Przewodnik dla średniozaawansowanych i zaawansowanych.",[169,170,171,172,173,174,175,104],"optymalizacja","bazy danych","indeksy","wydajność","explain","tuning","sql",[175,106],["D",1751673600000],{"_8":179,"_110":180},"Quiz: Optymalizacja baz danych i zapytań SQL",[181,189,197,205,213],{"_113":182,"_115":183,"_121":141,"_123":188},"<p>Czym jest indeks w bazie danych?</p>",[184,185,186,187],"Typ połączenia sieciowego","Dodatkowa tabela przechowująca kopie rekordów","Kod służący do tworzenia backupów","Struktura danych przyspieszająca wyszukiwanie i sortowanie","Indeks to struktura umożliwiająca szybkie wyszukiwanie i sortowanie danych.",{"_113":190,"_115":191,"_121":150,"_123":196},"<p>Jak sprawdzić plan wykonania zapytania SQL?</p>",[192,193,194,195],"Dodać WHERE 1=1","Użyć polecenia EXPLAIN lub EXPLAIN ANALYZE","Użyć DELETE","Zwiększyć ilość RAM","Polecenie EXPLAIN pozwala sprawdzić, jak baza danych wykona zapytanie.",{"_113":198,"_115":199,"_121":122,"_123":204},"<p>Które z poniższych NIE jest dobrym sposobem na poprawę wydajności zapytań?</p>",[200,201,202,203],"Dodawanie zbędnych podzapytań","Unikanie SELECT *","Tworzenie odpowiednich indeksów","Filtrowanie danych w WHERE","Zbędne podzapytania mogą spowalniać zapytania.",{"_113":206,"_115":207,"_121":141,"_123":212},"<p>Czym jest denormalizacja?</p>",[208,209,210,211],"Proces dzielenia tabel na mniejsze","Zwiększanie liczby indeksów","Usuwanie kluczy głównych","Proces łączenia danych w celu poprawy wydajności","Denormalizacja to łączenie danych, by przyspieszyć odczyt kosztem powielania informacji.",{"_113":214,"_115":215,"_121":141,"_123":220},"<p>Jakie zapytanie może być szczególnie niebezpieczne wydajnościowo?</p>",[216,217,218,219],"UPDATE bez WHERE","DELETE z podzapytaniami bez filtrów","SELECT z JOIN na dużych tabelach bez indeksów","Wszystkie powyższe","Brak ograniczeń i indeksów w dużych zapytaniach może prowadzić do spadku wydajności lub błędów.","d47fd502-ac17-436a-9d50-777f90666419","optymalizacja-baz-danych-i-zapytan-sql","<p>Optymalizacja baz danych i zapytań SQL to kluczowy element sprawnego działania aplikacji, szczególnie gdy ilość danych rośnie. Nawet dobrze zaprojektowana baza może działać wolno bez odpowiednich technik optymalizacyjnych. Ten kurs pokaże Ci, jak analizować, wykrywać i rozwiązywać najczęstsze problemy z wydajnością.</p>\n<h2 id=\"spis-treści\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#spis-treści\">>></a>Spis treści</h2>\n<ol>\n<li><a href=\"#dlaczego-optymalizacja-jest-wa%C5%BCna\">Dlaczego optymalizacja jest ważna?</a></li>\n<li><a href=\"#indeksowanie-danych\">Indeksowanie danych</a>\n<ul>\n<li><a href=\"#rodzaje-indeks%C3%B3w\">Rodzaje indeksów</a></li>\n<li><a href=\"#tworzenie-i-usuwanie-indeks%C3%B3w\">Tworzenie i usuwanie indeksów</a></li>\n<li><a href=\"#kiedy-indeksy-przeszkadzaj%C4%85\">Kiedy indeksy przeszkadzają?</a></li>\n</ul>\n</li>\n<li><a href=\"#optymalizacja-zapyta%C5%84-sql\">Optymalizacja zapytań SQL</a>\n<ul>\n<li><a href=\"#analiza-planu-wykonania-explain\">Analiza planu wykonania (EXPLAIN)</a></li>\n<li><a href=\"#unikanie-typowych-b%C5%82%C4%99d%C3%B3w\">Unikanie typowych błędów</a></li>\n<li><a href=\"#pisanie-wydajnych-zapyta%C5%84\">Pisanie wydajnych zapytań</a></li>\n</ul>\n</li>\n<li><a href=\"#normalizacja-a-denormalizacja-danych\">Normalizacja a denormalizacja danych</a></li>\n<li><a href=\"#tuning-bazy-danych-i-parametry-konfiguracyjne\">Tuning bazy danych i parametry konfiguracyjne</a></li>\n<li><a href=\"#monitorowanie-wydajno%C5%9Bci\">Monitorowanie wydajności</a></li>\n<li><a href=\"#praktyczne-zadania\">Praktyczne zadania</a></li>\n<li><a href=\"#podsumowanie\">Podsumowanie</a></li>\n</ol>\n<hr>\n<h2 id=\"dlaczego-optymalizacja-jest-ważna\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#dlaczego-optymalizacja-jest-ważna\">>></a>Dlaczego optymalizacja jest ważna?</h2>\n<ul>\n<li><strong>Duże ilości danych</strong> mogą znacząco spowolnić nawet dobrze zaprojektowaną bazę.</li>\n<li><strong>Wydajne zapytania</strong> to krótszy czas odpowiedzi i mniejsze zużycie zasobów serwera.</li>\n<li>Niska wydajność bazy może prowadzić do spadku satysfakcji użytkowników, błędów i kosztów utrzymania.</li>\n</ul>\n<hr>\n<h2 id=\"indeksowanie-danych\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#indeksowanie-danych\">>></a>Indeksowanie danych</h2>\n<p>Indeks to specjalna struktura danych (np. drzewo B-drzewiaste), która przyspiesza wyszukiwanie i sortowanie danych w tabeli. Działa jak spis treści w książce.</p>\n<h3 id=\"rodzaje-indeksów\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#rodzaje-indeksów\">>>></a>Rodzaje indeksów</h3>\n<ul>\n<li><strong>Indeks podstawowy (PRIMARY)</strong> – na kluczu głównym, zawsze unikalny.</li>\n<li><strong>Indeksy unikalne (UNIQUE)</strong> – zapewniają unikalność wartości w kolumnie.</li>\n<li><strong>Indeksy zwykłe</strong> – przyspieszają wyszukiwanie, ale mogą mieć powtarzające się wartości.</li>\n<li><strong>Indeksy złożone (wielokolumnowe)</strong> – na kilku kolumnach jednocześnie.</li>\n<li><strong>Indeksy pełnotekstowe</strong> – do wyszukiwania tekstów.</li>\n</ul>\n<h3 id=\"tworzenie-i-usuwanie-indeksów\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#tworzenie-i-usuwanie-indeksów\">>>></a>Tworzenie i usuwanie indeksów</h3>\n<p><strong>Tworzenie indeksu:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE</span> INDEX idx_nazwisko <span class=\"hljs-keyword\">ON</span> Pracownik(nazwisko);\n</code></pre>\n<ul>\n<li><code>CREATE INDEX</code> – polecenie tworzące indeks.</li>\n<li><code>idx_nazwisko</code> – nazwa indeksu.</li>\n<li><code>ON Pracownik(nazwisko)</code> – tabela i kolumna, na której tworzony jest indeks.</li>\n</ul>\n<p><strong>Usuwanie indeksu:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">DROP</span> INDEX idx_nazwisko <span class=\"hljs-keyword\">ON</span> Pracownik;\n</code></pre>\n<h3 id=\"kiedy-indeksy-przeszkadzają\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#kiedy-indeksy-przeszkadzają\">>>></a>Kiedy indeksy przeszkadzają?</h3>\n<ul>\n<li>Zbyt wiele indeksów spowalnia operacje INSERT, UPDATE, DELETE (każda zmiana wymaga aktualizacji indeksów).</li>\n<li>Indeksy zajmują dodatkowe miejsce na dysku.</li>\n<li>Indeksy nie pomagają przy operacjach na małych tabelach.</li>\n</ul>\n<hr>\n<h2 id=\"optymalizacja-zapytań-sql\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#optymalizacja-zapytań-sql\">>></a>Optymalizacja zapytań SQL</h2>\n<h3 id=\"analiza-planu-wykonania-explain\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#analiza-planu-wykonania-explain\">>>></a>Analiza planu wykonania (EXPLAIN)</h3>\n<p>Polecenie <strong>EXPLAIN</strong> pokazuje, jak baza zamierza wykonać zapytanie – czy użyje indeksu, jak będzie łączyć tabele itd.</p>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\">EXPLAIN <span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> Pracownik <span class=\"hljs-keyword\">WHERE</span> nazwisko <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">'Kowalski'</span>;\n</code></pre>\n<ul>\n<li>Sprawdź, czy w kolumnie \"key\" pojawia się nazwa indeksu.</li>\n</ul>\n<h3 id=\"unikanie-typowych-błędów\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#unikanie-typowych-błędów\">>>></a>Unikanie typowych błędów</h3>\n<ul>\n<li>SELECT * (wszystkie kolumny) – pobieraj tylko potrzebne kolumny.</li>\n<li>Brak WHERE – zapytania bez warunków mogą przetwarzać całą tabelę.</li>\n<li>Zbyt złożone podzapytania lub zagnieżdżone JOINy bez indeksów.</li>\n<li>Filtrowanie po kolumnie bez indeksu.</li>\n</ul>\n<h3 id=\"pisanie-wydajnych-zapytań\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#pisanie-wydajnych-zapytań\">>>></a>Pisanie wydajnych zapytań</h3>\n<ul>\n<li>Używaj WHERE, by ograniczyć liczbę przetwarzanych rekordów.</li>\n<li>Łącz tabele po indeksowanych kolumnach (kluczach głównych/obcych).</li>\n<li>Unikaj funkcji na kolumnach w WHERE (np. WHERE LOWER(nazwisko) = 'kowalski') – indeksy wtedy nie działają.</li>\n<li>Stosuj LIMIT, jeśli nie potrzebujesz wszystkich wyników.</li>\n</ul>\n<hr>\n<h2 id=\"normalizacja-a-denormalizacja-danych\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#normalizacja-a-denormalizacja-danych\">>></a>Normalizacja a denormalizacja danych</h2>\n<ul>\n<li><strong>Normalizacja</strong> – dzielenie danych na tabele, by unikać powielania informacji i zapewnić spójność (zazwyczaj do 3NF).</li>\n<li><strong>Denormalizacja</strong> – celowe powielanie danych w tabelach (np. trzymanie nazwy produktu przy zamówieniu) w celu przyspieszenia odczytu danych, kosztem spójności i miejsca.</li>\n</ul>\n<p><strong>Kiedy warto denormalizować?</strong></p>\n<ul>\n<li>Gdy odczyty są znacznie częstsze niż zapisy.</li>\n<li>Gdy optymalizacja zapytań jest ważniejsza niż minimalizacja powielania danych.</li>\n</ul>\n<hr>\n<h2 id=\"tuning-bazy-danych-i-parametry-konfiguracyjne\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#tuning-bazy-danych-i-parametry-konfiguracyjne\">>></a>Tuning bazy danych i parametry konfiguracyjne</h2>\n<ul>\n<li><strong>Cache (buforowanie)</strong> – bazy danych posiadają wbudowane mechanizmy buforowania wyników zapytań i stron danych.</li>\n<li><strong>Konfiguracja pamięci operacyjnej</strong> – wielkość buforów, liczba połączeń.</li>\n<li><strong>Partycjonowanie tabel</strong> – dzielenie dużych tabel na mniejsze części (np. wg daty).</li>\n<li><strong>Replikacja</strong> – kopiowanie danych na różne serwery, by rozłożyć obciążenie.</li>\n</ul>\n<hr>\n<h2 id=\"monitorowanie-wydajności\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#monitorowanie-wydajności\">>></a>Monitorowanie wydajności</h2>\n<ul>\n<li>Używaj wbudowanych narzędzi (np. <code>SHOW PROCESSLIST</code>, <code>pg_stat_activity</code>).</li>\n<li>Loguj czas wykonania zapytań.</li>\n<li>Analizuj statystyki indeksów i fragmentację tabel.</li>\n<li>Wdrażaj alerty przy długotrwałych zapytaniach.</li>\n</ul>\n<hr>\n<h2 id=\"praktyczne-zadania\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#praktyczne-zadania\">>></a>Praktyczne zadania</h2>\n<h3 id=\"zadanie-1-tworzenie-indeksu\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-1-tworzenie-indeksu\">>>></a>Zadanie 1: Tworzenie indeksu</h3>\n<p>Stwórz indeks na kolumnie \"email\" w tabeli \"Uzytkownicy\".</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE</span> INDEX idx_email <span class=\"hljs-keyword\">ON</span> Uzytkownicy(email);\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-2-analiza-zapytania\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-2-analiza-zapytania\">>>></a>Zadanie 2: Analiza zapytania</h3>\n<p>Sprawdź plan wykonania poniższego zapytania:</p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> Produkty <span class=\"hljs-keyword\">WHERE</span> nazwa <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">'Laptop'</span>;\n</code></pre>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-sql\">EXPLAIN <span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> Produkty <span class=\"hljs-keyword\">WHERE</span> nazwa <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">'Laptop'</span>;\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-3-optymalizacja-zapytania\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-3-optymalizacja-zapytania\">>>></a>Zadanie 3: Optymalizacja zapytania</h3>\n<p>Masz zapytanie:</p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> Zamowienie <span class=\"hljs-keyword\">WHERE</span> <span class=\"hljs-keyword\">YEAR</span>(data_zamowienia) <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">2025</span>;\n</code></pre>\n<p>Jak je poprawić, by lepiej wykorzystać indeks na kolumnie data_zamowienia?</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> Zamowienie <span class=\"hljs-keyword\">WHERE</span> data_zamowienia <span class=\"hljs-operator\">>=</span> <span class=\"hljs-string\">'2025-01-01'</span> <span class=\"hljs-keyword\">AND</span> data_zamowienia <span class=\"hljs-operator\">&#x3C;</span> <span class=\"hljs-string\">'2026-01-01'</span>;\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-4-wydajność-a-liczba-indeksów\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-4-wydajność-a-liczba-indeksów\">>>></a>Zadanie 4: Wydajność a liczba indeksów</h3>\n<p>Wyjaśnij, dlaczego zbyt wiele indeksów może negatywnie wpłynąć na wydajność bazy.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<p>Każdy INSERT, UPDATE lub DELETE wymaga aktualizacji wszystkich indeksów, co spowalnia operacje modyfikujące dane.</p>\n</details>\n<hr>\n<h3 id=\"zadanie-5-denormalizacja\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-5-denormalizacja\">>>></a>Zadanie 5: Denormalizacja</h3>\n<p>Podaj przykład sytuacji, kiedy warto zastosować denormalizację.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<p>Gdy bardzo często wyświetlamy raporty sprzedaży, możemy przechowywać sumę sprzedaży w tabeli, zamiast za każdym razem ją wyliczać.</p>\n</details>\n<hr>\n<h2 id=\"podsumowanie\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podsumowanie\">>></a>Podsumowanie</h2>\n<p>Optymalizacja baz danych i zapytań SQL pozwala obsługiwać większą ilość danych szybciej i taniej. Korzystaj z indeksów, analizuj plany wykonania, dbaj o strukturę bazy i monitoruj jej działanie – to klucz do sukcesu każdego większego projektu informatycznego!</p>","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/optymalizacja-baz-danych-i-zapytan-sql.md",{"_8":226,"_10":227,"_12":228,"_22":234,"_24":235,"_34":236,"_26":279,"_28":280,"_30":281,"_32":282,"_35":283},"Podstawy projektowania baz danych","Dowiedz się, jak projektować efektywne, czytelne i bezpieczne bazy danych. Poznaj zasady normalizacji, diagramy ERD, relacje, dobre praktyki projektowe oraz liczne przykłady i zadania praktyczne. Kurs teoretyczno-praktyczny dla początkujących.",[96,229,230,231,232,233,103,104],"projektowanie","normalizacja","erd","relacje","modelowanie",[106],["D",1751673600000],{"_8":237,"_110":238},"Quiz: Podstawy projektowania baz danych",[239,247,255,263,271],{"_113":240,"_115":241,"_121":150,"_123":246},"<p>Czym jest modelowanie danych?</p>",[242,243,244,245],"Szyfrowanie danych","Proces odwzorowania rzeczywistości w strukturze bazy danych","Proces tworzenia stron internetowych","Tworzenie kopii zapasowych danych","Modelowanie danych to odwzorowanie rzeczywistych obiektów i zależności w strukturze bazy.",{"_113":248,"_115":249,"_121":132,"_123":254},"<p>Co przedstawia diagram ERD?</p>",[250,251,252,253],"Schemat działania serwera WWW","Struktury kodu źródłowego","Relacje między encjami w bazie danych","Zasady bezpieczeństwa","ERD (Entity-Relationship Diagram) to graficzne przedstawienie encji i relacji między nimi.",{"_113":256,"_115":257,"_121":132,"_123":262},"<p>Czym jest klucz główny (Primary Key)?</p>",[258,259,260,261],"Kolumna służąca do sortowania","Pole przechowujące hasło","Unikalnym identyfikatorem rekordu w tabeli","Nazwa tabeli","Klucz główny (Primary Key) jednoznacznie identyfikuje każdy rekord w tabeli.",{"_113":264,"_115":265,"_121":150,"_123":270},"<p>Na czym polega normalizacja danych?</p>",[266,267,268,269],"Na sortowaniu danych","Na podziale danych na tabele w celu eliminacji nadmiarowości i zapewnienia spójności","Na szyfrowaniu rekordów","Na kompresji plików","Normalizacja to proces dzielenia danych na mniejsze, powiązane tabele, by uniknąć powielania informacji.",{"_113":272,"_115":273,"_121":141,"_123":278},"<p>Jaką relację opisuje połączenie jeden-do-wielu?</p>",[274,275,276,277],"Wiele rekordów w jednej tabeli odpowiada wielu w drugiej","Tabele nie są powiązane","Każdy rekord w jednej tabeli odpowiada dokładnie jednemu rekordowi w drugiej","Każdy rekord w jednej tabeli może być powiązany z wieloma rekordami w drugiej tabeli","Relacja jeden-do-wielu oznacza, że jeden rekord z tabeli A może być powiązany z wieloma rekordami z tabeli B.","bda60f9e-f803-489c-b17e-d4a262c2d493","podstawy-projektowania-baz-danych","<p>Projektowanie bazy danych to sztuka zamieniania rzeczywistych problemów na logiczne, czytelne i wydajne struktury danych. Dobrze zaprojektowana baza ułatwia przechowywanie, wyszukiwanie i analizę informacji, a także minimalizuje błędy i powielanie danych.</p>\n<h2 id=\"spis-treści\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#spis-treści\">>></a>Spis treści</h2>\n<ol>\n<li><a href=\"#czym-jest-projektowanie-bazy-danych\">Czym jest projektowanie bazy danych?</a></li>\n<li><a href=\"#modelowanie-danych-i-diagramy-erd\">Modelowanie danych i diagramy ERD</a>\n<ul>\n<li><a href=\"#przyk%C5%82ad-praktyczny-minidiagram-erd-dla-sklepu\">Przykład praktyczny: minidiagram ERD dla sklepu</a></li>\n</ul>\n</li>\n<li><a href=\"#podstawowe-poj%C4%99cia-encja-atrybut-relacja\">Podstawowe pojęcia: encja, atrybut, relacja</a>\n<ul>\n<li><a href=\"#przyk%C5%82ad-encji-z-atrybutami\">Przykład encji z atrybutami</a></li>\n</ul>\n</li>\n<li><a href=\"#rodzaje-relacji-mi%C4%99dzy-tabelami\">Rodzaje relacji między tabelami</a>\n<ul>\n<li><a href=\"#jeden-do-jednego-11\">Jeden do jednego (1:1)</a></li>\n<li><a href=\"#jeden-do-wielu-1n\">Jeden do wielu (1:N)</a></li>\n<li><a href=\"#wiele-do-wielu-nm\">Wiele do wielu (N:M)</a></li>\n<li><a href=\"#przyk%C5%82ady-relacji-i-ich-implementacja\">Przykłady relacji i ich implementacja</a></li>\n</ul>\n</li>\n<li><a href=\"#klucze-g%C5%82%C3%B3wne-i-obce\">Klucze główne i obce</a>\n<ul>\n<li><a href=\"#przyk%C5%82ad-praktyczny-klucz-g%C5%82%C3%B3wny-i-obcy\">Przykład praktyczny: klucz główny i obcy</a></li>\n</ul>\n</li>\n<li><a href=\"#normalizacja-danych\">Normalizacja danych</a>\n<ul>\n<li><a href=\"#pierwsza-posta%C4%87-normalna-1nf\">Pierwsza postać normalna (1NF)</a></li>\n<li><a href=\"#druga-posta%C4%87-normalna-2nf\">Druga postać normalna (2NF)</a></li>\n<li><a href=\"#trzecia-posta%C4%87-normalna-3nf\">Trzecia postać normalna (3NF)</a></li>\n<li><a href=\"#przyk%C5%82ad-normalizacji-krok-po-kroku\">Przykład normalizacji krok po kroku</a></li>\n</ul>\n</li>\n<li><a href=\"#typowe-b%C5%82%C4%99dy-projektowe\">Typowe błędy projektowe</a>\n<ul>\n<li><a href=\"#przyk%C5%82ady-b%C5%82%C4%99d%C3%B3w-i-ich-skutki\">Przykłady błędów i ich skutki</a></li>\n</ul>\n</li>\n<li><a href=\"#dobre-praktyki-projektowe\">Dobre praktyki projektowe</a>\n<ul>\n<li><a href=\"#praktyczne-wskaz%C3%B3wki\">Praktyczne wskazówki</a></li>\n</ul>\n</li>\n<li><a href=\"#praktyczne-zadania\">Praktyczne zadania</a></li>\n<li><a href=\"#podsumowanie\">Podsumowanie</a></li>\n</ol>\n<hr>\n<h2 id=\"czym-jest-projektowanie-bazy-danych\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#czym-jest-projektowanie-bazy-danych\">>></a>Czym jest projektowanie bazy danych?</h2>\n<p>Projektowanie bazy danych polega na przemyślanym zaplanowaniu, jakie informacje będą przechowywane, jak będą powiązane oraz jak zapewnić spójność i efektywność przechowywania danych. To proces analizy rzeczywistego problemu, wydzielenia kluczowych obiektów (encje), ich cech (atrybuty) i wzajemnych powiązań (relacje).</p>\n<hr>\n<h2 id=\"modelowanie-danych-i-diagramy-erd\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#modelowanie-danych-i-diagramy-erd\">>></a>Modelowanie danych i diagramy ERD</h2>\n<p><strong>Modelowanie danych</strong> to proces odwzorowania rzeczywistości na strukturę bazy. W praktyce używamy do tego <em>diagramów ERD</em> (Entity-Relationship Diagram), które graficznie przedstawiają encje oraz relacje między nimi.</p>\n<ul>\n<li><strong>Encja</strong> – np. Użytkownik, Zamówienie, Produkt.</li>\n<li><strong>Atrybut</strong> – cecha encji np. imię, data zamówienia, cena produktu.</li>\n<li><strong>Relacja</strong> – powiązanie między encjami, np. \"Użytkownik składa Zamówienie\".</li>\n</ul>\n<h3 id=\"przykład-praktyczny-minidiagram-erd-dla-sklepu\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#przykład-praktyczny-minidiagram-erd-dla-sklepu\">>>></a>Przykład praktyczny: minidiagram ERD dla sklepu</h3>\n<p>Wyobraź sobie sklep internetowy.</p>\n<pre><code>[Klient] 1---N [Zamówienie] N---M [Produkt]\n</code></pre>\n<ul>\n<li>Klient składa wiele zamówień.</li>\n<li>Zamówienie może dotyczyć wielu produktów (i odwrotnie: produkt może być w wielu zamówieniach).</li>\n</ul>\n<hr>\n<h2 id=\"podstawowe-pojęcia-encja-atrybut-relacja\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podstawowe-pojęcia-encja-atrybut-relacja\">>></a>Podstawowe pojęcia: encja, atrybut, relacja</h2>\n<ul>\n<li><strong>Encja</strong> (entity): reprezentuje obiekt rzeczywisty lub pojęciowy, np. Klient, Produkt, Faktura.</li>\n<li><strong>Atrybut</strong>: pojedyncza informacja opisująca encję, np. imię, cena, numer faktury.</li>\n<li><strong>Relacja</strong>: związek między encjami, np. klient składa zamówienie.</li>\n</ul>\n<h3 id=\"przykład-encji-z-atrybutami\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#przykład-encji-z-atrybutami\">>>></a>Przykład encji z atrybutami</h3>\n<p><strong>Encja:</strong> Klient<br>\n<strong>Atrybuty:</strong> id_klienta, imie, email, adres</p>\n<p><strong>Encja:</strong> Produkt<br>\n<strong>Atrybuty:</strong> id_produktu, nazwa, cena</p>\n<hr>\n<h2 id=\"rodzaje-relacji-między-tabelami\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#rodzaje-relacji-między-tabelami\">>></a>Rodzaje relacji między tabelami</h2>\n<h3 id=\"jeden-do-jednego-11\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#jeden-do-jednego-11\">>>></a>Jeden do jednego (1:1)</h3>\n<p>Każdemu rekordowi z jednej tabeli odpowiada dokładnie jeden rekord z drugiej tabeli.</p>\n<p><strong>Przykład:</strong> Każdy użytkownik ma jeden profil.</p>\n<p><strong>Implementacja:</strong> najczęściej przez dzielenie rzadko używanych danych na osobną tabelę np.<br>\nTabela <code>Uzytkownik</code> i tabela <code>Profil</code> powiązana polem <code>id</code>.</p>\n<h3 id=\"jeden-do-wielu-1n\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#jeden-do-wielu-1n\">>>></a>Jeden do wielu (1:N)</h3>\n<p>Jeden rekord z pierwszej tabeli może być powiązany z wieloma rekordami z drugiej tabeli.</p>\n<p><strong>Przykład:</strong> Jeden klient może złożyć wiele zamówień.</p>\n<p><strong>Implementacja:</strong><br>\nTabela <code>Klient</code> (id)<br>\nTabela <code>Zamowienie</code> (id, klient_id)</p>\n<h3 id=\"wiele-do-wielu-nm\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#wiele-do-wielu-nm\">>>></a>Wiele do wielu (N:M)</h3>\n<p>Wiele rekordów z jednej tabeli może być powiązanych z wieloma rekordami z drugiej tabeli.<br>\n<strong>Przykład:</strong> Studenci zapisani na wiele kursów, kursy mają wielu studentów.</p>\n<p><strong>Implementacja:</strong><br>\nTabela pośrednicząca, np. <code>Student_Kurs</code> (student_id, kurs_id)</p>\n<h4 id=\"przykłady-relacji-i-ich-implementacja\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#przykłady-relacji-i-ich-implementacja\">>>>></a>Przykłady relacji i ich implementacja</h4>\n<pre><code class=\"hljs language-mermaid\">erDiagram\n    KLIENT ||--o{ ZAMOWIENIE : składa\n    ZAMOWIENIE }o--o{ PRODUKT : zawiera\n</code></pre>\n<hr>\n<h2 id=\"klucze-główne-i-obce\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#klucze-główne-i-obce\">>></a>Klucze główne i obce</h2>\n<ul>\n<li><strong>Klucz główny (Primary Key):</strong> unikalny identyfikator rekordu w tabeli, np. id.</li>\n<li><strong>Klucz obcy (Foreign Key):</strong> pole wskazujące na klucz główny rekordu w innej tabeli, używany do tworzenia relacji.</li>\n</ul>\n<h3 id=\"przykład-praktyczny-klucz-główny-i-obcy\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#przykład-praktyczny-klucz-główny-i-obcy\">>>></a>Przykład praktyczny: klucz główny i obcy</h3>\n<p>Tabela <code>Klient</code></p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>id</th><th>imie</th><th>email</th></tr></thead><tbody><tr><td>1</td><td>Jan</td><td><code>jan@ex.com</code></td></tr></tbody></table>\n<p>Tabela <code>Zamowienie</code></p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>id</th><th>data</th><th>klient_id</th></tr></thead><tbody><tr><td>1</td><td>2025-07-05</td><td>1</td></tr></tbody></table>\n<p>Tutaj <code>klient_id</code> w <code>Zamowienie</code> to klucz obcy wskazujący na <code>id</code> w <code>Klient</code>.</p>\n<hr>\n<h2 id=\"normalizacja-danych\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#normalizacja-danych\">>></a>Normalizacja danych</h2>\n<p>Normalizacja to proces podziału danych na tabele w taki sposób, aby:</p>\n<ul>\n<li>unikać powielania informacji (redukcja nadmiarowości),</li>\n<li>zapewnić spójność i łatwość utrzymania danych.</li>\n</ul>\n<h3 id=\"pierwsza-postać-normalna-1nf\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#pierwsza-postać-normalna-1nf\">>>></a>Pierwsza postać normalna (1NF)</h3>\n<ul>\n<li>Każda kolumna przechowuje tylko jedną wartość (brak list/pól wielowartościowych).</li>\n<li>Każdy rekord jest unikalny.</li>\n</ul>\n<p><strong>Błąd:</strong></p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>id</th><th>imie</th><th>telefony</th></tr></thead><tbody><tr><td>1</td><td>Jan</td><td>123456, 987654</td></tr></tbody></table>\n<p><strong>Poprawnie:</strong></p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>id</th><th>imie</th><th>telefon</th></tr></thead><tbody><tr><td>1</td><td>Jan</td><td>123456</td></tr><tr><td>1</td><td>Jan</td><td>987654</td></tr></tbody></table>\n<h3 id=\"druga-postać-normalna-2nf\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#druga-postać-normalna-2nf\">>>></a>Druga postać normalna (2NF)</h3>\n<ul>\n<li>Spełnia 1NF.</li>\n<li>Każdy atrybut niebędący częścią klucza zależy w pełni od klucza głównego.</li>\n</ul>\n<p><strong>Przykład błędu:</strong><br>\nTabela <code>Zamowienie_Produkt</code> (zamowienie_id, produkt_id, nazwa_produktu, cena)<br>\nNazwa produktu zależy od produktu, nie od zamówienia!</p>\n<p><strong>Poprawnie:</strong><br>\nTabela <code>Produkt</code> (id, nazwa_produktu, cena)<br>\nTabela <code>Zamowienie_Produkt</code> (zamowienie_id, produkt_id)</p>\n<h3 id=\"trzecia-postać-normalna-3nf\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#trzecia-postać-normalna-3nf\">>>></a>Trzecia postać normalna (3NF)</h3>\n<ul>\n<li>Spełnia 2NF.</li>\n<li>Każdy atrybut niebędący kluczem nie zależy od innych atrybutów niebędących kluczem.</li>\n</ul>\n<p><strong>Przykład błędu:</strong><br>\nTabela <code>Klient</code> (id, imie, kod_pocztowy, miasto) – miasto zależy od kodu pocztowego, nie od klienta.</p>\n<p><strong>Poprawnie:</strong><br>\nTabela <code>Kod_Pocztowy</code> (kod, miasto)<br>\nTabela <code>Klient</code> (id, imie, kod_pocztowy)</p>\n<h3 id=\"przykład-normalizacji-krok-po-kroku\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#przykład-normalizacji-krok-po-kroku\">>>></a>Przykład normalizacji krok po kroku</h3>\n<p>Masz tabelę:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>id</th><th>imie</th><th>adres</th><th>miasto</th><th>nazwa_produktu</th><th>cena</th></tr></thead><tbody><tr><td>1</td><td>Jan</td><td>ul. Kwiatowa 1</td><td>Kraków</td><td>Laptop</td><td>3000</td></tr><tr><td>2</td><td>Anna</td><td>ul. Polna 2</td><td>Warszawa</td><td>Telefon</td><td>1000</td></tr></tbody></table>\n<p><strong>Krok 1:</strong> Podziel na Klient i Produkt<br>\nTabela Klient: (id, imie, adres, miasto)<br>\nTabela Produkt: (id, nazwa_produktu, cena)<br>\nTabela Zakup: (id_klienta, id_produktu)</p>\n<hr>\n<h2 id=\"typowe-błędy-projektowe\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#typowe-błędy-projektowe\">>></a>Typowe błędy projektowe</h2>\n<ul>\n<li>Nadmiarowość danych (te same informacje w wielu miejscach)</li>\n<li>Brak kluczy głównych lub obcych</li>\n<li>Zbyt duże tabele (brak podziału na logiczne encje)</li>\n<li>Błędne relacje (np. wiele do wielu bez tabeli pośredniczącej)</li>\n<li>Brak normalizacji</li>\n</ul>\n<h3 id=\"przykłady-błędów-i-ich-skutki\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#przykłady-błędów-i-ich-skutki\">>>></a>Przykłady błędów i ich skutki</h3>\n<ul>\n<li>Powielanie danych: trudność w aktualizacji, różne wersje tej samej informacji.</li>\n<li>Brak kluczy: możliwość wprowadzenia duplikatów lub \"sierot\" w relacjach.</li>\n<li>Brak relacji wiele-do-wielu: niemożność odwzorowania rzeczywistego powiązania.</li>\n</ul>\n<hr>\n<h2 id=\"dobre-praktyki-projektowe\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#dobre-praktyki-projektowe\">>></a>Dobre praktyki projektowe</h2>\n<ul>\n<li>Zawsze stosuj klucze główne i obce.</li>\n<li>Stosuj normalizację do 3NF (chyba, że uzasadnione jest inaczej).</li>\n<li>Czytelnie nazywaj tabele i kolumny (np. klient_id, produkt_id).</li>\n<li>Twórz diagramy ERD przed implementacją.</li>\n<li>Dokumentuj strukturę bazy danych.</li>\n<li>Przemyśl przyszły rozwój bazy (możliwość rozszerzenia).</li>\n</ul>\n<h3 id=\"praktyczne-wskazówki\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#praktyczne-wskazówki\">>>></a>Praktyczne wskazówki</h3>\n<ul>\n<li>Wyobraź sobie przykładowe dane i sprawdź, czy struktura pozwala na ich przechowywanie bez powielania.</li>\n<li>Zastanów się, czy łatwo będzie wyciągnąć potrzebne informacje (np. wszystkich klientów, którzy kupili dany produkt).</li>\n<li>Konsultuj projekt z innymi – świeże spojrzenie może ujawnić ukryte problemy.</li>\n</ul>\n<hr>\n<h2 id=\"praktyczne-zadania\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#praktyczne-zadania\">>></a>Praktyczne zadania</h2>\n<h3 id=\"zadanie-1-identyfikacja-encji-i-relacji\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-1-identyfikacja-encji-i-relacji\">>>></a>Zadanie 1: Identyfikacja encji i relacji</h3>\n<p>W sklepie internetowym mamy: Klienta, Zamówienie, Produkt. Zidentyfikuj encje, ich atrybuty i relacje.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<p>Encje:</p>\n<ul>\n<li>Klient (id, imie, email)</li>\n<li>Zamówienie (id, data, klient_id)</li>\n<li>Produkt (id, nazwa, cena)</li>\n</ul>\n<p>Relacje:</p>\n<ul>\n<li>Klient składa Zamówienie (1:N)</li>\n<li>Zamówienie obejmuje Produkty (N:M, przez tabelę pośredniczącą)</li>\n</ul>\n</details>\n<hr>\n<h3 id=\"zadanie-2-diagram-erd\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-2-diagram-erd\">>>></a>Zadanie 2: Diagram ERD</h3>\n<p>Narysuj (lub opisz tekstowo) diagram ERD dla powyższego sklepu.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code>[Klient] 1---N [Zamówienie] N---M [Produkt]\n</code></pre>\n<p>Tabele:</p>\n<ul>\n<li>Klient (id, imie, email)</li>\n<li>Zamówienie (id, data, klient_id)</li>\n<li>Produkt (id, nazwa, cena)</li>\n<li>Zamowienie_Produkt (zamowienie_id, produkt_id, ilosc)</li>\n</ul>\n</details>\n<hr>\n<h3 id=\"zadanie-3-normalizacja\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-3-normalizacja\">>>></a>Zadanie 3: Normalizacja</h3>\n<p>Masz tabelę:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>id</th><th>imie</th><th>adres</th><th>miasto</th><th>nazwa_produktu</th><th>cena</th></tr></thead><tbody><tr><td>1</td><td>Jan</td><td>ul. Kwiatowa 1</td><td>Kraków</td><td>Laptop</td><td>3000</td></tr><tr><td>2</td><td>Anna</td><td>ul. Polna 2</td><td>Warszawa</td><td>Telefon</td><td>1000</td></tr></tbody></table>\n<p>Podziel ją na znormalizowane tabele.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<p>Tabela Klient: (id, imie, adres, miasto)<br>\nTabela Produkt: (id, nazwa_produktu, cena)<br>\nTabela Zakup: (id_klienta, id_produktu)</p>\n</details>\n<hr>\n<h3 id=\"zadanie-4-rodzaje-relacji\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-4-rodzaje-relacji\">>>></a>Zadanie 4: Rodzaje relacji</h3>\n<p>Opisz, czym różni się relacja jeden-do-wielu od wiele-do-wielu i podaj przykład.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<p>Jeden-do-wielu: jeden klient może mieć wiele zamówień, ale każde zamówienie należy do jednego klienta.<br>\nWiele-do-wielu: jeden student może być zapisany na wiele kursów i jeden kurs może mieć wielu studentów.</p>\n</details>\n<hr>\n<h3 id=\"zadanie-5-przykład-złego-i-dobrego-projektu\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-5-przykład-złego-i-dobrego-projektu\">>>></a>Zadanie 5: Przykład złego i dobrego projektu</h3>\n<p>Podaj przykład tabeli z powielaniem danych oraz jej poprawnej wersji po normalizacji.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<p><strong>Zły projekt:</strong></p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>id</th><th>imie</th><th>produkt1</th><th>produkt2</th><th>produkt3</th></tr></thead><tbody><tr><td>1</td><td>Jan</td><td>Laptop</td><td>Telefon</td><td>Tablet</td></tr></tbody></table>\n<p><strong>Dobry projekt:</strong></p>\n<p>Tabela Klient: (id, imie)<br>\nTabela Produkt: (id, nazwa)<br>\nTabela Klient_Produkt: (id_klienta, id_produktu)</p>\n<p><strong>Wyjaśnienie:</strong><br>\nZamiast wielu kolumn dla produktów, każda relacja klient-produkt to osobny rekord w tabeli pośredniczącej.</p>\n</details>\n<hr>\n<h2 id=\"podsumowanie\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podsumowanie\">>></a>Podsumowanie</h2>\n<p>Projektowanie bazy danych to kluczowy etap w każdym projekcie IT opartym o dane. Przemyślana struktura, normalizacja i dobre praktyki zapewnią łatwość rozwoju, wydajność i bezpieczeństwo systemu. Analiza, przykłady i praktyczne zadania pomagają zrozumieć, jakie decyzje podjąć, by Twoja baza była solidna i przyszłościowa!</p>","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/podstawy-projektowania-baz-danych.md","4 minuty",{"_8":285,"_10":286,"_12":287,"_22":297,"_24":299,"_34":300,"_26":343,"_28":344,"_30":345,"_32":346,"_35":283},"Poczuć się jak w Matrixie, czyli wprowadzenie do terminala","Terminal krok po kroku dla zupełnych początkujących – praktyczne wyjaśnienia, przykłady, najważniejsze komendy, tłumaczenie pojęć i typowe błędy. Naucz się korzystać z terminala bez stresu!",[288,289,290,291,292,293,294,295,296,104],"terminal","wiersz poleceń","shell","bash","podstawy","nauka","początkujący","komendy","wyjaśnienia",[298,288],"wprowadzenie",["D",1751673600000],{"_8":301,"_110":302},"Quiz: Wprowadzenie do terminala",[303,311,319,327,335],{"_113":304,"_115":305,"_121":141,"_123":310},"<p>Czym jest terminal?</p>",[306,307,308,309],"Program do rysowania","Typ pliku","Przeglądarka internetowa","Interfejs tekstowy do komunikacji z systemem operacyjnym","Terminal to tekstowy interfejs do wydawania poleceń systemowi operacyjnemu.",{"_113":312,"_115":313,"_121":122,"_123":318},"<p>Jaką komendą wyświetlisz zawartość katalogu?</p>",[314,315,316,317],"ls","cd","cat","pwd","'ls' wyświetla pliki i katalogi w bieżącym folderze.",{"_113":320,"_115":321,"_121":132,"_123":326},"<p>Czym różni się 'cd ..' od 'cd /'?</p>",[322,323,324,325],"'cd /' cofa o jeden katalog","Nie ma różnicy","'cd ..' cofa o jeden katalog w górę, 'cd /' przechodzi do katalogu głównego","'cd ..' przechodzi do katalogu głównego","'cd ..' to katalog wyżej, 'cd /' to katalog główny systemu.",{"_113":328,"_115":329,"_121":150,"_123":334},"<p>Jak zakończyć proces w terminalu skrótem klawiszowym?</p>",[330,331,332,333],"Ctrl + S","Ctrl + C","Alt + F4","Ctrl + X","Ctrl+C kończy bieżący proces w terminalu.",{"_113":336,"_115":337,"_121":132,"_123":342},"<p>Co robi komenda 'clear'?</p>",[338,339,340,341],"Kończy połączenie z internetem","Zmienia katalog roboczy","Czyści ekran terminala","Usuwa pliki","'clear' czyści wyświetlane linie w terminalu.","78eaefb3-50f4-44c5-ba6b-5e8228e17eec","wprowadzenie-do-terminala","<p>Terminal (czyli wiersz poleceń) to okienko, w którym rozmawiasz z komputerem za pomocą komend tekstowych.<br>\nDla początkujących może wydawać się tajemniczy, ale już po kilku lekcjach zobaczysz, że to bardzo potężne i wygodne narzędzie.<br>\nPoniżej znajdziesz <strong>szczegółowe wyjaśnienia</strong> – każda komenda i pojęcie jest wytłumaczona, a przykłady pokazują, jak działa terminal w praktyce.</p>\n<h2 id=\"spis-treści\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#spis-treści\">>></a>Spis treści</h2>\n<ol>\n<li><a href=\"#czym-jest-terminal-i-shell\">Czym jest terminal i shell?</a></li>\n<li><a href=\"#dlaczego-warto-uczy%C4%87-si%C4%99-terminala\">Dlaczego warto uczyć się terminala?</a></li>\n<li><a href=\"#jak-otworzy%C4%87-terminal-na-swoim-komputerze\">Jak otworzyć terminal na swoim komputerze?</a></li>\n<li><a href=\"#pierwsze-spojrzenie-jak-wygl%C4%85da-terminal\">Pierwsze spojrzenie: jak wygląda terminal?</a></li>\n<li><a href=\"#podstawowe-komendy-terminalowe-z-wyja%C5%9Bnieniami\">Podstawowe komendy terminalowe z wyjaśnieniami</a>\n<ul>\n<li><a href=\"#nawigacja-po-katalogach\">Nawigacja po katalogach</a></li>\n<li><a href=\"#wy%C5%9Bwietlanie-plik%C3%B3w-i-katalog%C3%B3w\">Wyświetlanie plików i katalogów</a></li>\n<li><a href=\"#tworzenie-kopiowanie-i-usuwanie-plik%C3%B3w\">Tworzenie, kopiowanie i usuwanie plików</a></li>\n<li><a href=\"#podgl%C4%85d-zawarto%C5%9Bci-plik%C3%B3w\">Podgląd zawartości plików</a></li>\n<li><a href=\"#skr%C3%B3t-klawiszowe-i-przydatne-triki\">Skróty klawiszowe i przydatne triki</a></li>\n</ul>\n</li>\n<li><a href=\"#jak-czyta%C4%87-b%C5%82%C4%99dy-i-komunikaty-terminala\">Jak czytać błędy i komunikaty terminala</a></li>\n<li><a href=\"#pierwsze-proste-skrypty-%E2%80%93-automatyzacja\">Pierwsze proste skrypty – automatyzacja</a></li>\n<li><a href=\"#najcz%C4%99stsze-b%C5%82%C4%99dy-pocz%C4%85tkuj%C4%85cych-i-jak-ich-unika%C4%87\">Najczęstsze błędy początkujących i jak ich unikać</a></li>\n<li><a href=\"#praktyczne-zadania-%E2%80%93-%C4%87wicz-krok-po-kroku\">Praktyczne zadania – ćwicz krok po kroku</a></li>\n<li><a href=\"#podsumowanie\">Podsumowanie</a></li>\n</ol>\n<hr>\n<h2 id=\"czym-jest-terminal-i-shell\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#czym-jest-terminal-i-shell\">>></a>Czym jest terminal i shell?</h2>\n<p><strong>Terminal</strong> to program (okno), w którym wpisujesz polecenia. Jest jak czat z komputerem, ale zamiast emoji i gifów, używasz prostych komend!</p>\n<p><strong>Shell</strong> (np. Bash, Zsh, PowerShell) to „tłumacz” – komputer rozumie Twoje polecenia dzięki shellowi.</p>\n<p><strong>Przykład:</strong><br>\nWyobraź sobie, że terminal to telefon, a shell to operator, który przekazuje Twoje polecenie komputerowi.</p>\n<hr>\n<h2 id=\"dlaczego-warto-uczyć-się-terminala\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#dlaczego-warto-uczyć-się-terminala\">>></a>Dlaczego warto uczyć się terminala?</h2>\n<ul>\n<li><strong>Szybkość</strong> – wiele rzeczy zrobisz szybciej niż klikając po folderach.</li>\n<li><strong>Automatyzacja</strong> – możesz napisać skrypt, który powtarza czynność za Ciebie.</li>\n<li><strong>Większa kontrola</strong> – dostęp do narzędzi, które nie mają „okienek”.</li>\n<li><strong>Przydatność w pracy programisty, administratora, a nawet zwykłego użytkownika</strong> – terminal przyda się każdemu!</li>\n</ul>\n<hr>\n<h2 id=\"jak-otworzyć-terminal-na-swoim-komputerze\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#jak-otworzyć-terminal-na-swoim-komputerze\">>></a>Jak otworzyć terminal na swoim komputerze?</h2>\n<p>🔹 <strong>Linux / Mac</strong></p>\n<ul>\n<li>Najczęściej skrót klawiszowy: <code>Ctrl + Alt + T</code></li>\n<li>Albo szukaj aplikacji o nazwie „Terminal”.</li>\n</ul>\n<p>🔹 <strong>Windows</strong></p>\n<ul>\n<li>Wyszukaj „cmd”, „PowerShell” lub „Windows Terminal” w menu Start.</li>\n<li>Możesz też zainstalować WSL (Windows Subsystem for Linux), aby mieć terminal podobny do Linuksa.</li>\n</ul>\n<hr>\n<h2 id=\"pierwsze-spojrzenie-jak-wygląda-terminal\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#pierwsze-spojrzenie-jak-wygląda-terminal\">>></a>Pierwsze spojrzenie: jak wygląda terminal?</h2>\n<ul>\n<li>Zobaczysz coś w stylu:\n<pre><code>jakub@pc:~$\n</code></pre>\n</li>\n<li>To jest <strong>prompt</strong> – miejsce, gdzie wpisujesz komendy.</li>\n<li>Miga kursor, czeka na Twój ruch!</li>\n</ul>\n<hr>\n<h2 id=\"podstawowe-komendy-terminalowe-z-wyjaśnieniami\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podstawowe-komendy-terminalowe-z-wyjaśnieniami\">>></a>Podstawowe komendy terminalowe z wyjaśnieniami</h2>\n<p>Każda komenda ma swoją logikę. Poniżej wyjaśnienia i przykłady.</p>\n<h3 id=\"nawigacja-po-katalogach\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#nawigacja-po-katalogach\">>>></a>Nawigacja po katalogach</h3>\n<ul>\n<li><code>pwd</code><br>\n<strong>Co robi?</strong> Pokazuje, w jakim katalogu teraz jesteś (pełna ścieżka).<br>\n<strong>Przykład:</strong>\n<pre><code>/home/jakub/Dokumenty\n</code></pre>\n</li>\n<li><code>ls</code><br>\n<strong>Co robi?</strong> Wyświetla listę plików i folderów w bieżącym katalogu.<br>\n<strong>Przykład:</strong>\n<pre><code>ls\n</code></pre>\n</li>\n<li><code>cd NAZWA_KATALOGU</code><br>\n<strong>Co robi?</strong> Przechodzi do wskazanego katalogu.<br>\n<strong>Przykład:</strong>\n<pre><code>cd Dokumenty\n</code></pre>\nTeraz jesteś w katalogu „Dokumenty”.</li>\n<li><code>cd ..</code><br>\n<strong>Co robi?</strong> Przechodzi o jeden katalog wyżej (do „rodzica”).<br>\n<strong>Przykład:</strong>\n<pre><code>cd ..\n</code></pre>\n</li>\n<li><code>cd /</code><br>\n<strong>Co robi?</strong> Przechodzi do głównego katalogu systemu (root).</li>\n</ul>\n<hr>\n<h3 id=\"wyświetlanie-plików-i-katalogów\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#wyświetlanie-plików-i-katalogów\">>>></a>Wyświetlanie plików i katalogów</h3>\n<ul>\n<li><code>ls -l</code><br>\n<strong>Co robi?</strong> Wyświetla pliki z dodatkowymi informacjami (rozmiar, data, uprawnienia).</li>\n<li><code>ls -a</code><br>\n<strong>Co robi?</strong> Pokazuje również pliki ukryte (takie, które zaczynają się od kropki).</li>\n<li><code>tree</code><br>\n<strong>Co robi?</strong> Pokazuje strukturę katalogów w formie „drzewka”.<br>\n<em>(Może wymagać instalacji: <code>sudo apt install tree</code>)</em></li>\n</ul>\n<hr>\n<h3 id=\"tworzenie-kopiowanie-i-usuwanie-plików\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#tworzenie-kopiowanie-i-usuwanie-plików\">>>></a>Tworzenie, kopiowanie i usuwanie plików</h3>\n<ul>\n<li><code>touch NAZWA.txt</code><br>\n<strong>Co robi?</strong> Tworzy nowy, pusty plik tekstowy.</li>\n<li><code>mkdir NAZWA_FOLDERU</code><br>\n<strong>Co robi?</strong> Tworzy nowy folder.</li>\n<li><code>cp plik.txt kopia.txt</code><br>\n<strong>Co robi?</strong> Kopiuje plik.</li>\n<li><code>mv plik.txt nowa_nazwa.txt</code><br>\n<strong>Co robi?</strong> Zmienia nazwę pliku lub przenosi go.</li>\n<li><code>rm plik.txt</code><br>\n<strong>Co robi?</strong> Usuwa plik (na zawsze!).<br>\n❗️Uwaga: nie trafia do kosza – usuwaj ostrożnie!</li>\n<li><code>rm -r folder</code><br>\n<strong>Co robi?</strong> Usuwa cały folder i wszystko, co jest w środku.</li>\n</ul>\n<hr>\n<h3 id=\"podgląd-zawartości-plików\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podgląd-zawartości-plików\">>>></a>Podgląd zawartości plików</h3>\n<ul>\n<li><code>cat plik.txt</code><br>\n<strong>Co robi?</strong> Wyświetla cały plik na ekranie.</li>\n<li><code>less plik.txt</code><br>\n<strong>Co robi?</strong> Umożliwia wygodne przeglądanie długiego pliku (strzałki, <code>q</code> by wyjść).</li>\n<li><code>head -n 5 plik.txt</code><br>\n<strong>Co robi?</strong> Pokazuje pierwsze 5 linii pliku.</li>\n<li><code>tail -n 5 plik.txt</code><br>\n<strong>Co robi?</strong> Pokazuje ostatnie 5 linii pliku.</li>\n</ul>\n<hr>\n<h3 id=\"skrót-klawiszowe-i-przydatne-triki\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#skrót-klawiszowe-i-przydatne-triki\">>>></a>Skrót klawiszowe i przydatne triki</h3>\n<ul>\n<li><code>Tab</code><br>\n<strong>Co robi?</strong> Autouzupełnia nazwę pliku lub folderu (bardzo pomaga!).</li>\n<li><code>Ctrl + C</code><br>\n<strong>Co robi?</strong> Przerywa działanie aktualnej komendy (np. jeśli coś się zawiesi).</li>\n<li><code>Ctrl + L</code><br>\n<strong>Co robi?</strong> Czyści ekran terminala (to samo co <code>clear</code>).</li>\n<li><code>Strzałki w górę/dół</code><br>\n<strong>Co robi?</strong> Poruszasz się po historii wpisywanych komend.</li>\n<li><code>Ctrl + A</code><br>\n<strong>Co robi?</strong> Skaczesz na początek linii.</li>\n<li><code>Ctrl + E</code><br>\n<strong>Co robi?</strong> Skaczesz na koniec linii.</li>\n</ul>\n<hr>\n<h2 id=\"jak-czytać-błędy-i-komunikaty-terminala\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#jak-czytać-błędy-i-komunikaty-terminala\">>></a>Jak czytać błędy i komunikaty terminala</h2>\n<p>Nie bój się błędów!<br>\nTerminal grzecznie powie, co poszło nie tak:</p>\n<ul>\n<li><strong>\"No such file or directory\"</strong> – nie ma takiego pliku/katalogu. Sprawdź literówki!</li>\n<li><strong>\"Permission denied\"</strong> – brak uprawnień. Może spróbuj z <code>sudo</code> (na własną odpowiedzialność)?</li>\n<li><strong>\"Command not found\"</strong> – nie ma takiej komendy. Może się pomyliłeś?</li>\n<li><strong>\"Is a directory\"</strong> – próbujesz np. wyświetlić katalog jak plik, co nie ma sensu.</li>\n</ul>\n<hr>\n<h2 id=\"pierwsze-proste-skrypty--automatyzacja\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#pierwsze-proste-skrypty--automatyzacja\">>></a>Pierwsze proste skrypty – automatyzacja</h2>\n<p>Skrypt to lista poleceń, które komputer wykona jedno po drugim.</p>\n<p><strong>Przykład prostego skryptu:</strong></p>\n<p><strong>powitanie.sh</strong></p>\n<pre><code class=\"hljs language-bash\"><span class=\"hljs-meta\">#!/bin/bash</span>\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Cześć! To Twój pierwszy skrypt.\"</span>\n</code></pre>\n<p>Jak uruchomić:</p>\n<pre><code class=\"hljs language-bash\"><span class=\"hljs-built_in\">chmod</span> +x powitanie.sh    <span class=\"hljs-comment\"># nadaje uprawnienie do uruchamiania</span>\n./powitanie.sh           <span class=\"hljs-comment\"># uruchamia skrypt</span>\n</code></pre>\n<p><em>To świetne do automatycznego kopiowania plików, porządkowania katalogów i wielu innych rzeczy!</em></p>\n<hr>\n<h2 id=\"najczęstsze-błędy-początkujących-i-jak-ich-unikać\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#najczęstsze-błędy-początkujących-i-jak-ich-unikać\">>></a>Najczęstsze błędy początkujących i jak ich unikać</h2>\n<ul>\n<li><strong>Literówki</strong> – sprawdzaj dokładnie, co wpisujesz.</li>\n<li><strong>Nie ten katalog</strong> – zanim coś zrobisz, sprawdź gdzie jesteś (<code>pwd</code>).</li>\n<li><strong>Uprawnienia</strong> – nie wszystko można robić bez „superpraw” (<code>sudo</code>).</li>\n<li><strong>Usuwanie plików</strong> – ostrożnie z <code>rm</code>! Nie ma kosza.</li>\n<li>**Mylenie / i ** – na Linux/Mac zawsze używaj „/” w ścieżkach.</li>\n</ul>\n<hr>\n<h2 id=\"praktyczne-zadania--ćwicz-krok-po-kroku\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#praktyczne-zadania--ćwicz-krok-po-kroku\">>></a>Praktyczne zadania – ćwicz krok po kroku</h2>\n<h3 id=\"zadanie-1-wyświetl-zawartość-swojego-katalogu-domowego-utwórz-folder-przejdź-do-niego-i-utwórz-pusty-plik\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-1-wyświetl-zawartość-swojego-katalogu-domowego-utwórz-folder-przejdź-do-niego-i-utwórz-pusty-plik\">>>></a>Zadanie 1: Wyświetl zawartość swojego katalogu domowego, utwórz folder, przejdź do niego i utwórz pusty plik.</h3>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<ol>\n<li><code>ls ~</code> – pokazuje, co masz w katalogu domowym.</li>\n<li><code>mkdir ~/nauka_terminala</code> – tworzy folder o nazwie „nauka_terminala”.</li>\n<li><code>cd ~/nauka_terminala</code> – wchodzi do tego folderu.</li>\n<li><code>touch pierwszy_plik.txt</code> – tworzy pusty plik.</li>\n<li><code>ls</code> – sprawdza, czy plik się pojawił.</li>\n</ol>\n</details>\n<hr>\n<h3 id=\"zadanie-2-wyświetl-5-pierwszych-linii-pliku-systemowego-np-etcpasswd\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-2-wyświetl-5-pierwszych-linii-pliku-systemowego-np-etcpasswd\">>>></a>Zadanie 2: Wyświetl 5 pierwszych linii pliku systemowego (np. <code>/etc/passwd</code>).</h3>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<p><code>head -n 5 /etc/passwd</code><br>\n<em>(„head” pokazuje początek pliku, „-n 5” – ile linii)</em></p>\n</details>\n<hr>\n<h3 id=\"zadanie-3-skopiuj-plik-a-potem-zmień-jego-nazwę\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-3-skopiuj-plik-a-potem-zmień-jego-nazwę\">>>></a>Zadanie 3: Skopiuj plik, a potem zmień jego nazwę.</h3>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<ol>\n<li><code>cp pierwszy_plik.txt kopia.txt</code> – tworzy kopię pliku.</li>\n<li><code>mv kopia.txt nowa_nazwa.txt</code> – zmienia nazwę kopii.</li>\n<li><code>ls</code> – sprawdza, czy oba pliki są w folderze.</li>\n</ol>\n</details>\n<hr>\n<h3 id=\"zadanie-4-napisz-i-uruchom-prosty-skrypt-powitalny\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-4-napisz-i-uruchom-prosty-skrypt-powitalny\">>>></a>Zadanie 4: Napisz i uruchom prosty skrypt powitalny.</h3>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<ol>\n<li>Otwórz edytor (np. <code>nano powitanie.sh</code>).</li>\n<li>Wklej:\n<pre><code class=\"hljs language-bash\"><span class=\"hljs-meta\">#!/bin/bash</span>\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Witaj w terminalu!\"</span>\n</code></pre>\n</li>\n<li>Zapisz i wyjdź (<code>Ctrl+O</code>, potem <code>Ctrl+X</code> w nano).</li>\n<li>Nadaj uprawnienia:<br>\n<code>chmod +x powitanie.sh</code></li>\n<li>Uruchom:<br>\n<code>./powitanie.sh</code></li>\n</ol>\n</details>\n<hr>\n<h2 id=\"podsumowanie\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podsumowanie\">>></a>Podsumowanie</h2>\n<p>Terminal to nie czarna magia – to bardzo logiczne narzędzie, które pozwala szybciej i wygodniej korzystać z komputera.<br>\nKrok po kroku, z wyjaśnieniami i praktyką, każdy może nauczyć się podstaw.<br>\nNie bój się eksperymentować – komputer nie wybuchnie, a Ty zyskasz nową supermoc! 💪</p>","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/wprowadzenie-do-terminala.md",{"_8":348,"_10":349,"_12":350,"_22":357,"_24":358,"_34":359,"_26":401,"_28":402,"_30":403,"_32":404,"_35":164},"Zaawansowane zapytania SQL","Poznaj techniki budowania bardziej złożonych zapytań SQL. Naucz się korzystać z JOIN, agregacji, podzapytań, funkcji i zaawansowanych operacji na danych. Praktyczny przewodnik po zaawansowanym SQL z przykładami i szczegółowymi wyjaśnieniami.",[175,351,352,353,354,355,356,296,103,104],"join","group by","having","podzapytania","agregacja","zaawansowane zapytania",[175,106],["D",1751673600000],{"_8":360,"_110":361},"Quiz: Zaawansowane zapytania SQL",[362,370,377,385,393],{"_113":363,"_115":364,"_121":132,"_123":369},"<p>Do czego służy polecenie JOIN?</p>",[365,366,367,368],"Do usuwania danych","Do sortowania wyników","Do pobierania danych z kilku tabel powiązanych relacjami","Do tworzenia nowych tabel","JOIN pozwala łączyć dane z kilku tabel na podstawie relacji.",{"_113":371,"_115":372,"_121":122,"_123":376},"<p>Czym różni się INNER JOIN od LEFT JOIN?</p>",[373,374,323,375],"INNER JOIN zwraca tylko pasujące rekordy, LEFT JOIN zwraca też te bez dopasowania z lewej tabeli","LEFT JOIN zawsze łączy wszystkie rekordy obu tabel","INNER JOIN sortuje dane","INNER JOIN zwraca tylko pasujące rekordy, LEFT JOIN także te z lewej tabeli bez dopasowania.",{"_113":378,"_115":379,"_121":122,"_123":384},"<p>Jakie polecenie agreguje dane według zadanej kolumny?</p>",[380,381,382,383],"GROUP BY","UNION","ORDER BY","JOIN","GROUP BY grupuje dane według wybranej kolumny.",{"_113":386,"_115":387,"_121":132,"_123":392},"<p>Czym jest podzapytanie (subquery)?</p>",[388,389,390,391],"Kolejną tabelą","Funkcją matematyczną","Zapytaniem wewnątrz innego zapytania","Sortowaniem wyników","Podzapytanie to zapytanie zagnieżdżone w innym zapytaniu SQL.",{"_113":394,"_115":395,"_121":150,"_123":400},"<p>Do czego służy HAVING?</p>",[396,397,398,399],"Do filtrowania całej tabeli","Do filtrowania grup po agregacji (po GROUP BY)","Do zmiany struktury tabeli","Do łączenia tabel","HAVING filtruje wyniki po agregacji i grupowaniu.","174f4db0-9099-4e83-86c0-78973a0bdd64","zaawansowane-zapytania-sql","<p>SQL pozwala nie tylko pobierać i modyfikować proste dane, ale również realizować bardzo złożone analizy, łączyć wiele tabel, grupować, sumować i filtrować rekordy na różne sposoby. Poznaj zaawansowane techniki, które otworzą przed Tobą nowe możliwości!<br>\nW tym kursie znajdziesz nie tylko przykłady, ale także szczegółowe wyjaśnienia, co robi każda komenda i jak działa składnia.</p>\n<h2 id=\"spis-treści\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#spis-treści\">>></a>Spis treści</h2>\n<ol>\n<li><a href=\"#%C5%82%C4%85czenie-tabel-join\">Łączenie tabel (JOIN)</a>\n<ul>\n<li><a href=\"#czym-jest-join-i-po-co-go-u%C5%BCywa%C4%87\">Czym jest JOIN i po co go używać?</a></li>\n<li><a href=\"#inner-join\">INNER JOIN</a></li>\n<li><a href=\"#left-join-right-join-full-join\">LEFT JOIN, RIGHT JOIN, FULL JOIN</a></li>\n<li><a href=\"#samoz%C5%82%C4%85czenia-self-join\">Samozłączenia (SELF JOIN)</a></li>\n</ul>\n</li>\n<li><a href=\"#agregacje-i-grupowanie-danych\">Agregacje i grupowanie danych</a>\n<ul>\n<li><a href=\"#group-by\">GROUP BY</a></li>\n<li><a href=\"#funkcje-agreguj%C4%85ce\">Funkcje agregujące</a></li>\n<li><a href=\"#having\">HAVING</a></li>\n</ul>\n</li>\n<li><a href=\"#podzapytania-subqueries\">Podzapytania (subqueries)</a>\n<ul>\n<li><a href=\"#podzapytania-w-select\">Podzapytania w SELECT</a></li>\n<li><a href=\"#podzapytania-w-where-i-having\">Podzapytania w WHERE i HAVING</a></li>\n<li><a href=\"#podzapytania-skorelowane\">Podzapytania skorelowane</a></li>\n</ul>\n</li>\n<li><a href=\"#operacje-na-zbiorach-union-intersect-except\">Operacje na zbiorach (UNION, INTERSECT, EXCEPT)</a></li>\n<li><a href=\"#funkcje-wbudowane-w-sql\">Funkcje wbudowane w SQL</a>\n<ul>\n<li><a href=\"#funkcje-tekstowe\">Funkcje tekstowe</a></li>\n<li><a href=\"#funkcje-daty-i-czasu\">Funkcje daty i czasu</a></li>\n<li><a href=\"#funkcje-warunkowe\">Funkcje warunkowe</a></li>\n</ul>\n</li>\n<li><a href=\"#widoki-view-i-ich-zastosowania\">Widoki (VIEW) i ich zastosowania</a></li>\n<li><a href=\"#praktyczne-zadania\">Praktyczne zadania</a></li>\n<li><a href=\"#podsumowanie\">Podsumowanie</a></li>\n</ol>\n<hr>\n<h2 id=\"łączenie-tabel-join\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#łączenie-tabel-join\">>></a>Łączenie tabel (JOIN)</h2>\n<h3 id=\"czym-jest-join-i-po-co-go-używać\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#czym-jest-join-i-po-co-go-używać\">>>></a>Czym jest JOIN i po co go używać?</h3>\n<p>JOIN pozwala połączyć dane z kilku tabel w jednym zapytaniu – jest to niezbędne, jeśli chcesz łączyć informacje rozdzielone na logiczne części (np. dane klienta i jego zamówienia).<br>\nBez JOIN musiałbyś pisać wiele zapytań lub duplikować dane w jednej tabeli.</p>\n<hr>\n<h3 id=\"inner-join\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#inner-join\">>>></a>INNER JOIN</h3>\n<p><strong>Opis:</strong><br>\nZwraca tylko te rekordy, które mają dopasowanie w obu łączonych tabelach (czyli tylko pasujące pary).</p>\n<p><strong>Składnia:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> tabela1.kolumnaA, tabela2.kolumnaB\n<span class=\"hljs-keyword\">FROM</span> tabela1\n<span class=\"hljs-keyword\">INNER</span> <span class=\"hljs-keyword\">JOIN</span> tabela2 <span class=\"hljs-keyword\">ON</span> tabela1.klucz <span class=\"hljs-operator\">=</span> tabela2.klucz_obcy;\n</code></pre>\n<ul>\n<li><code>INNER JOIN</code> – typ złączenia.</li>\n<li><code>ON tabela1.klucz = tabela2.klucz_obcy</code> – warunek, określający, które rekordy mają być połączone.</li>\n</ul>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> Klient.imie, Zamowienie.data\n<span class=\"hljs-keyword\">FROM</span> Klient\n<span class=\"hljs-keyword\">INNER</span> <span class=\"hljs-keyword\">JOIN</span> Zamowienie <span class=\"hljs-keyword\">ON</span> Klient.id <span class=\"hljs-operator\">=</span> Zamowienie.klient_id;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nPobierz imię klienta oraz datę jego zamówienia. Rekord zostanie zwrócony tylko, jeśli klient ma zamówienia.</p>\n<hr>\n<h3 id=\"left-join-right-join-full-join\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#left-join-right-join-full-join\">>>></a>LEFT JOIN, RIGHT JOIN, FULL JOIN</h3>\n<h4 id=\"left-join\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#left-join\">>>>></a>LEFT JOIN</h4>\n<p><strong>Opis:</strong><br>\nZwraca wszystkie rekordy z lewej tabeli oraz dopasowania z prawej, a jeśli ich nie ma – wstawia NULL.</p>\n<p><strong>Składnia:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> Klient.imie, Zamowienie.data\n<span class=\"hljs-keyword\">FROM</span> Klient\n<span class=\"hljs-keyword\">LEFT</span> <span class=\"hljs-keyword\">JOIN</span> Zamowienie <span class=\"hljs-keyword\">ON</span> Klient.id <span class=\"hljs-operator\">=</span> Zamowienie.klient_id;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nZwraca wszystkich klientów, niezależnie czy mają zamówienia. Jeśli nie mają, w kolumnie <code>data</code> pojawi się NULL.</p>\n<h4 id=\"right-join\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#right-join\">>>>></a>RIGHT JOIN</h4>\n<p><strong>Opis:</strong><br>\nDziała jak LEFT JOIN, ale odwrotnie – zwraca wszystkie rekordy z prawej tabeli.</p>\n<h4 id=\"full-join\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#full-join\">>>>></a>FULL JOIN</h4>\n<p><strong>Opis:</strong><br>\nZwraca wszystkie rekordy z obu tabel, dopasowane lub nie.</p>\n<p><strong>Przykład porównania wyników:</strong></p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Klient.imie</th><th>Zamowienie.data</th></tr></thead><tbody><tr><td>Jan</td><td>2025-01-01</td></tr><tr><td>Anna</td><td>NULL</td></tr></tbody></table>\n<hr>\n<h3 id=\"samozłączenia-self-join\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#samozłączenia-self-join\">>>></a>Samozłączenia (SELF JOIN)</h3>\n<p>Czasem trzeba połączyć tabelę samą z sobą (np. struktura przełożonych i pracowników).</p>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> A.imie <span class=\"hljs-keyword\">AS</span> pracownik, B.imie <span class=\"hljs-keyword\">AS</span> przelozony\n<span class=\"hljs-keyword\">FROM</span> Pracownik A\n<span class=\"hljs-keyword\">LEFT</span> <span class=\"hljs-keyword\">JOIN</span> Pracownik B <span class=\"hljs-keyword\">ON</span> A.przelozony_id <span class=\"hljs-operator\">=</span> B.id;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nKażdy pracownik ma przełożonego – łączymy tabelę Pracownik z samą sobą, by uzyskać imię szefa.</p>\n<hr>\n<h2 id=\"agregacje-i-grupowanie-danych\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#agregacje-i-grupowanie-danych\">>></a>Agregacje i grupowanie danych</h2>\n<h3 id=\"group-by\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#group-by\">>>></a>GROUP BY</h3>\n<p><strong>Opis:</strong><br>\nGROUP BY służy do grupowania rekordów wg wskazanej kolumny, np. pokazania liczby zamówień dla każdego klienta.</p>\n<p><strong>Składnia:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> kolumna_grupujaca, funkcja_agregujaca(kolumna)\n<span class=\"hljs-keyword\">FROM</span> tabela\n<span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> kolumna_grupujaca;\n</code></pre>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> miasto, <span class=\"hljs-built_in\">COUNT</span>(<span class=\"hljs-operator\">*</span>) <span class=\"hljs-keyword\">AS</span> liczba_klientow\n<span class=\"hljs-keyword\">FROM</span> Klient\n<span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> miasto;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nZlicz ilu klientów pochodzi z każdego miasta.</p>\n<hr>\n<h3 id=\"funkcje-agregujące\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#funkcje-agregujące\">>>></a>Funkcje agregujące</h3>\n<ul>\n<li><code>COUNT(*)</code> – zlicza wszystkie rekordy w grupie.</li>\n<li><code>SUM(kolumna)</code> – suma wartości z danej kolumny.</li>\n<li><code>AVG(kolumna)</code> – średnia wartość.</li>\n<li><code>MIN(kolumna)</code> / <code>MAX(kolumna)</code> – najmniejsza/największa wartość.</li>\n</ul>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> produkt_id, <span class=\"hljs-built_in\">SUM</span>(ilosc) <span class=\"hljs-keyword\">AS</span> sprzedano\n<span class=\"hljs-keyword\">FROM</span> Zamowienie_Produkt\n<span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> produkt_id;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nIle sztuk każdego produktu sprzedano w sumie?</p>\n<hr>\n<h3 id=\"having\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#having\">>>></a>HAVING</h3>\n<p><strong>Opis:</strong><br>\nHAVING filtruje wyniki po agregacji (po GROUP BY), czego nie można zrobić za pomocą WHERE.</p>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> miasto, <span class=\"hljs-built_in\">COUNT</span>(<span class=\"hljs-operator\">*</span>) <span class=\"hljs-keyword\">AS</span> liczba\n<span class=\"hljs-keyword\">FROM</span> Klient\n<span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> miasto\n<span class=\"hljs-keyword\">HAVING</span> <span class=\"hljs-built_in\">COUNT</span>(<span class=\"hljs-operator\">*</span>) <span class=\"hljs-operator\">></span> <span class=\"hljs-number\">5</span>;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nWyświetl tylko te miasta, w których liczba klientów jest większa niż 5.</p>\n<hr>\n<h2 id=\"podzapytania-subqueries\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podzapytania-subqueries\">>></a>Podzapytania (subqueries)</h2>\n<p>Podzapytanie to zapytanie SQL „wewnątrz” innego zapytania.</p>\n<hr>\n<h3 id=\"podzapytania-w-select\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podzapytania-w-select\">>>></a>Podzapytania w SELECT</h3>\n<p><strong>Opis:</strong><br>\nMożesz użyć podzapytania, by wyliczyć wartość dla każdego rekordu.</p>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> imie,\n  (<span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">COUNT</span>(<span class=\"hljs-operator\">*</span>) <span class=\"hljs-keyword\">FROM</span> Zamowienie <span class=\"hljs-keyword\">WHERE</span> Zamowienie.klient_id <span class=\"hljs-operator\">=</span> Klient.id) <span class=\"hljs-keyword\">AS</span> liczba_zamowien\n<span class=\"hljs-keyword\">FROM</span> Klient;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nPobierz imię klienta i liczbę jego zamówień – dla każdego klienta osobno liczymy zamówienia.</p>\n<hr>\n<h3 id=\"podzapytania-w-where-i-having\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podzapytania-w-where-i-having\">>>></a>Podzapytania w WHERE i HAVING</h3>\n<p><strong>Opis:</strong><br>\nPodzapytania mogą służyć jako warunek wyboru rekordów.</p>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> imie <span class=\"hljs-keyword\">FROM</span> Klient\n<span class=\"hljs-keyword\">WHERE</span> id <span class=\"hljs-keyword\">IN</span> (<span class=\"hljs-keyword\">SELECT</span> klient_id <span class=\"hljs-keyword\">FROM</span> Zamowienie <span class=\"hljs-keyword\">WHERE</span> data <span class=\"hljs-operator\">></span> <span class=\"hljs-string\">'2025-01-01'</span>);\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nWyświetl tylko klientów, którzy złożyli zamówienie po 1 stycznia 2025.</p>\n<hr>\n<h3 id=\"podzapytania-skorelowane\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podzapytania-skorelowane\">>>></a>Podzapytania skorelowane</h3>\n<p><strong>Opis:</strong><br>\nPodzapytanie odwołuje się do wartości z zewnętrznego zapytania.</p>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> imie\n<span class=\"hljs-keyword\">FROM</span> Klient k\n<span class=\"hljs-keyword\">WHERE</span> <span class=\"hljs-keyword\">EXISTS</span> (\n  <span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">FROM</span> Zamowienie z <span class=\"hljs-keyword\">WHERE</span> z.klient_id <span class=\"hljs-operator\">=</span> k.id <span class=\"hljs-keyword\">AND</span> z.data <span class=\"hljs-operator\">></span> <span class=\"hljs-string\">'2025-01-01'</span>\n);\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nSprawdzamy dla każdego klienta, czy istnieje zamówienie po podanej dacie.</p>\n<hr>\n<h2 id=\"operacje-na-zbiorach-union-intersect-except\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#operacje-na-zbiorach-union-intersect-except\">>></a>Operacje na zbiorach (UNION, INTERSECT, EXCEPT)</h2>\n<ul>\n<li><strong>UNION:</strong> łączy wyniki wielu zapytań, eliminując duplikaty.</li>\n<li><strong>UNION ALL:</strong> jak UNION, ale zachowuje duplikaty.</li>\n<li><strong>INTERSECT:</strong> zwraca wspólne rekordy.</li>\n<li><strong>EXCEPT:</strong> zwraca rekordy z pierwszego zapytania, których nie ma w drugim.</li>\n</ul>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> imie <span class=\"hljs-keyword\">FROM</span> Klient\n<span class=\"hljs-keyword\">UNION</span>\n<span class=\"hljs-keyword\">SELECT</span> imie <span class=\"hljs-keyword\">FROM</span> Pracownik;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nPobierz listę wszystkich imion – zarówno klientów, jak i pracowników (bez powtórzeń).</p>\n<hr>\n<h2 id=\"funkcje-wbudowane-w-sql\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#funkcje-wbudowane-w-sql\">>></a>Funkcje wbudowane w SQL</h2>\n<h3 id=\"funkcje-tekstowe\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#funkcje-tekstowe\">>>></a>Funkcje tekstowe</h3>\n<ul>\n<li><code>LOWER(tekst)</code> – zamienia tekst na małe litery.</li>\n<li><code>UPPER(tekst)</code> – na wielkie litery.</li>\n<li><code>CONCAT(a, b)</code> – łączy teksty.</li>\n<li><code>SUBSTRING(tekst, start, długość)</code> – wycina fragment tekstu.</li>\n<li><code>LENGTH(tekst)</code> – długość tekstu.</li>\n</ul>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> CONCAT(imie, <span class=\"hljs-string\">' '</span>, nazwisko) <span class=\"hljs-keyword\">AS</span> pelne_imie <span class=\"hljs-keyword\">FROM</span> Klient;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nTworzy pełne imię i nazwisko klienta.</p>\n<hr>\n<h3 id=\"funkcje-daty-i-czasu\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#funkcje-daty-i-czasu\">>>></a>Funkcje daty i czasu</h3>\n<ul>\n<li><code>NOW()</code> – aktualna data i czas.</li>\n<li><code>DATE()</code> – wydobywa datę z pola daty/czasu.</li>\n<li><code>YEAR(data)</code> – wyciąga rok z daty.</li>\n</ul>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> imie, <span class=\"hljs-keyword\">YEAR</span>(data_urodzenia) <span class=\"hljs-keyword\">AS</span> rok_urodzenia <span class=\"hljs-keyword\">FROM</span> Klient;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nWyświetla imię klienta i rok jego urodzenia.</p>\n<hr>\n<h3 id=\"funkcje-warunkowe\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#funkcje-warunkowe\">>>></a>Funkcje warunkowe</h3>\n<ul>\n<li><code>CASE WHEN ... THEN ... ELSE ... END</code> – pozwala warunkowo zmieniać wartości.</li>\n</ul>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> imie,\n  <span class=\"hljs-keyword\">CASE</span>\n    <span class=\"hljs-keyword\">WHEN</span> wiek <span class=\"hljs-operator\">&#x3C;</span> <span class=\"hljs-number\">18</span> <span class=\"hljs-keyword\">THEN</span> <span class=\"hljs-string\">'niepełnoletni'</span>\n    <span class=\"hljs-keyword\">ELSE</span> <span class=\"hljs-string\">'pełnoletni'</span>\n  <span class=\"hljs-keyword\">END</span> <span class=\"hljs-keyword\">AS</span> status\n<span class=\"hljs-keyword\">FROM</span> Klient;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nDla każdego klienta określa status na podstawie wieku.</p>\n<hr>\n<h2 id=\"widoki-view-i-ich-zastosowania\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#widoki-view-i-ich-zastosowania\">>></a>Widoki (VIEW) i ich zastosowania</h2>\n<p><strong>Opis:</strong><br>\nWidok (VIEW) to „wirtualna tabela” będąca wynikiem zapytania. Widoki upraszczają kod, mogą ukrywać złożoność i zabezpieczać dane.</p>\n<p><strong>Tworzenie widoku:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">VIEW</span> Klienci_aktywni <span class=\"hljs-keyword\">AS</span>\n<span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> Klient <span class=\"hljs-keyword\">WHERE</span> aktywny <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span>;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nTworzymy widok z aktywnymi klientami. Potem używamy go jak zwykłej tabeli:</p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> Klienci_aktywni;\n</code></pre>\n<hr>\n<h2 id=\"praktyczne-zadania\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#praktyczne-zadania\">>></a>Praktyczne zadania</h2>\n<h3 id=\"zadanie-1-złączenia\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-1-złączenia\">>>></a>Zadanie 1: Złączenia</h3>\n<p>Pobierz imię klienta oraz datę każdego jego zamówienia.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> Klient.imie, Zamowienie.data\n<span class=\"hljs-keyword\">FROM</span> Klient\n<span class=\"hljs-keyword\">INNER</span> <span class=\"hljs-keyword\">JOIN</span> Zamowienie <span class=\"hljs-keyword\">ON</span> Klient.id <span class=\"hljs-operator\">=</span> Zamowienie.klient_id;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nŁączymy tabelę Klient z Zamówienie po kluczu głównym Klient.id i kluczu obcym Zamowienie.klient_id.</p>\n</details>\n<hr>\n<h3 id=\"zadanie-2-agregacja\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-2-agregacja\">>>></a>Zadanie 2: Agregacja</h3>\n<p>Wyświetl liczbę zamówień złożonych przez każdego klienta.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> Klient.imie, <span class=\"hljs-built_in\">COUNT</span>(Zamowienie.id) <span class=\"hljs-keyword\">AS</span> liczba_zamowien\n<span class=\"hljs-keyword\">FROM</span> Klient\n<span class=\"hljs-keyword\">LEFT</span> <span class=\"hljs-keyword\">JOIN</span> Zamowienie <span class=\"hljs-keyword\">ON</span> Klient.id <span class=\"hljs-operator\">=</span> Zamowienie.klient_id\n<span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> Klient.imie;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nŁączymy tabele i grupujemy po imieniu klienta. LEFT JOIN pozwala pokazać także tych, którzy nie mają zamówień (liczba_zamowien = 0).</p>\n</details>\n<hr>\n<h3 id=\"zadanie-3-podzapytanie\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-3-podzapytanie\">>>></a>Zadanie 3: Podzapytanie</h3>\n<p>Wyświetl produkty zamówione przez klientów z miasta \"Warszawa\".</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> Produkt.nazwa\n<span class=\"hljs-keyword\">FROM</span> Produkt\n<span class=\"hljs-keyword\">INNER</span> <span class=\"hljs-keyword\">JOIN</span> Zamowienie_Produkt <span class=\"hljs-keyword\">ON</span> Produkt.id <span class=\"hljs-operator\">=</span> Zamowienie_Produkt.produkt_id\n<span class=\"hljs-keyword\">INNER</span> <span class=\"hljs-keyword\">JOIN</span> Zamowienie <span class=\"hljs-keyword\">ON</span> Zamowienie_Produkt.zamowienie_id <span class=\"hljs-operator\">=</span> Zamowienie.id\n<span class=\"hljs-keyword\">INNER</span> <span class=\"hljs-keyword\">JOIN</span> Klient <span class=\"hljs-keyword\">ON</span> Zamowienie.klient_id <span class=\"hljs-operator\">=</span> Klient.id\n<span class=\"hljs-keyword\">WHERE</span> Klient.miasto <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">'Warszawa'</span>;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nŁączymy cztery tabele, by uzyskać produkty z zamówień klientów z Warszawy.</p>\n</details>\n<hr>\n<h3 id=\"zadanie-4-operacje-na-zbiorach\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-4-operacje-na-zbiorach\">>>></a>Zadanie 4: Operacje na zbiorach</h3>\n<p>Wyświetl imiona osób będących zarówno klientami, jak i pracownikami.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> imie <span class=\"hljs-keyword\">FROM</span> Klient\n<span class=\"hljs-keyword\">INTERSECT</span>\n<span class=\"hljs-keyword\">SELECT</span> imie <span class=\"hljs-keyword\">FROM</span> Pracownik;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nINTERSECT zwraca tylko te imiona, które są jednocześnie w obu tabelach.</p>\n</details>\n<hr>\n<h3 id=\"zadanie-5-widoki\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-5-widoki\">>>></a>Zadanie 5: Widoki</h3>\n<p>Stwórz widok prezentujący tylko klientów, którzy mają więcej niż 2 zamówienia.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">VIEW</span> Klienci_czesto_zamawiajacy <span class=\"hljs-keyword\">AS</span>\n<span class=\"hljs-keyword\">SELECT</span> Klient.id, Klient.imie\n<span class=\"hljs-keyword\">FROM</span> Klient\n<span class=\"hljs-keyword\">JOIN</span> Zamowienie <span class=\"hljs-keyword\">ON</span> Klient.id <span class=\"hljs-operator\">=</span> Zamowienie.klient_id\n<span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> Klient.id, Klient.imie\n<span class=\"hljs-keyword\">HAVING</span> <span class=\"hljs-built_in\">COUNT</span>(Zamowienie.id) <span class=\"hljs-operator\">></span> <span class=\"hljs-number\">2</span>;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nWidok zawiera tylko tych klientów, którzy mają więcej niż dwa zamówienia (dzięki HAVING).</p>\n</details>\n<hr>\n<h3 id=\"zadanie-6-funkcje-tekstowe-i-warunkowe\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-6-funkcje-tekstowe-i-warunkowe\">>>></a>Zadanie 6: Funkcje tekstowe i warunkowe</h3>\n<p>Wyświetl imię i status pełnoletności każdego klienta (pełnoletni/niepełnoletni), imię wypisz wielkimi literami.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-built_in\">UPPER</span>(imie) <span class=\"hljs-keyword\">AS</span> imie,\n  <span class=\"hljs-keyword\">CASE</span> <span class=\"hljs-keyword\">WHEN</span> wiek <span class=\"hljs-operator\">&#x3C;</span> <span class=\"hljs-number\">18</span> <span class=\"hljs-keyword\">THEN</span> <span class=\"hljs-string\">'niepełnoletni'</span> <span class=\"hljs-keyword\">ELSE</span> <span class=\"hljs-string\">'pełnoletni'</span> <span class=\"hljs-keyword\">END</span> <span class=\"hljs-keyword\">AS</span> status\n<span class=\"hljs-keyword\">FROM</span> Klient;\n</code></pre>\n<p><strong>Wyjaśnienie:</strong><br>\nUPPER konwertuje imię na wielkie litery, CASE określa status na podstawie wieku.</p>\n</details>\n<hr>\n<h2 id=\"podsumowanie\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podsumowanie\">>></a>Podsumowanie</h2>\n<p>Zaawansowane zapytania SQL pozwalają na efektywną analizę i przetwarzanie dużych zbiorów danych. Łączenie tabel, agregacje, podzapytania i widoki otwierają szerokie możliwości analityczne i raportowe. Szczegółowe zrozumienie składni i działania każdej komendy to klucz do budowania profesjonalnych rozwiązań bazodanowych!</p>","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/zaawansowane-zapytania-sql.md",{"_8":406,"_10":407,"_12":408,"_22":414,"_24":415,"_34":416,"_26":497,"_28":498,"_30":499,"_32":500,"_35":164},"Wprowadzenie do SQL","Dowiedz się czym jest SQL, do czego służy, poznaj podstawowe polecenia i naucz się wykonywać pierwsze zapytania do bazy danych. Kurs praktyczny dla początkujących z wyjaśnieniami i przykładami.",[175,96,409,410,411,412,413,298,103,104],"zapytania","select","insert","update","delete",[298,175,106],["D",1751587200000],{"_8":417,"_110":418},"Quiz: Podstawy SQL",[419,427,435,443,450,458,466,474,481,489],{"_113":420,"_115":421,"_121":141,"_123":426},"<p>Czym jest SQL?</p>",[422,423,424,425],"Język programowania ogólnego przeznaczenia","Edytor tekstów","System operacyjny","Język zapytań do relacyjnych baz danych","SQL (Structured Query Language) to język zapytań używany do komunikacji z relacyjnymi bazami danych.",{"_113":428,"_115":429,"_121":132,"_123":434},"<p>Jakie polecenie służy do pobierania danych z bazy?</p>",[430,431,432,433],"GET","FETCH","SELECT","REMOVE","SELECT służy do pobierania (wybierania) danych z bazy.",{"_113":436,"_115":437,"_121":132,"_123":442},"<p>Które polecenie służy do wstawiania nowych rekordów?</p>",[438,439,440,441],"UPDATE","ADD","INSERT","APPEND","INSERT INTO pozwala dodać nowe rekordy do tabeli.",{"_113":444,"_115":445,"_121":150,"_123":449},"<p>Jak usunąć dane z tabeli?</p>",[433,446,447,448],"DELETE","DROP","ERASE","DELETE służy do usuwania rekordów z tabeli.",{"_113":451,"_115":452,"_121":122,"_123":457},"<p>Co oznacza WHERE w poleceniach SQL?</p>",[453,454,455,456],"Określa warunek, który muszą spełnić wybrane rekordy","Sortuje dane","Tworzy nową tabelę","Zmienia nazwę bazy danych","WHERE zawęża operację do rekordów spełniających wskazany warunek.",{"_113":459,"_115":460,"_121":132,"_123":465},"<p>Co zrobi polecenie: SELECT * FROM Uzytkownicy WHERE wiek > 18?</p>",[461,462,463,464],"Usunie użytkowników starszych niż 18 lat","Doda użytkowników starszych niż 18 lat","Wyświetli wszystkich użytkowników starszych niż 18 lat","Zaktualizuje wiek użytkowników","Wyświetli wszystkie rekordy, gdzie wiek jest większy niż 18.",{"_113":467,"_115":468,"_121":150,"_123":473},"<p>Czym jest klucz podstawowy (PRIMARY KEY) w tabeli?</p>",[469,470,471,472],"Pole, które zawsze musi być puste","Kolumna, która jednoznacznie identyfikuje każdy rekord w tabeli","Specjalny typ zapytania","Kolumna przechowująca wyłącznie tekst","Klucz podstawowy to unikalny identyfikator rekordu w tabeli.",{"_113":475,"_115":476,"_121":132,"_123":480},"<p>Jaka jest różnica między DELETE a DROP?</p>",[477,478,479,323],"DELETE tworzy kopię zapasową, DROP ją przywraca","DELETE sortuje dane, DROP je filtruje","DELETE usuwa rekordy z tabeli, DROP usuwa całą tabelę","DELETE usuwa pojedyncze rekordy, DROP usuwa całą tabelę lub bazę danych.",{"_113":482,"_115":483,"_121":150,"_123":488},"<p>Jak posortować wyniki według kolumny 'nazwisko' rosnąco?</p>",[484,485,486,487],"SORT nazwisko","ORDER BY nazwisko ASC","SELECT nazwisko","GROUP BY nazwisko","ORDER BY nazwisko ASC sortuje rosnąco po kolumnie nazwisko.",{"_113":490,"_115":491,"_121":122,"_123":496},"<p>Jak ograniczyć liczbę zwracanych wyników do 10?</p>",[492,493,494,495],"LIMIT 10","MAX 10","RANGE 10","TOP 10","LIMIT 10 ogranicza liczbę wyników do 10 (np. w MySQL, PostgreSQL).","208eb880-0738-417c-9504-f7d9ebc72d9d","wprowadzenie-do-sql","<p>SQL (Structured Query Language) to język, który pozwala komunikować się z relacyjnymi bazami danych. Dzięki SQL możesz pobierać, dodawać, zmieniać i usuwać dane, a także zarządzać strukturą bazy. To jedno z najważniejszych narzędzi każdego, kto pracuje z danymi!</p>\n<h2 id=\"spis-treści\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#spis-treści\">>></a>Spis treści</h2>\n<ol>\n<li><a href=\"#czym-jest-sql\">Czym jest SQL?</a></li>\n<li><a href=\"#do-czego-s%C5%82u%C5%BCy-sql\">Do czego służy SQL?</a></li>\n<li><a href=\"#typowe-zastosowania-sql\">Typowe zastosowania SQL</a></li>\n<li><a href=\"#podstawowe-elementy-sk%C5%82adni-sql\">Podstawowe elementy składni SQL</a></li>\n<li><a href=\"#podstawowe-polecenia-sql-szczegolowo\">Podstawowe polecenia SQL (szczegółowo)</a>\n<ul>\n<li><a href=\"#select\">SELECT</a></li>\n<li><a href=\"#insert\">INSERT</a></li>\n<li><a href=\"#update\">UPDATE</a></li>\n<li><a href=\"#delete\">DELETE</a></li>\n</ul>\n</li>\n<li><a href=\"#warunki-i-filtrowanie-danych-where\">Warunki i filtrowanie danych (WHERE)</a></li>\n<li><a href=\"#sortowanie-wynik%C3%B3w-order-by\">Sortowanie wyników (ORDER BY)</a></li>\n<li><a href=\"#ograniczanie-wynik%C3%B3w-limit\">Ograniczanie wyników (LIMIT)</a></li>\n<li><a href=\"#tworzenie-i-modyfikacja-tabel\">Tworzenie i modyfikacja tabel</a></li>\n<li><a href=\"#klucze-i-relacje\">Klucze i relacje</a></li>\n<li><a href=\"#dobre-praktyki-w-sql\">Dobre praktyki w SQL</a></li>\n<li><a href=\"#praktyczne-zadania\">Praktyczne zadania</a></li>\n<li><a href=\"#podsumowanie\">Podsumowanie</a></li>\n</ol>\n<hr>\n<h2 id=\"czym-jest-sql\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#czym-jest-sql\">>></a>Czym jest SQL?</h2>\n<p>SQL (Structured Query Language) to standardowy język zapytań służący do pracy z relacyjnymi bazami danych (np. MySQL, PostgreSQL, SQLite, Oracle). Pozwala na:</p>\n<ul>\n<li>pobieranie danych (wyszukiwanie, filtrowanie, sortowanie),</li>\n<li>dodawanie i edycję informacji,</li>\n<li>usuwanie danych,</li>\n<li>zarządzanie strukturą bazy (tworzenie i modyfikacja tabel).</li>\n</ul>\n<p>Jest wykorzystywany na całym świecie przez programistów, analityków, administratorów baz danych i naukowców danych.</p>\n<hr>\n<h2 id=\"do-czego-służy-sql\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#do-czego-służy-sql\">>></a>Do czego służy SQL?</h2>\n<ul>\n<li><strong>Pobieranie danych</strong> – m.in. wyświetlanie listy klientów, produktów, zamówień.</li>\n<li><strong>Wyszukiwanie i filtrowanie</strong> – np. znajdź wszystkich użytkowników powyżej 18 lat.</li>\n<li><strong>Dodawanie nowych danych</strong> – np. rejestracja nowego klienta.</li>\n<li><strong>Aktualizacja danych</strong> – np. zmiana adresu e-mail lub stanu zamówienia.</li>\n<li><strong>Usuwanie danych</strong> – np. usunięcie nieaktualnych rekordów.</li>\n<li><strong>Tworzenie i zmienianie struktury</strong> – zakładanie nowych tabel, dodawanie kolumn.</li>\n</ul>\n<hr>\n<h2 id=\"typowe-zastosowania-sql\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#typowe-zastosowania-sql\">>></a>Typowe zastosowania SQL</h2>\n<ul>\n<li>Systemy sklepów internetowych</li>\n<li>Systemy bankowości i finansów</li>\n<li>Zarządzanie zasobami przedsiębiorstw (ERP)</li>\n<li>Aplikacje społecznościowe</li>\n<li>Analiza i raportowanie danych (Business Intelligence, Data Science)</li>\n<li>Systemy rejestracji użytkowników i ich autoryzacja</li>\n</ul>\n<hr>\n<h2 id=\"podstawowe-elementy-składni-sql\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podstawowe-elementy-składni-sql\">>></a>Podstawowe elementy składni SQL</h2>\n<ul>\n<li>SQL nie rozróżnia wielkości liter (SELECT, select, Select są równoważne), ale zwykle używa się wielkich liter dla poleceń.</li>\n<li>Każde polecenie kończy się średnikiem (<code>;</code>).</li>\n<li>Nazwy tabel i kolumn są podawane bez cudzysłowów (chyba, że zawierają znaki specjalne).</li>\n<li>Łańcuchy znaków (teksty) zapisujemy w pojedynczych apostrofach, np. <code>'Jan'</code>.</li>\n</ul>\n<hr>\n<h2 id=\"podstawowe-polecenia-sql-szczegółowo\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podstawowe-polecenia-sql-szczegółowo\">>></a>Podstawowe polecenia SQL (szczegółowo)</h2>\n<h3 id=\"select\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#select\">>>></a>SELECT</h3>\n<p><strong>Opis:</strong> Służy do pobierania danych z jednej lub więcej tabel.</p>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> imie, nazwisko <span class=\"hljs-keyword\">FROM</span> Uzytkownicy <span class=\"hljs-keyword\">WHERE</span> wiek <span class=\"hljs-operator\">></span> <span class=\"hljs-number\">18</span>;\n</code></pre>\n<p><strong>Wyjaśnienie składni:</strong></p>\n<ul>\n<li><code>SELECT</code> – rozpoczyna zapytanie pobierające dane.</li>\n<li><code>imie, nazwisko</code> – nazwy kolumn, które chcesz pobrać (możesz użyć <code>*</code>, by pobrać wszystkie).</li>\n<li><code>FROM Uzytkownicy</code> – nazwa tabeli, z której pobierane są dane.</li>\n<li><code>WHERE wiek > 18</code> – warunek wyboru (możesz go pominąć, by pobrać wszystkie rekordy).</li>\n</ul>\n<hr>\n<h3 id=\"insert\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#insert\">>>></a>INSERT</h3>\n<p><strong>Opis:</strong> Dodaje nowe rekordy do wybranej tabeli.</p>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">INSERT INTO</span> Uzytkownicy (imie, nazwisko, wiek) <span class=\"hljs-keyword\">VALUES</span> (<span class=\"hljs-string\">'Anna'</span>, <span class=\"hljs-string\">'Nowak'</span>, <span class=\"hljs-number\">25</span>);\n</code></pre>\n<p><strong>Wyjaśnienie składni:</strong></p>\n<ul>\n<li><code>INSERT INTO</code> – rozpoczyna polecenie dodania rekordu.</li>\n<li><code>Uzytkownicy</code> – nazwa tabeli.</li>\n<li><code>(imie, nazwisko, wiek)</code> – lista kolumn, do których będą przypisane wartości.</li>\n<li><code>VALUES ('Anna', 'Nowak', 25)</code> – wartości przypisane odpowiednio do wskazanych kolumn.</li>\n</ul>\n<hr>\n<h3 id=\"update\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#update\">>>></a>UPDATE</h3>\n<p><strong>Opis:</strong> Zmienia dane w istniejących rekordach.</p>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">UPDATE</span> Uzytkownicy <span class=\"hljs-keyword\">SET</span> wiek <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">26</span> <span class=\"hljs-keyword\">WHERE</span> imie <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">'Anna'</span> <span class=\"hljs-keyword\">AND</span> nazwisko <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">'Nowak'</span>;\n</code></pre>\n<p><strong>Wyjaśnienie składni:</strong></p>\n<ul>\n<li><code>UPDATE Uzytkownicy</code> – wskazanie tabeli, w której chcesz zmienić dane.</li>\n<li><code>SET wiek = 26</code> – określenie nowej wartości dla kolumny.</li>\n<li><code>WHERE imie = 'Anna' AND nazwisko = 'Nowak'</code> – warunek, które rekordy mają zostać zmienione (bardzo ważne, by nie pominąć WHERE!).</li>\n</ul>\n<hr>\n<h3 id=\"delete\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#delete\">>>></a>DELETE</h3>\n<p><strong>Opis:</strong> Usuwa rekordy z wybranej tabeli.</p>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">DELETE</span> <span class=\"hljs-keyword\">FROM</span> Uzytkownicy <span class=\"hljs-keyword\">WHERE</span> wiek <span class=\"hljs-operator\">&#x3C;</span> <span class=\"hljs-number\">18</span>;\n</code></pre>\n<p><strong>Wyjaśnienie składni:</strong></p>\n<ul>\n<li><code>DELETE FROM Uzytkownicy</code> – wskazanie tabeli, z której rekordy mają być usunięte.</li>\n<li><code>WHERE wiek &#x3C; 18</code> – warunek wyboru rekordów do usunięcia.</li>\n</ul>\n<hr>\n<h2 id=\"warunki-i-filtrowanie-danych-where\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#warunki-i-filtrowanie-danych-where\">>></a>Warunki i filtrowanie danych (WHERE)</h2>\n<p><strong>Opis:</strong> WHERE pozwala określić, które rekordy mają zostać wybrane, zmienione lub usunięte.</p>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> Uzytkownicy <span class=\"hljs-keyword\">WHERE</span> miasto <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">'Warszawa'</span> <span class=\"hljs-keyword\">AND</span> wiek <span class=\"hljs-operator\">></span> <span class=\"hljs-number\">18</span>;\n</code></pre>\n<ul>\n<li><code>miasto = 'Warszawa'</code> – wybiera tylko rekordy, gdzie miasto to Warszawa.</li>\n<li><code>AND wiek > 18</code> – dodatkowy warunek: tylko osoby powyżej 18 roku życia.</li>\n</ul>\n<p>Możliwe operatory:</p>\n<ul>\n<li>=, != (&#x3C;>), >, &#x3C;, >=, &#x3C;=</li>\n<li>AND, OR, NOT</li>\n<li>LIKE (dopasowanie wzorca), IN (lista wartości), BETWEEN (zakres)</li>\n</ul>\n<hr>\n<h2 id=\"sortowanie-wyników-order-by\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#sortowanie-wyników-order-by\">>></a>Sortowanie wyników (ORDER BY)</h2>\n<p><strong>Opis:</strong> Pozwala posortować wyniki według jednej lub więcej kolumn.</p>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> imie, nazwisko <span class=\"hljs-keyword\">FROM</span> Uzytkownicy <span class=\"hljs-keyword\">ORDER</span> <span class=\"hljs-keyword\">BY</span> nazwisko <span class=\"hljs-keyword\">ASC</span>, imie <span class=\"hljs-keyword\">DESC</span>;\n</code></pre>\n<ul>\n<li><code>ORDER BY nazwisko ASC</code> – posortuj alfabetycznie po nazwisku rosnąco</li>\n<li><code>imie DESC</code> – jeśli nazwiska się powtarzają, sortuj po imieniu malejąco</li>\n</ul>\n<hr>\n<h2 id=\"ograniczanie-wyników-limit\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#ograniczanie-wyników-limit\">>></a>Ograniczanie wyników (LIMIT)</h2>\n<p><strong>Opis:</strong> LIMIT służy do ograniczenia liczby zwracanych wyników.</p>\n<p><strong>Przykład:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> Produkty <span class=\"hljs-keyword\">ORDER</span> <span class=\"hljs-keyword\">BY</span> cena <span class=\"hljs-keyword\">DESC</span> LIMIT <span class=\"hljs-number\">3</span>;\n</code></pre>\n<ul>\n<li>Wyświetli 3 najdroższe produkty.</li>\n</ul>\n<hr>\n<h2 id=\"tworzenie-i-modyfikacja-tabel\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#tworzenie-i-modyfikacja-tabel\">>></a>Tworzenie i modyfikacja tabel</h2>\n<p><strong>Tworzenie tabeli:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE TABLE</span> Produkty (\n  id <span class=\"hljs-type\">INT</span> <span class=\"hljs-keyword\">PRIMARY KEY</span>,\n  nazwa <span class=\"hljs-type\">VARCHAR</span>(<span class=\"hljs-number\">100</span>),\n  cena <span class=\"hljs-type\">DECIMAL</span>(<span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">2</span>)\n);\n</code></pre>\n<ul>\n<li><code>CREATE TABLE Produkty</code> – utwórz nową tabelę o nazwie Produkty.</li>\n<li><code>id INT PRIMARY KEY</code> – kolumna \"id\" typu liczba całkowita, klucz główny (unikalny identyfikator).</li>\n<li><code>nazwa VARCHAR(100)</code> – kolumna \"nazwa\" typu tekstowego o maks. długości 100 znaków.</li>\n<li><code>cena DECIMAL(10,2)</code> – kolumna \"cena\" typu liczba zmiennoprzecinkowa (10 cyfr, w tym 2 po przecinku).</li>\n</ul>\n<p><strong>Dodawanie kolumny:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">ALTER TABLE</span> Produkty <span class=\"hljs-keyword\">ADD</span> <span class=\"hljs-keyword\">COLUMN</span> opis TEXT;\n</code></pre>\n<p><strong>Usuwanie tabeli:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">DROP</span> <span class=\"hljs-keyword\">TABLE</span> Produkty;\n</code></pre>\n<hr>\n<h2 id=\"klucze-i-relacje\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#klucze-i-relacje\">>></a>Klucze i relacje</h2>\n<ul>\n<li><strong>Klucz podstawowy (PRIMARY KEY):</strong> Unikalnie identyfikuje każdy rekord w tabeli (np. id).</li>\n<li><strong>Klucz obcy (FOREIGN KEY):</strong> Tworzy powiązanie między dwiema tabelami.</li>\n</ul>\n<p><strong>Przykład relacji:</strong></p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE TABLE</span> Zamowienia (\n  id <span class=\"hljs-type\">INT</span> <span class=\"hljs-keyword\">PRIMARY KEY</span>,\n  id_produktu <span class=\"hljs-type\">INT</span>,\n  ilosc <span class=\"hljs-type\">INT</span>,\n  <span class=\"hljs-keyword\">FOREIGN KEY</span> (id_produktu) <span class=\"hljs-keyword\">REFERENCES</span> Produkty(id)\n);\n</code></pre>\n<ul>\n<li><code>id</code> – unikalny identyfikator zamówienia.</li>\n<li><code>id_produktu</code> – odwołanie do kolumny \"id\" w tabeli Produkty.</li>\n<li><code>FOREIGN KEY...</code> – definiuje powiązanie (relację) między tabelami.</li>\n</ul>\n<hr>\n<h2 id=\"dobre-praktyki-w-sql\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#dobre-praktyki-w-sql\">>></a>Dobre praktyki w SQL</h2>\n<ul>\n<li>Zawsze używaj klauzuli WHERE, jeśli chcesz zmieniać lub usuwać tylko wybrane rekordy.</li>\n<li>Używaj czytelnych nazw tabel i kolumn.</li>\n<li>Twórz kopie zapasowe bazy przed poważnymi zmianami.</li>\n<li>Testuj zapytania SELECT przed wykonaniem UPDATE lub DELETE.</li>\n<li>Unikaj SELECT * w dużych projektach – wybieraj konkretne kolumny.</li>\n<li>Dokumentuj nietypowe zapytania i modyfikacje struktury bazy.</li>\n</ul>\n<hr>\n<h2 id=\"praktyczne-zadania\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#praktyczne-zadania\">>></a>Praktyczne zadania</h2>\n<h3 id=\"zadanie-1-pobieranie-danych\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-1-pobieranie-danych\">>>></a>Zadanie 1: Pobieranie danych</h3>\n<p>Wyświetl wszystkie dane z tabeli \"Uzytkownicy\".</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> Uzytkownicy;\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-2-wstawianie-nowych-rekordów\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-2-wstawianie-nowych-rekordów\">>>></a>Zadanie 2: Wstawianie nowych rekordów</h3>\n<p>Dodaj nowego użytkownika o imieniu \"Anna\", nazwisku \"Nowak\" i wieku 25.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">INSERT INTO</span> Uzytkownicy (imie, nazwisko, wiek) <span class=\"hljs-keyword\">VALUES</span> (<span class=\"hljs-string\">'Anna'</span>, <span class=\"hljs-string\">'Nowak'</span>, <span class=\"hljs-number\">25</span>);\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-3-filtrowanie-danych\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-3-filtrowanie-danych\">>>></a>Zadanie 3: Filtrowanie danych</h3>\n<p>Wyświetl imiona i nazwiska użytkowników, którzy mają więcej niż 18 lat.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> imie, nazwisko <span class=\"hljs-keyword\">FROM</span> Uzytkownicy <span class=\"hljs-keyword\">WHERE</span> wiek <span class=\"hljs-operator\">></span> <span class=\"hljs-number\">18</span>;\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-4-aktualizacja-danych\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-4-aktualizacja-danych\">>>></a>Zadanie 4: Aktualizacja danych</h3>\n<p>Zmień wiek użytkownika \"Anna Nowak\" na 26.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">UPDATE</span> Uzytkownicy <span class=\"hljs-keyword\">SET</span> wiek <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">26</span> <span class=\"hljs-keyword\">WHERE</span> imie <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">'Anna'</span> <span class=\"hljs-keyword\">AND</span> nazwisko <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">'Nowak'</span>;\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-5-usuwanie-danych\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-5-usuwanie-danych\">>>></a>Zadanie 5: Usuwanie danych</h3>\n<p>Usuń wszystkich użytkowników o wieku poniżej 18 lat.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">DELETE</span> <span class=\"hljs-keyword\">FROM</span> Uzytkownicy <span class=\"hljs-keyword\">WHERE</span> wiek <span class=\"hljs-operator\">&#x3C;</span> <span class=\"hljs-number\">18</span>;\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-6-tworzenie-tabeli\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-6-tworzenie-tabeli\">>>></a>Zadanie 6: Tworzenie tabeli</h3>\n<p>Utwórz tabelę \"Produkty\" z polami: id (liczba całkowita, klucz podstawowy), nazwa (tekst), cena (liczba zmiennoprzecinkowa).</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE TABLE</span> Produkty (\n  id <span class=\"hljs-type\">INT</span> <span class=\"hljs-keyword\">PRIMARY KEY</span>,\n  nazwa <span class=\"hljs-type\">VARCHAR</span>(<span class=\"hljs-number\">100</span>),\n  cena <span class=\"hljs-type\">DECIMAL</span>(<span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">2</span>)\n);\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-7-relacja-między-tabelami\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-7-relacja-między-tabelami\">>>></a>Zadanie 7: Relacja między tabelami</h3>\n<p>Utwórz tabelę \"Zamowienia\" zawierającą klucz obcy do \"Produktów\".</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">CREATE TABLE</span> Zamowienia (\n  id <span class=\"hljs-type\">INT</span> <span class=\"hljs-keyword\">PRIMARY KEY</span>,\n  id_produktu <span class=\"hljs-type\">INT</span>,\n  ilosc <span class=\"hljs-type\">INT</span>,\n  <span class=\"hljs-keyword\">FOREIGN KEY</span> (id_produktu) <span class=\"hljs-keyword\">REFERENCES</span> Produkty(id)\n);\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-8-sortowanie-i-ograniczanie-wyników\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-8-sortowanie-i-ograniczanie-wyników\">>>></a>Zadanie 8: Sortowanie i ograniczanie wyników</h3>\n<p>Wyświetl 5 najstarszych użytkowników (imie, nazwisko, wiek).</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> imie, nazwisko, wiek <span class=\"hljs-keyword\">FROM</span> Uzytkownicy <span class=\"hljs-keyword\">ORDER</span> <span class=\"hljs-keyword\">BY</span> wiek <span class=\"hljs-keyword\">DESC</span> LIMIT <span class=\"hljs-number\">5</span>;\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-9-łączenie-warunków\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-9-łączenie-warunków\">>>></a>Zadanie 9: Łączenie warunków</h3>\n<p>Wyświetl wszystkich użytkowników z miasta \"Warszawa\" w wieku powyżej 18 lat.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> Uzytkownicy <span class=\"hljs-keyword\">WHERE</span> miasto <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">'Warszawa'</span> <span class=\"hljs-keyword\">AND</span> wiek <span class=\"hljs-operator\">></span> <span class=\"hljs-number\">18</span>;\n</code></pre>\n</details>\n<hr>\n<h2 id=\"podsumowanie\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podsumowanie\">>></a>Podsumowanie</h2>\n<p>SQL to potężne i uniwersalne narzędzie do pracy z danymi w relacyjnych bazach danych. Pozwala efektywnie pobierać, modyfikować i zarządzać informacją. Warto poznać zarówno podstawy, jak i bardziej zaawansowane możliwości tego języka – to inwestycja, która przyda się w niemal każdej dziedzinie IT!</p>","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/wprowadzenie-do-sql.md",{"_8":502,"_10":503,"_12":504,"_22":508,"_24":509,"_34":510,"_26":617,"_28":618,"_30":619,"_32":620,"_35":36},"Wprowadzenie do baz danych","Poznaj podstawowe pojęcia i koncepcje związane z bazami danych. Dowiedz się czym są bazy danych, jakie są ich rodzaje, gdzie są stosowane i dlaczego są kluczowe w informatyce. Kurs teoretyczny dla początkujących.",[170,505,506,507,298,292,104],"teoria","relacyjne","noSQL",[298,106],["D",1751500800000],{"_8":511,"_110":512},"Quiz: Podstawy baz danych (teoria)",[513,520,528,536,544,552,560,568,576,583,587,593,601,609],{"_113":514,"_115":515,"_121":132,"_123":519},"<p>Czym jest baza danych?</p>",[424,516,517,518],"Język programowania","Zorganizowany zbiór danych przechowywany i zarządzany komputerowo","Gra komputerowa","Baza danych to uporządkowany, zarządzany komputerowo zbiór informacji.",{"_113":521,"_115":522,"_121":150,"_123":527},"<p>Który z poniższych jest przykładem systemu zarządzania bazą danych (DBMS)?</p>",[523,524,525,526],"Photoshop","MySQL","Excel","Apache","MySQL to popularny system zarządzania relacyjną bazą danych.",{"_113":529,"_115":530,"_121":132,"_123":535},"<p>Dlaczego bazy danych są ważne w informatyce?</p>",[531,532,533,534],"Nie mają większego znaczenia","Pozwalają programować w języku Java","Ponieważ umożliwiają efektywne przechowywanie i wyszukiwanie dużych ilości danych","Są podstawą do tworzenia gier komputerowych","Bazy danych umożliwiają skuteczne zarządzanie informacją w wielu zastosowaniach.",{"_113":537,"_115":538,"_121":132,"_123":543},"<p>Czym charakteryzuje się relacyjna baza danych?</p>",[539,540,541,542],"Relacyjne bazy danych nie istnieją","Dane przechowywane są tylko w plikach tekstowych","Dane przechowywane są w tabelach powiązanych relacjami","Służą tylko do grafiki komputerowej","Relacyjne bazy danych przechowują dane w tabelach i umożliwiają powiązania pomiędzy nimi.",{"_113":545,"_115":546,"_121":150,"_123":551},"<p>Które z poniższych NIE jest przykładem bazy NoSQL?</p>",[547,548,549,550],"Cassandra","PostgreSQL","Redis","MongoDB","PostgreSQL to relacyjny system bazodanowy, a nie NoSQL.",{"_113":553,"_115":554,"_121":141,"_123":559},"<p>Do czego służy język SQL?</p>",[555,556,557,558],"Do analizy grafiki 3D","Do projektowania stron internetowych","Do modyfikowania zdjęć","Do tworzenia i zarządzania danymi w relacyjnych bazach danych","SQL służy do tworzenia, zarządzania i wyszukiwania danych w relacyjnych bazach danych.",{"_113":561,"_115":562,"_121":141,"_123":567},"<p>Czym jest tabela w relacyjnej bazie danych?</p>",[563,564,565,566],"Zbiornikiem na obrazy","Językiem programowania","Rodzajem klucza","Zbiorem rekordów o tej samej strukturze, przypominającym arkusz kalkulacyjny","Tabela to zbiór rekordów (wierszy) o tej samej strukturze.",{"_113":569,"_115":570,"_121":141,"_123":575},"<p>Czym jest rekord (wiersz) w bazie danych?</p>",[571,572,573,574],"Całą tabelą","Typem kolumny","Jednym polem w tabeli","Pojedynczym wpisem, np. informacjami o jednym obiekcie","Rekord to pojedynczy wpis w tabeli, np. dane jednego klienta.",{"_113":577,"_115":578,"_121":122,"_123":582},"<p>Czym jest kolumna w bazie danych?</p>",[579,580,581,565],"Pole opisujące cechę wszystkich rekordów w tabeli","Systemem operacyjnym","Jednym wpisem w tabeli","Kolumna to jedno pole w tabeli, opisujące daną cechę wszystkich rekordów.",{"_113":584,"_115":585,"_121":141,"_123":586},"<p>Wskaż przykład relacyjnej bazy danych:</p>",[550,549,547,524],"MySQL to relacyjny system bazodanowy.",{"_113":588,"_115":589,"_121":141,"_123":592},"<p>Wskaż przykład nierelacyjnej bazy danych (NoSQL):</p>",[590,591,548,550],"Oracle","SQLite","MongoDB to dokumentowa baza NoSQL.",{"_113":594,"_115":595,"_121":132,"_123":600},"<p>Podaj przykład zastosowania bazy danych w codziennym życiu:</p>",[596,597,598,599],"Rysowanie grafiki komputerowej","Tworzenie muzyki","Przechowywanie danych klientów w sklepie internetowym","Pisanie wierszy","Przechowywanie danych klientów to jedno z typowych zastosowań baz danych.",{"_113":602,"_115":603,"_121":141,"_123":608},"<p>Dlaczego tworzenie kopii zapasowej bazy danych jest ważne?</p>",[604,605,606,607],"Backup zwiększa prędkość działania bazy","Backup służy do szyfrowania obrazków","Backup umożliwia programowanie w JavaScript","Backup chroni dane przed utratą w razie awarii, ataku lub przypadkowego usunięcia","Kopie zapasowe chronią dane przed utratą.",{"_113":610,"_115":611,"_121":141,"_123":616},"<p>Które z poniższych NIE jest cechą bazy relacyjnej?</p>",[612,613,614,615],"Przechowywanie danych w tabelach","Możliwość definiowania relacji między danymi","Unikalne identyfikowanie rekordów kluczem podstawowym","Przechowywanie danych w dokumentach JSON","Przechowywanie danych w dokumentach JSON to cecha baz NoSQL (np. MongoDB).","fdbdeb34-f063-4b62-b2c6-5e1f14ac9d5b","wprowadzenie-do-baz-danych","<p>Bazy danych są nieodłączną częścią współczesnej informatyki. Przechowują, organizują i umożliwiają szybki dostęp do ogromnych ilości informacji – od danych klientów w sklepach internetowych, przez posty w mediach społecznościowych, aż po dane telemetryczne z urządzeń IoT. Nawet jeśli nie widzisz ich na co dzień, korzystasz z nich niemal w każdej aplikacji! 🗃️</p>\n<h2 id=\"spis-treści\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#spis-treści\">>></a>Spis treści</h2>\n<ol>\n<li><a href=\"#co-to-jest-baza-danych\">Co to jest baza danych?</a></li>\n<li><a href=\"#dlaczego-korzystamy-z-baz-danych\">Dlaczego korzystamy z baz danych?</a></li>\n<li><a href=\"#systemy-zarz%C4%85dzania-baz%C4%85-danych-dbms\">Systemy zarządzania bazą danych (DBMS)</a></li>\n<li><a href=\"#rodzaje-baz-danych\">Rodzaje baz danych</a>\n<ul>\n<li><a href=\"#relacyjne-bazy-danych\">Relacyjne bazy danych</a></li>\n<li><a href=\"#nosql\">NoSQL</a></li>\n<li><a href=\"#inne-rodzaje-baz-danych\">Inne rodzaje baz danych</a></li>\n</ul>\n</li>\n<li><a href=\"#podstawowe-poj%C4%99cia-tabele-rekordy-kolumny\">Podstawowe pojęcia: tabele, rekordy, kolumny</a></li>\n<li><a href=\"#co-to-jest-sql-i-do-czego-s%C5%82u%C5%BCy\">Co to jest SQL i do czego służy?</a></li>\n<li><a href=\"#gdzie-stosuje-si%C4%99-bazy-danych\">Gdzie stosuje się bazy danych?</a></li>\n<li><a href=\"#bezpiecze%C5%84stwo-i-kopie-zapasowe\">Bezpieczeństwo i kopie zapasowe</a></li>\n<li><a href=\"#popularne-systemy-bazodanowe\">Popularne systemy bazodanowe</a></li>\n<li><a href=\"#gdzie-szuka%C4%87-pomocy-i-materia%C5%82%C3%B3w\">Gdzie szukać pomocy i materiałów?</a></li>\n<li><a href=\"#podsumowanie\">Podsumowanie</a></li>\n</ol>\n<hr>\n<h2 id=\"co-to-jest-baza-danych\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#co-to-jest-baza-danych\">>></a>Co to jest baza danych?</h2>\n<p>Baza danych to zorganizowany zbiór informacji przechowywany komputerowo. Pozwala na efektywne gromadzenie, przetwarzanie, wyszukiwanie i zarządzanie danymi. Może to być lista klientów, produktów, zamówień, ale też ogromne zbiory informacji o użytkownikach serwisów społecznościowych czy transakcjach bankowych.</p>\n<hr>\n<h2 id=\"dlaczego-korzystamy-z-baz-danych\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#dlaczego-korzystamy-z-baz-danych\">>></a>Dlaczego korzystamy z baz danych?</h2>\n<ul>\n<li><strong>Bezpieczeństwo i integralność danych</strong> – bazy danych minimalizują ryzyko utraty danych i dbają o ich poprawność.</li>\n<li><strong>Wydajność</strong> – umożliwiają szybkie wyszukiwanie i operacje na dużych zbiorach informacji.</li>\n<li><strong>Organizacja</strong> – pozwalają poukładać dane w logiczne struktury.</li>\n<li><strong>Skalowalność</strong> – obsługują rosnącą ilość danych i użytkowników.</li>\n<li><strong>Współbieżność</strong> – wielu użytkowników może pracować z tymi samymi danymi w tym samym czasie.</li>\n</ul>\n<hr>\n<h2 id=\"systemy-zarządzania-bazą-danych-dbms\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#systemy-zarządzania-bazą-danych-dbms\">>></a>Systemy zarządzania bazą danych (DBMS)</h2>\n<p>DBMS (Database Management System) to specjalne oprogramowanie, które umożliwia łatwe tworzenie, przechowywanie i zarządzanie bazami danych. DBMS odpowiada m.in. za:</p>\n<ul>\n<li>przechowywanie i organizację danych,</li>\n<li>kontrolę dostępu i uprawnień,</li>\n<li>zapewnienie spójności i integralności danych,</li>\n<li>obsługę wielu użytkowników jednocześnie,</li>\n<li>wykonywanie kopii zapasowych i odzyskiwanie danych.</li>\n</ul>\n<hr>\n<h2 id=\"rodzaje-baz-danych\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#rodzaje-baz-danych\">>></a>Rodzaje baz danych</h2>\n<h3 id=\"relacyjne-bazy-danych\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#relacyjne-bazy-danych\">>>></a>Relacyjne bazy danych</h3>\n<p>Najpopularniejszy typ baz. Dane są zorganizowane w <strong>tabelach</strong> (wiersze i kolumny), a relacje między tabelami pozwalają na powiązanie danych z różnych zbiorów. Stosowane są tam, gdzie ważna jest struktura i spójność danych – np. bankowość, e-commerce, systemy ERP.</p>\n<h3 id=\"nosql\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#nosql\">>>></a>NoSQL</h3>\n<p>Bazy nierelacyjne, zaprojektowane do przechowywania dużych, zróżnicowanych i często nieustrukturyzowanych danych. Zamiast tabel, wykorzystują inne struktury: dokumenty (np. JSON), pary klucz-wartość, grafy czy szerokie kolumny. Sprawdzają się np. w mediach społecznościowych, IoT, big data.</p>\n<h3 id=\"inne-rodzaje-baz-danych\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#inne-rodzaje-baz-danych\">>>></a>Inne rodzaje baz danych</h3>\n<ul>\n<li><strong>Bazy obiektowe</strong> – przechowują dane jako obiekty, podobnie jak w programowaniu obiektowym.</li>\n<li><strong>Bazy grafowe</strong> – idealne do przechowywania sieci powiązań, np. relacje między użytkownikami.</li>\n<li><strong>Bazy czasowe (time-series)</strong> – zoptymalizowane do przechowywania danych zmieniających się w czasie, np. pomiarów sensorów.</li>\n</ul>\n<hr>\n<h2 id=\"podstawowe-pojęcia-tabele-rekordy-kolumny\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podstawowe-pojęcia-tabele-rekordy-kolumny\">>></a>Podstawowe pojęcia: tabele, rekordy, kolumny</h2>\n<p>W relacyjnych bazach danych dane są przechowywane w strukturze tabelarycznej. Oto najważniejsze pojęcia:</p>\n<ul>\n<li><strong>Tabela</strong> – zbiór rekordów (wierszy) o tej samej strukturze. Tabela przypomina arkusz kalkulacyjny, gdzie każdy wiersz to inny obiekt, a każda kolumna opisuje konkretną cechę tych obiektów.</li>\n<li><strong>Rekord (wiersz)</strong> – pojedynczy wpis w tabeli, czyli komplet informacji o jednym obiekcie (np. jeden klient).</li>\n<li><strong>Kolumna</strong> – jedno pole o określonym typie danych, np. imię, nazwisko, wiek. Każda kolumna opisuje jedną cechę wszystkich rekordów w tabeli.</li>\n</ul>\n<p><strong>Przykład:</strong></p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>id</th><th>imie</th><th>nazwisko</th><th>wiek</th></tr></thead><tbody><tr><td>1</td><td>Jan</td><td>Kowalski</td><td>30</td></tr><tr><td>2</td><td>Anna</td><td>Nowak</td><td>25</td></tr></tbody></table>\n<p>W powyższej tabeli:</p>\n<ul>\n<li>Każdy wiersz to rekord (informacje o jednej osobie),</li>\n<li>Kolumny to cechy (id, imie, nazwisko, wiek),</li>\n<li>Całość to tabela (np. \"Użytkownicy\").</li>\n</ul>\n<hr>\n<h2 id=\"co-to-jest-sql-i-do-czego-służy\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#co-to-jest-sql-i-do-czego-służy\">>></a>Co to jest SQL i do czego służy?</h2>\n<p><strong>SQL</strong> (Structured Query Language) to specjalny język służący do komunikacji z relacyjnymi bazami danych. Umożliwia:</p>\n<ul>\n<li>definiowanie struktury bazy (np. tworzenie tabel),</li>\n<li>wprowadzanie i modyfikowanie danych,</li>\n<li>wyszukiwanie i filtrowanie informacji,</li>\n<li>zarządzanie użytkownikami i uprawnieniami.</li>\n</ul>\n<p>SQL jest standardem w pracy z relacyjnymi bazami danych – znajomość podstawowych pojęć i poleceń SQL jest niezbędna dla każdego, kto chce pracować z danymi.</p>\n<blockquote>\n<p><strong>Uwaga:</strong> W tym kursie nie będziemy omawiać składni SQL – temu poświęcony będzie osobny kurs.</p>\n</blockquote>\n<hr>\n<h2 id=\"gdzie-stosuje-się-bazy-danych\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#gdzie-stosuje-się-bazy-danych\">>></a>Gdzie stosuje się bazy danych?</h2>\n<ul>\n<li>Sklepy internetowe (produkty, zamówienia, klienci)</li>\n<li>Media społecznościowe (profile, posty, relacje)</li>\n<li>Systemy rejestracji (szkoły, uczelnie, konferencje)</li>\n<li>Zarządzanie magazynem, finansami, logistyką</li>\n<li>Systemy bankowe, medyczne, rządowe</li>\n<li>Przechowywanie danych telemetrycznych, analitycznych, IoT</li>\n</ul>\n<hr>\n<h2 id=\"bezpieczeństwo-i-kopie-zapasowe\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#bezpieczeństwo-i-kopie-zapasowe\">>></a>Bezpieczeństwo i kopie zapasowe</h2>\n<ul>\n<li><strong>Uprawnienia i autoryzacja</strong> – kontrola dostępu do danych.</li>\n<li><strong>Kopie zapasowe</strong> – regularne tworzenie backupów na wypadek awarii.</li>\n<li><strong>Szyfrowanie</strong> – ochrona danych przed nieautoryzowanym dostępem.</li>\n<li><strong>Integracja z systemami monitoringu i logowania operacji.</strong></li>\n</ul>\n<hr>\n<h2 id=\"popularne-systemy-bazodanowe\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#popularne-systemy-bazodanowe\">>></a>Popularne systemy bazodanowe</h2>\n<ul>\n<li><strong>MySQL</strong> – popularny, darmowy, relacyjny DBMS.</li>\n<li><strong>PostgreSQL</strong> – zaawansowany, relacyjny, open-source.</li>\n<li><strong>Oracle Database</strong> – komercyjny, relacyjny, szeroko stosowany w korporacjach.</li>\n<li><strong>MongoDB</strong> – dokumentowa baza NoSQL.</li>\n<li><strong>Redis</strong> – szybka baza klucz-wartość (NoSQL).</li>\n<li><strong>SQLite</strong> – lekka baza do aplikacji lokalnych.</li>\n<li><strong>Neo4j</strong> – grafowa baza danych.</li>\n</ul>\n<hr>\n<h2 id=\"gdzie-szukać-pomocy-i-materiałów\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#gdzie-szukać-pomocy-i-materiałów\">>></a>Gdzie szukać pomocy i materiałów?</h2>\n<ul>\n<li>Kursy online (np. Udemy, Coursera, YouTube)</li>\n<li>Dokumentacje oficjalne systemów DBMS (np. MySQL, PostgreSQL, MongoDB)</li>\n<li>Społeczności: Stack Overflow, grupy na Discord/Slack, fora tematyczne</li>\n<li>Książki: \"Bazy danych. Systemy rozproszone\" – A. Silberschatz, \"Bazy danych. Wprowadzenie\" – J. Date</li>\n</ul>\n<hr>\n<h2 id=\"podsumowanie\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podsumowanie\">>></a>Podsumowanie</h2>\n<p>Bazy danych to podstawa współczesnych systemów informatycznych, pozwalająca na skuteczne i bezpieczne zarządzanie informacją. Znajomość ich rodzajów, pojęć i zastosowań jest kluczowa dla każdego, kto chce rozpocząć przygodę z IT, programowaniem lub analizą danych. Kolejnym krokiem może być nauka praktycznego wykorzystania baz danych i języków zapytań!</p>","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/wprowadzenie-do-baz-danych.md",{"_8":622,"_10":623,"_12":624,"_22":626,"_24":627,"_34":628,"_26":671,"_28":672,"_30":673,"_32":674,"_35":675},"Wprowadzenie do TypeScript","Dowiedz się czym jest TypeScript, jak zacząć z niego korzystać i dlaczego warto go używać w swoich projektach. Przystępny przewodnik dla początkujących z przykładami i praktycznymi wskazówkami.",[17,16,71,18,625,104],"typowanie",[298,17],["D",1750636800000],{"_8":629,"_110":630},"Quiz: Podstawy TypeScript",[631,639,647,655,663],{"_113":632,"_115":633,"_121":141,"_123":638},"<p>Czym jest TypeScript?</p>",[634,635,636,637],"Frameworkiem CSS","Systemem szablonów HTML","Językiem bazującym na Pythonie","Rozszerzeniem JavaScriptu o typowanie statyczne","TypeScript rozszerza JavaScript o typowanie statyczne i inne narzędzia dla programistów.",{"_113":640,"_115":641,"_121":150,"_123":646},"<p>Jakie rozszerzenie mają pliki natywne TypeScript?</p>",[642,643,644,645],".json",".ts",".cts",".js","Standardowe pliki TypeScript mają rozszerzenie `.ts`. Natomiast w React używamy też `.tsx`.",{"_113":648,"_115":649,"_121":132,"_123":654},"<p>Które z poniższych typowań zmiennej jest poprawne w TypeScript?</p>",[650,651,652,653],"let liczba: 10 = number;","let liczba = number 10;","let liczba: number = 10;","var liczba: num = 10;","Poprawna składnia to let liczba: number = 10;",{"_113":656,"_115":657,"_121":122,"_123":662},"<p>Czym różni się TypeScript od JavaScript?</p>",[658,659,660,661],"TypeScript ma statyczne typowanie, JavaScript nie","JavaScript nie pozwala na funkcje","TypeScript działa tylko w przeglądarce","TypeScript nie obsługuje klas","Najważniejsza różnica to typowanie statyczne i kompilacja do JS.",{"_113":664,"_115":665,"_121":122,"_123":670},"<p>Jak zainstalować TypeScript globalnie przez npm?</p>",[666,667,668,669],"npm install -g typescript","npm install typescript","npm get typescript","npm add global typescript","Polecenie npm install -g typescript instaluje TypeScript globalnie.","f128d4da-3f52-410a-be75-867a61e1adaf","wprowadzenie-do-typescript","<p>TypeScript to coraz popularniejszy język programowania, który rozszerza możliwości jakie daje JavaScript. Jeżeli pracowałeś już z JavaScript, na pewno docenisz dodatkowe bezpieczeństwo i wygodę, które oferuje TypeScript! 🚀</p>\n<h2 id=\"spis-treści\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#spis-treści\">>></a>Spis treści</h2>\n<ol>\n<li><a href=\"#co-to-jest-typescript\">Co to jest TypeScript?</a></li>\n<li><a href=\"#czym-r%C3%B3%C5%BCni-si%C4%99-typescript-od-javascript\">Czym różni się TypeScript od JavaScript?</a></li>\n<li><a href=\"#dlaczego-warto-korzysta%C4%87-z-typescript\">Dlaczego warto korzystać z TypeScript?</a></li>\n<li><a href=\"#jak-zacz%C4%85%C4%87-z-typescript\">Jak zacząć z TypeScript?</a>\n<ul>\n<li><a href=\"#instalacja\">Instalacja</a></li>\n<li><a href=\"#kompilacja-plik%C3%B3w-ts-do-js\">Kompilacja plików <code>.ts</code> do <code>.js</code></a></li>\n<li><a href=\"#konfiguracja-projektu-i-tsconfigjson\">Konfiguracja projektu i tsconfig.json</a></li>\n<li><a href=\"#tw%C3%B3j-pierwszy-projekt-typescript\">Twój pierwszy projekt TypeScript</a></li>\n</ul>\n</li>\n<li><a href=\"#podstawy-sk%C5%82adni-typescript\">Podstawy składni TypeScript</a>\n<ul>\n<li><a href=\"#typowanie-zmiennych\">Typowanie zmiennych</a></li>\n<li><a href=\"#typowanie-funkcji\">Typowanie funkcji</a></li>\n<li><a href=\"#interfejsy\">Interfejsy</a></li>\n<li><a href=\"#typy-z%C5%82o%C5%BCone\">Typy złożone</a></li>\n<li><a href=\"#klasy-i-dziedziczenie\">Klasy i dziedziczenie</a></li>\n<li><a href=\"#enumy\">Enumy</a></li>\n<li><a href=\"#alias-typ%C3%B3w\">Alias typów</a></li>\n</ul>\n</li>\n<li><a href=\"#jak-u%C5%BCywa%C4%87-typ%C3%B3w-w-praktyce\">Jak używać typów w praktyce?</a></li>\n<li><a href=\"#narz%C4%99dzia-i-integracje\">Narzędzia i integracje</a></li>\n<li><a href=\"#cz%C4%99ste-pu%C5%82apki-i-wskaz%C3%B3wki\">Częste pułapki i wskazówki</a>\n<ul>\n<li><a href=\"#najcz%C4%99stsze-b%C5%82%C4%99dy-i-jak-je-naprawi%C4%87\">Najczęstsze błędy i jak je naprawić</a></li>\n</ul>\n</li>\n<li><a href=\"#typescript-w-projektach-open-source-i-pracy-zespo%C5%82owej\">TypeScript w projektach open-source i pracy zespołowej</a></li>\n<li><a href=\"#gdzie-znale%C5%BA%C4%87-deklaracje-typ%C3%B3w-do-bibliotek-js\">Gdzie znaleźć deklaracje typów do bibliotek JS?</a></li>\n<li><a href=\"#gdzie-szuka%C4%87-pomocy\">Gdzie szukać pomocy?</a></li>\n<li><a href=\"#zadania-praktyczne\">Zadania praktyczne</a></li>\n<li><a href=\"#podsumowanie\">Podsumowanie</a></li>\n</ol>\n<hr>\n<h2 id=\"co-to-jest-typescript\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#co-to-jest-typescript\">>></a>Co to jest TypeScript?</h2>\n<p>TypeScript to nadzbiór JavaScriptu stworzony przez Microsoft. Oznacza to, że każdy poprawny kod JavaScript jest też poprawnym kodem TypeScript. TypeScript wprowadza jednak <strong>statyczne typowanie</strong>, co pozwala na wcześniejsze wykrywanie błędów w kodzie i daje wiele narzędzi do pisania lepiej zorganizowanych aplikacji.</p>\n<ul>\n<li><strong>JavaScript + Typy = TypeScript</strong></li>\n<li>Pliki TypeScript mają rozszerzenie <code>.ts</code> (zamiast <code>.js</code>).</li>\n<li>TypeScript kompiluje się do „czystego” JavaScriptu, który działa w każdej przeglądarce lub środowisku Node.js.</li>\n</ul>\n<hr>\n<h2 id=\"czym-różni-się-typescript-od-javascript\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#czym-różni-się-typescript-od-javascript\">>></a>Czym różni się TypeScript od JavaScript?</h2>\n<p>TypeScript to JavaScript z dodatkowymi możliwościami typowania i narzędziami dla programistów.</p>\n<ul>\n<li><strong>Kompilacja</strong>: Kod TypeScript musi zostać przetłumaczony (skompliowany) do JavaScriptu, zanim zostanie uruchomiony w przeglądarce lub Node.js.</li>\n<li><strong>Typowanie</strong>: TypeScript pozwala wykryć błędy typów już podczas pisania kodu, zanim uruchomisz aplikację. JavaScript wykrywa większość błędów dopiero w czasie działania.</li>\n<li><strong>Lepsze wsparcie dla narzędzi</strong>: Edytory kodu mogą lepiej podpowiadać i wykrywać błędy w kodzie TypeScript dzięki znajomości typów.</li>\n</ul>\n<hr>\n<h2 id=\"dlaczego-warto-korzystać-z-typescript\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#dlaczego-warto-korzystać-z-typescript\">>></a>Dlaczego warto korzystać z TypeScript?</h2>\n<ul>\n<li><strong>Bezpieczeństwo</strong> – statyczne typowanie pomaga uniknąć wielu błędów, które normalnie wykryłbyś dopiero w trakcie działania aplikacji.</li>\n<li><strong>Lepsza czytelność</strong> – typy są jak dokumentacja, która podpowiada co dana funkcja przyjmuje i zwraca, ułatwiając pracę w zespole.</li>\n<li><strong>Wsparcie dla nowoczesnych narzędzi</strong> – edytory kodu mogą lepiej podpowiadać, autouzupełniać i wykrywać błędy.</li>\n<li><strong>Skalowalność</strong> – kod staje się łatwiejszy do utrzymania, szczególnie w dużych projektach.</li>\n<li><strong>Łatwa integracja z istniejącym kodem JS</strong> – możesz stopniowo migrować projekt z JavaScriptu na TypeScript.</li>\n<li><strong>Popularność</strong> – TypeScript jest szeroko używany w dużych projektach open-source (np. Angular, VSCode, Deno).</li>\n<li><strong>Wspiera nowoczesne funkcje JS</strong> – pozwala korzystać z najnowszych funkcji JavaScript, nawet jeśli nie są jeszcze wspierane przez wszystkie przeglądarki.</li>\n</ul>\n<hr>\n<h2 id=\"jak-zacząć-z-typescript\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#jak-zacząć-z-typescript\">>></a>Jak zacząć z TypeScript?</h2>\n<h3 id=\"instalacja\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#instalacja\">>>></a>Instalacja</h3>\n<p>Najprostszym sposobem na rozpoczęcie pracy z TypeScript jest instalacja globalna kompilatora:</p>\n<pre><code class=\"hljs language-bash\">npm install -g typescript\n</code></pre>\n<p>Sprawdź wersję poleceniem:</p>\n<pre><code class=\"hljs language-bash\">tsc --version\n</code></pre>\n<p>Możesz też dodać TypeScript jako zależność do swojego projektu:</p>\n<pre><code class=\"hljs language-bash\">npm install --save-dev typescript\n</code></pre>\n<h3 id=\"kompilacja-plików-ts-do-js\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#kompilacja-plików-ts-do-js\">>>></a>Kompilacja plików <code>.ts</code> do <code>.js</code></h3>\n<p>TypeScript nie jest rozumiany bezpośrednio przez przeglądarki. Musisz najpierw <strong>skompilować</strong> (<code>transpilować</code>) swój kod do JavaScriptu:</p>\n<pre><code class=\"hljs language-bash\">tsc nazwa-pliku.ts\n</code></pre>\n<p>To wygeneruje plik <code>nazwa-pliku.js</code> gotowy do użycia w przeglądarce lub Node.js.</p>\n<h3 id=\"konfiguracja-projektu-i-tsconfigjson\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#konfiguracja-projektu-i-tsconfigjson\">>>></a>Konfiguracja projektu i tsconfig.json</h3>\n<p>W większych projektach warto utworzyć plik <code>tsconfig.json</code>, aby skonfigurować ustawienia kompilatora:</p>\n<pre><code class=\"hljs language-bash\">tsc --init\n</code></pre>\n<p>Przykładowy plik <code>tsconfig.json</code>:</p>\n<pre><code class=\"hljs language-json\"><span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-attr\">\"compilerOptions\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">\"target\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"es6\"</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">\"module\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"commonjs\"</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">\"strict\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-literal\"><span class=\"hljs-keyword\">true</span></span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">\"outDir\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"./dist\"</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">\"include\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">\"src/**/*\"</span><span class=\"hljs-punctuation\">]</span>\n<span class=\"hljs-punctuation\">}</span>\n</code></pre>\n<ul>\n<li><code>target</code> – do jakiej wersji JS kompilować kod,</li>\n<li><code>module</code> – jakiego systemu modułów używać,</li>\n<li><code>strict</code> – włącza rygorystyczne sprawdzanie typów,</li>\n<li><code>outDir</code> – gdzie mają trafić pliki <code>.js</code> po kompilacji,</li>\n<li><code>include</code> – które pliki mają być kompilowane.</li>\n</ul>\n<h3 id=\"twój-pierwszy-projekt-typescript\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#twój-pierwszy-projekt-typescript\">>>></a>Twój pierwszy projekt TypeScript</h3>\n<ol>\n<li>\n<p>Utwórz folder projektu i zainicjuj npm:</p>\n<pre><code class=\"hljs language-bash\"><span class=\"hljs-built_in\">mkdir</span> moj-projekt-ts\n<span class=\"hljs-built_in\">cd</span> moj-projekt-ts\nnpm init -y\nnpm install typescript --save-dev\nnpx tsc --init\n</code></pre>\n</li>\n<li>\n<p>Dodaj plik <code>src/index.ts</code> z dowolnym kodem, np.:</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">\"Hello TypeScript!\"</span>);\n</code></pre>\n</li>\n<li>\n<p>Skompiluj i uruchom:</p>\n<pre><code class=\"hljs language-bash\">npx tsc\nnode dist/index.js\n</code></pre>\n</li>\n</ol>\n<hr>\n<h2 id=\"podstawy-składni-typescript\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podstawy-składni-typescript\">>></a>Podstawy składni TypeScript</h2>\n<h3 id=\"typowanie-zmiennych\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#typowanie-zmiennych\">>>></a>Typowanie zmiennych</h3>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">liczba</span>: <span class=\"hljs-built_in\">number</span> = <span class=\"hljs-number\">42</span>;\n<span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">tekst</span>: <span class=\"hljs-built_in\">string</span> = <span class=\"hljs-string\">\"Cześć TypeScript!\"</span>;\n<span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">isActive</span>: <span class=\"hljs-built_in\">boolean</span> = <span class=\"hljs-literal\">true</span>;\n</code></pre>\n<h3 id=\"typowanie-funkcji\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#typowanie-funkcji\">>>></a>Typowanie funkcji</h3>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">dodaj</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">a</span>: <span class=\"hljs-built_in\">number</span>, <span class=\"hljs-attr\">b</span>: <span class=\"hljs-built_in\">number</span></span>): <span class=\"hljs-built_in\">number</span> {\n  <span class=\"hljs-keyword\">return</span> a + b;\n}\n</code></pre>\n<p>Możesz też typować parametry domyślne, opcjonalne i funkcje strzałkowe:</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">const</span> powiedzHej = (<span class=\"hljs-attr\">imie</span>: <span class=\"hljs-built_in\">string</span> = <span class=\"hljs-string\">\"Gość\"</span>): <span class=\"hljs-function\"><span class=\"hljs-params\">string</span> =></span> <span class=\"hljs-string\">`Hej, <span class=\"hljs-subst\">${imie}</span>!`</span>;\n</code></pre>\n<h3 id=\"interfejsy\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#interfejsy\">>>></a>Interfejsy</h3>\n<p>Interfejsy pozwalają opisać strukturę obiektów:</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">Osoba</span> {\n  <span class=\"hljs-attr\">imie</span>: <span class=\"hljs-built_in\">string</span>;\n  <span class=\"hljs-attr\">wiek</span>: <span class=\"hljs-built_in\">number</span>;\n  <span class=\"hljs-attr\">email</span>?: <span class=\"hljs-built_in\">string</span>; <span class=\"hljs-comment\">// pole opcjonalne</span>\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">user</span>: <span class=\"hljs-title class_\">Osoba</span> = {\n  <span class=\"hljs-attr\">imie</span>: <span class=\"hljs-string\">\"Jan\"</span>,\n  <span class=\"hljs-attr\">wiek</span>: <span class=\"hljs-number\">30</span>,\n};\n</code></pre>\n<h3 id=\"typy-złożone\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#typy-złożone\">>>></a>Typy złożone</h3>\n<p>Możesz używać tablic, unii typów oraz typów własnych:</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">liczby</span>: <span class=\"hljs-built_in\">number</span>[] = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>];\n<span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">tekstLubNumer</span>: <span class=\"hljs-built_in\">string</span> | <span class=\"hljs-built_in\">number</span> = <span class=\"hljs-string\">\"hej\"</span>;\n<span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">Punkt</span> = { <span class=\"hljs-attr\">x</span>: <span class=\"hljs-built_in\">number</span>; <span class=\"hljs-attr\">y</span>: <span class=\"hljs-built_in\">number</span> };\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">p</span>: <span class=\"hljs-title class_\">Punkt</span> = { <span class=\"hljs-attr\">x</span>: <span class=\"hljs-number\">3</span>, <span class=\"hljs-attr\">y</span>: <span class=\"hljs-number\">7</span> };\n</code></pre>\n<h3 id=\"klasy-i-dziedziczenie\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#klasy-i-dziedziczenie\">>>></a>Klasy i dziedziczenie</h3>\n<p>TypeScript wspiera klasy i dziedziczenie (OOP):</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Zwierze</span> {\n  <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-attr\">nazwa</span>: <span class=\"hljs-built_in\">string</span></span>) {}\n  <span class=\"hljs-title function_\">wydajDzwiek</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">\"Dźwięk!\"</span>);\n  }\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Pies</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">Zwierze</span> {\n  <span class=\"hljs-title function_\">wydajDzwiek</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">\"Hau hau!\"</span>);\n  }\n}\n\n<span class=\"hljs-keyword\">const</span> burek = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Pies</span>(<span class=\"hljs-string\">\"Burek\"</span>);\nburek.<span class=\"hljs-title function_\">wydajDzwiek</span>(); <span class=\"hljs-comment\">// Hau hau!</span>\n</code></pre>\n<h3 id=\"enumy\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#enumy\">>>></a>Enumy</h3>\n<p>Enumy pozwalają na definiowanie własnych typów wyliczeniowych:</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">enum</span> <span class=\"hljs-title class_\">Kolor</span> {\n  <span class=\"hljs-title class_\">Czerwony</span>,\n  <span class=\"hljs-title class_\">Zielony</span>,\n  <span class=\"hljs-title class_\">Niebieski</span>,\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">ulubionyKolor</span>: <span class=\"hljs-title class_\">Kolor</span> = <span class=\"hljs-title class_\">Kolor</span>.<span class=\"hljs-property\">Zielony</span>;\n</code></pre>\n<h3 id=\"alias-typów\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#alias-typów\">>>></a>Alias typów</h3>\n<p>Alias pozwala nazwać typ złożony:</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">type</span> <span class=\"hljs-variable constant_\">ID</span> = <span class=\"hljs-built_in\">string</span> | <span class=\"hljs-built_in\">number</span>;\n<span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">userId</span>: <span class=\"hljs-variable constant_\">ID</span> = <span class=\"hljs-number\">123</span>;\n</code></pre>\n<hr>\n<h2 id=\"jak-używać-typów-w-praktyce\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#jak-używać-typów-w-praktyce\">>></a>Jak używać typów w praktyce?</h2>\n<ul>\n<li><strong>Funkcje z typami zwracanymi i parametrami opcjonalnymi:</strong>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">powiedz</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">imie</span>?: <span class=\"hljs-built_in\">string</span></span>): <span class=\"hljs-built_in\">string</span> {\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`Cześć, <span class=\"hljs-subst\">${imie ?? <span class=\"hljs-string\">\"nieznajomy\"</span>}</span>!`</span>;\n}\n</code></pre>\n</li>\n<li><strong>Łączenie kilku typów:</strong>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">Admin</span> = { <span class=\"hljs-attr\">rola</span>: <span class=\"hljs-string\">\"admin\"</span>; <span class=\"hljs-attr\">poziom</span>: <span class=\"hljs-built_in\">number</span> };\n<span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">Uzytkownik</span> = { <span class=\"hljs-attr\">rola</span>: <span class=\"hljs-string\">\"user\"</span>; <span class=\"hljs-attr\">nick</span>: <span class=\"hljs-built_in\">string</span> };\n<span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">Osoba</span> = <span class=\"hljs-title class_\">Admin</span> | <span class=\"hljs-title class_\">Uzytkownik</span>;\n</code></pre>\n</li>\n<li><strong>Tablice obiektów o określonym typie:</strong>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">osoby</span>: <span class=\"hljs-title class_\">Osoba</span>[] = [\n  { <span class=\"hljs-attr\">rola</span>: <span class=\"hljs-string\">\"admin\"</span>, <span class=\"hljs-attr\">poziom</span>: <span class=\"hljs-number\">1</span> },\n  { <span class=\"hljs-attr\">rola</span>: <span class=\"hljs-string\">\"user\"</span>, <span class=\"hljs-attr\">nick</span>: <span class=\"hljs-string\">\"kuba\"</span> },\n];\n</code></pre>\n</li>\n</ul>\n<hr>\n<h2 id=\"narzędzia-i-integracje\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#narzędzia-i-integracje\">>></a>Narzędzia i integracje</h2>\n<p>TypeScript świetnie współpracuje z popularnymi frameworkami frontendowymi jak React, Angular czy Vue. Wiele projektów open-source już teraz korzysta z TypeScriptu, więc znajomość tego języka to duży plus na rynku pracy!</p>\n<ul>\n<li><strong>VSCode</strong> – edytor Microsoftu ma doskonałe wsparcie dla TypeScript (podpowiedzi, refaktoryzacje, szybkie przechodzenie po kodzie).</li>\n<li><strong>tsconfig.json</strong> – plik konfiguracyjny pozwalający dostosować kompilację do potrzeb projektu.</li>\n<li><strong>Integracja z narzędziami budującymi</strong> – TypeScript można łatwo połączyć z Webpackiem, Babel, ESLint i innymi.</li>\n<li><strong>Systemy CI/CD</strong> – TypeScript jest łatwy do zintegrowania z pipeline’ami (np. GitHub Actions, GitLab CI).</li>\n</ul>\n<hr>\n<h2 id=\"częste-pułapki-i-wskazówki\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#częste-pułapki-i-wskazówki\">>></a>Częste pułapki i wskazówki</h2>\n<ul>\n<li><strong>Nie musisz typować wszystkiego!</strong> – na początek możesz typować tylko kluczowe fragmenty kodu, stopniowo rozszerzając typowanie.</li>\n<li><strong>Stopniowa migracja</strong> – możesz przerabiać swój projekt z JavaScriptu na TypeScript krok po kroku, np. zmieniając rozszerzenia plików na <code>.ts</code> i naprawiając błędy kompilatora.</li>\n<li><strong>Współpraca z bibliotekami JS</strong> – TypeScript obsługuje pliki deklaracji typów (<code>@types/</code>), które pozwalają korzystać z popularnych bibliotek JavaScript z pełnym wsparciem typów. Wystarczy zainstalować odpowiedni pakiet, np.:\n<pre><code class=\"hljs language-bash\">npm install --save-dev @types/lodash\n</code></pre>\n</li>\n<li><strong>Wyłączaj sprawdzanie niektórych plików</strong> – możesz pominąć sprawdzanie typów dla wybranych plików przez dodanie <code>// @ts-nocheck</code> na górze pliku.</li>\n<li><strong>Czytaj błędy kompilatora</strong> – komunikaty TypeScript są najczęściej bardzo pomocne i dokładnie tłumaczą, co należy poprawić.</li>\n</ul>\n<h3 id=\"najczęstsze-błędy-i-jak-je-naprawić\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#najczęstsze-błędy-i-jak-je-naprawić\">>>></a>Najczęstsze błędy i jak je naprawić</h3>\n<ul>\n<li>\n<p><strong>Błąd typowania:</strong></p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">wiek</span>: <span class=\"hljs-built_in\">number</span> = <span class=\"hljs-string\">\"25\"</span>; <span class=\"hljs-comment\">// Błąd: Type 'string' is not assignable to type 'number'</span>\n</code></pre>\n<p><strong>Popraw:</strong></p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">wiek</span>: <span class=\"hljs-built_in\">number</span> = <span class=\"hljs-number\">25</span>;\n</code></pre>\n</li>\n<li>\n<p><strong>Brak typu dla zwracanej wartości funkcji:</strong></p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">zwrocTekst</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">42</span>;\n}\n</code></pre>\n<p><strong>Popraw:</strong></p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">zwrocTekst</span>(<span class=\"hljs-params\"></span>): <span class=\"hljs-built_in\">string</span> {\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"Tekst\"</span>;\n}\n</code></pre>\n</li>\n</ul>\n<hr>\n<h2 id=\"typescript-w-projektach-open-source-i-pracy-zespołowej\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#typescript-w-projektach-open-source-i-pracy-zespołowej\">>></a>TypeScript w projektach open-source i pracy zespołowej</h2>\n<ul>\n<li>TypeScript pomaga w pracy zespołowej, bo kod jest bardziej czytelny i przewidywalny.</li>\n<li>Wiele popularnych bibliotek (np. React, Angular, Express) ma swoje typy lub nawet są napisane w TypeScript.</li>\n<li>W dużych projektach firmowych i open-source praktycznie zawsze warto używać TypeScriptu, by uniknąć błędów i zwiększyć produktywność zespołu.</li>\n</ul>\n<hr>\n<h2 id=\"gdzie-znaleźć-deklaracje-typów-do-bibliotek-js\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#gdzie-znaleźć-deklaracje-typów-do-bibliotek-js\">>></a>Gdzie znaleźć deklaracje typów do bibliotek JS?</h2>\n<p>Nie każda biblioteka JavaScript ma wbudowane typy. Możesz jednak łatwo doinstalować oficjalne deklaracje typów.</p>\n<ul>\n<li>Szukaj paczek <code>@types/</code> w npm, np. dla Lodash:\n<pre><code class=\"hljs language-bash\">npm install --save-dev @types/lodash\n</code></pre>\n</li>\n<li>Dzięki temu możesz korzystać z bibliotek JS z pełną obsługą typów w TypeScript.</li>\n</ul>\n<hr>\n<h2 id=\"gdzie-szukać-pomocy\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#gdzie-szukać-pomocy\">>></a>Gdzie szukać pomocy?</h2>\n<ul>\n<li>Oficjalna dokumentacja: <a href=\"https://www.typescriptlang.org/docs/\">https://www.typescriptlang.org/docs/</a></li>\n<li>Playground online: <a href=\"https://www.typescriptlang.org/play\">https://www.typescriptlang.org/play</a></li>\n<li>Społeczność: Stack Overflow, Discord, GitHub, fora tematyczne</li>\n</ul>\n<p>Dodatkowo na GitHubie znajdziesz mnóstwo przykładowych projektów opartych o TypeScript, które mogą posłużyć za inspirację.</p>\n<hr>\n<h2 id=\"zadania-praktyczne\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadania-praktyczne\">>></a>Zadania praktyczne</h2>\n<p>Oto zadania, dzięki którym lepiej zrozumiesz podstawy TypeScript. Sprawdź się i rozwijaj swoje umiejętności!</p>\n<hr>\n<h3 id=\"zadanie-1-typowanie-zmiennych\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-1-typowanie-zmiennych\">>>></a>Zadanie 1: Typowanie zmiennych</h3>\n<p>Zadeklaruj trzy zmienne: liczbę, tekst oraz wartość logiczną – każda powinna być odpowiednio otagowana typem.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">liczba</span>: <span class=\"hljs-built_in\">number</span> = <span class=\"hljs-number\">10</span>;\n<span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">tekst</span>: <span class=\"hljs-built_in\">string</span> = <span class=\"hljs-string\">\"Witaj TypeScript!\"</span>;\n<span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">aktywny</span>: <span class=\"hljs-built_in\">boolean</span> = <span class=\"hljs-literal\">true</span>;\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-2-funkcja-z-typowanymi-argumentami\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-2-funkcja-z-typowanymi-argumentami\">>>></a>Zadanie 2: Funkcja z typowanymi argumentami</h3>\n<p>Napisz funkcję <code>dodaj</code>, która przyjmuje dwa argumenty typu <code>number</code> i zwraca ich sumę. Nie zapomnij o typach!</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">dodaj</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">a</span>: <span class=\"hljs-built_in\">number</span>, <span class=\"hljs-attr\">b</span>: <span class=\"hljs-built_in\">number</span></span>): <span class=\"hljs-built_in\">number</span> {\n  <span class=\"hljs-keyword\">return</span> a + b;\n}\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-3-interfejs-i-obiekt\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-3-interfejs-i-obiekt\">>>></a>Zadanie 3: Interfejs i obiekt</h3>\n<p>Zdefiniuj interfejs <code>Samochod</code> z polami <code>marka</code> (string) oraz <code>rok</code> (number). Następnie utwórz obiekt typu <code>Samochod</code>.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">Samochod</span> {\n  <span class=\"hljs-attr\">marka</span>: <span class=\"hljs-built_in\">string</span>;\n  <span class=\"hljs-attr\">rok</span>: <span class=\"hljs-built_in\">number</span>;\n}\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">auto</span>: <span class=\"hljs-title class_\">Samochod</span> = {\n  <span class=\"hljs-attr\">marka</span>: <span class=\"hljs-string\">\"Toyota\"</span>,\n  <span class=\"hljs-attr\">rok</span>: <span class=\"hljs-number\">2020</span>,\n};\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-4-alias-typu-i-unia-typów\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-4-alias-typu-i-unia-typów\">>>></a>Zadanie 4: Alias typu i unia typów</h3>\n<p>Zdefiniuj alias typu <code>ID</code> jako <code>string</code> lub <code>number</code>. Następnie zadeklaruj zmienną <code>userId</code> i przypisz jej liczbę.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">type</span> <span class=\"hljs-variable constant_\">ID</span> = <span class=\"hljs-built_in\">string</span> | <span class=\"hljs-built_in\">number</span>;\n<span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">userId</span>: <span class=\"hljs-variable constant_\">ID</span> = <span class=\"hljs-number\">123</span>;\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-5-klasa-i-dziedziczenie\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-5-klasa-i-dziedziczenie\">>>></a>Zadanie 5: Klasa i dziedziczenie</h3>\n<p>Stwórz klasę <code>Zwierze</code> z polem <code>nazwa</code> (string) oraz metodą <code>wydajDzwiek</code>. Następnie utwórz klasę <code>Kot</code> dziedziczącą po <code>Zwierze</code> i nadpisz metodę, aby wypisywała \"Miau!\".</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Zwierze</span> {\n  <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-attr\">nazwa</span>: <span class=\"hljs-built_in\">string</span></span>) {}\n  <span class=\"hljs-title function_\">wydajDzwiek</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">\"Dźwięk!\"</span>);\n  }\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Kot</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">Zwierze</span> {\n  <span class=\"hljs-title function_\">wydajDzwiek</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">\"Miau!\"</span>);\n  }\n}\n\n<span class=\"hljs-keyword\">const</span> mruczek = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Kot</span>(<span class=\"hljs-string\">\"Mruczek\"</span>);\nmruczek.<span class=\"hljs-title function_\">wydajDzwiek</span>(); <span class=\"hljs-comment\">// Miau!</span>\n</code></pre>\n</details>\n<hr>\n<h2 id=\"podsumowanie\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podsumowanie\">>></a>Podsumowanie</h2>\n<p>TypeScript to świetne narzędzie dla każdego, kto chce pisać nowoczesny, bezpieczny i skalowalny kod JavaScript. Dzięki statycznemu typowaniu, lepszej czytelności i wsparciu dla narzędzi deweloperskich praca z nim staje się łatwiejsza i przyjemniejsza. Jeśli jeszcze nie próbowałeś – spróbuj! 👨🏻‍💻👩🏼‍💻</p>","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/wprowadzenie-do-typescript.md","6 minut",{"_8":677,"_10":678,"_12":679,"_22":684,"_24":685,"_34":686,"_26":729,"_28":730,"_30":731,"_32":732,"_35":283},"Pierwsze kroki z TypeScript w React – praktyczne podstawy","Zrozum podstawy TypeScript w środowisku React – prostym językiem i na praktycznych przykładach.",[17,41,18,293,680,681,682,683,104],"komponenty","props","state","kurs",[17,41],["D",1750550400000],{"_8":687,"_110":688},"Quiz: TypeScript w React – podstawy",[689,697,705,713,721],{"_113":690,"_115":691,"_121":150,"_123":696},"<p>Które zdanie najlepiej opisuje główną zaletę TypeScript w projektach React?</p>",[692,693,694,695],"Eliminuje konieczność używania npm.","Pozwala na typowanie propsów i stanu, zwiększając bezpieczeństwo kodu.","Generuje automatycznie dokumentację komponentów.","Zamienia kod na czysty CSS.","Największą zaletą jest wprowadzenie typów w propsach, stanie i API komponentów.",{"_113":698,"_115":699,"_121":122,"_123":704},"<p>Jak poprawnie zadeklarować stan liczbowy w komponencie funkcyjnym z użyciem useState?</p>",[700,701,702,703],"const [count, setCount] = useState<number>(0);","const [count, setCount] = useState<string>(0);","let count = useState(0);","const [count, setCount] = useState(0: number);","Poprawna składnia to useState<number>(0).",{"_113":706,"_115":707,"_121":132,"_123":712},"<p>Jak opisać typ propsów w komponencie funkcyjnym?</p>",[708,709,710,711],"Wyłącznie przez any.","Nie trzeba typować propsów w TS.","Przez interface lub type i przekazać go do propsów funkcji.","Tylko poprzez klasę.","Propsy typujemy przez interface lub type i używamy ich w definicji funkcji.",{"_113":714,"_115":715,"_121":141,"_123":720},"<p>Który kod prawidłowo typuje referencję do przycisku?</p>",[716,717,718,719],"const ref = useRef<Button>(null);","const ref = useRef(null);","const ref = useRef<HTMLDivElement>(null);","const ref = useRef<HTMLButtonElement>(null);","Poprawny typ dla referencji do buttona to HTMLButtonElement.",{"_113":722,"_115":723,"_121":132,"_123":728},"<p>Co wyświetli poniższy komponent?</p>\n<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">WelcomeProps</span> = { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span> };\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">Welcome</span> = (<span class=\"hljs-params\">{ name }: <span class=\"hljs-title class_\">WelcomeProps</span></span>) => <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Cześć, {name}!<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span></span>;\n</code></pre>\n<p>Jeśli wywołasz <code>&#x3C;Welcome name=\"Ala\" /></code></p>",[724,725,726,727],"Błąd kompilacji","Witaj, Ala!","Cześć, Ala!","undefined","Komponent wyświetli 'Cześć, Ala!'.","5b4b86c5-068a-4b39-bfa6-a28ccd5ecaa4","pierwsze-kroki-z-typescript-w-react","<p>Chcesz pisać nowoczesne aplikacje i mieć pewność, że Twój kod jest czysty, bezpieczny i przyszłościowy? 🚀 TypeScript w połączeniu z React to duet, który pokochasz od pierwszego projektu! Ten przewodnik przeprowadzi Cię krok po kroku przez najważniejsze podstawy – bez zbędnych teorii, za to z praktycznymi przykładami i zadaniami, które pomogą Ci naprawdę zrozumieć temat.</p>\n<h2 id=\"spis-treści\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#spis-treści\">>></a>Spis treści</h2>\n<ol>\n<li><a href=\"#dlaczego-warto-u%C5%BCywa%C4%87-typescript-w-react\">Dlaczego warto używać TypeScript w React?</a></li>\n<li><a href=\"#podstawowe-typy-w-typescript\">Podstawowe typy w TypeScript</a></li>\n<li><a href=\"#tworzenie-komponent%C3%B3w-funkcyjnych-z-typami\">Tworzenie komponentów funkcyjnych z typami</a></li>\n<li><a href=\"#props-i-typowanie-props%C3%B3w\">Props i typowanie propsów</a></li>\n<li><a href=\"#typowanie-stanu-usestate\">Typowanie stanu (useState)</a></li>\n<li><a href=\"#typowanie-referencji-useref\">Typowanie referencji (useRef)</a></li>\n<li><a href=\"#przydatne-narz%C4%99dzia-i-wskaz%C3%B3wki\">Przydatne narzędzia i wskazówki</a></li>\n<li><a href=\"#zadania-do-wykonania\">Zadania do wykonania</a>\n<ul>\n<li><a href=\"#zadanie-1-prosty-komponent-powitalny\">Zadanie 1: Prosty komponent powitalny</a></li>\n<li><a href=\"#zadanie-2-typowanie-tablicy-liczb\">Zadanie 2: Typowanie tablicy liczb</a></li>\n<li><a href=\"#zadanie-3-komponent-z-typowanymi-propsami-i-zdarzeniem\">Zadanie 3: Komponent z typowanymi propsami i zdarzeniem</a></li>\n<li><a href=\"#zadanie-4-typowanie-obiektu-w-stanie\">Zadanie 4: Typowanie obiektu w stanie</a></li>\n<li><a href=\"#zadanie-5-lista-komponent%C3%B3w-na-podstawie-tablicy-obiekt%C3%B3w\">Zadanie 5: Lista komponentów na podstawie tablicy obiektów</a></li>\n</ul>\n</li>\n<li><a href=\"#podsumowanie\">Podsumowanie</a></li>\n</ol>\n<hr>\n<h2 id=\"dlaczego-warto-używać-typescript-w-react\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#dlaczego-warto-używać-typescript-w-react\">>></a>Dlaczego warto używać TypeScript w React?</h2>\n<p>TypeScript to nie tylko “lepszy JavaScript” – to Twoja tajna broń na błędy w kodzie! Dzięki niemu:</p>\n<ul>\n<li>🛡️ Kod jest bardziej przewidywalny i bezpieczniejszy – typy wykrywają literówki i błędy logiczne już podczas pisania.</li>\n<li>⚡ Praca w zespole staje się łatwiejsza – czytelny kod, lepsze podpowiedzi w edytorze (IntelliSense), szybkie ogarnianie cudzych projektów.</li>\n<li>🔄 Refaktoryzacje nie są już straszne – zmiany w typach wymuszają poprawki w całym projekcie, więc nic Ci nie umknie.</li>\n<li>📖 Typy to żywa dokumentacja – od razu wiesz, co i gdzie przekazujesz do komponentów oraz funkcji.</li>\n</ul>\n<p>W React TypeScript to must-have, jeśli chcesz:</p>\n<ul>\n<li>jasno typować propsy i stan (<code>useState</code>, <code>useReducer</code>),</li>\n<li>wygodnie pracować z referencjami (<code>useRef</code>),</li>\n<li>bez obaw korzystać z zewnętrznych bibliotek i API.</li>\n</ul>\n<hr>\n<h2 id=\"podstawowe-typy-w-typescript\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podstawowe-typy-w-typescript\">>></a>Podstawowe typy w TypeScript</h2>\n<p>Najczęściej spotkasz się z:</p>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span> = <span class=\"hljs-string\">\"Ala\"</span>;\n<span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">age</span>: <span class=\"hljs-built_in\">number</span> = <span class=\"hljs-number\">25</span>;\n<span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">isActive</span>: <span class=\"hljs-built_in\">boolean</span> = <span class=\"hljs-literal\">true</span>;\n<span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">numbers</span>: <span class=\"hljs-built_in\">number</span>[] = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>];\n<span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">person</span>: { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span>; <span class=\"hljs-attr\">age</span>: <span class=\"hljs-built_in\">number</span> } = { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Jan\"</span>, <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">30</span> };\n</code></pre>\n<p>Chcesz być PRO? Twórz własne typy i interfejsy – kod będzie czytelniejszy i łatwiejszy do rozbudowy:</p>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">User</span> = {\n  <span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\">number</span>;\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span>;\n};\n\n<span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">Product</span> {\n  <span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\">number</span>;\n  <span class=\"hljs-attr\">price</span>: <span class=\"hljs-built_in\">number</span>;\n}\n</code></pre>\n<blockquote>\n<p>💡 <strong>TIP:</strong> Korzystaj z własnych typów zawsze, gdy masz złożone obiekty lub korzystasz z API!</p>\n</blockquote>\n<hr>\n<h2 id=\"tworzenie-komponentów-funkcyjnych-z-typami\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#tworzenie-komponentów-funkcyjnych-z-typami\">>></a>Tworzenie komponentów funkcyjnych z typami</h2>\n<p>Najprostszy komponent funkcyjny w TypeScript:</p>\n<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">HelloWorld</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>Hello, World!<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span></span>;\n}\n</code></pre>\n<p>Nie używasz propsów? Nie musisz nic typować!<br>\nAle gdy przekazujesz dane do komponentu – patrz niżej.</p>\n<hr>\n<h2 id=\"props-i-typowanie-propsów\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#props-i-typowanie-propsów\">>></a>Props i typowanie propsów</h2>\n<p>Propsy to podstawa pracy z Reactem! W TypeScript opisujesz je przez interfejs lub typ:</p>\n<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">WelcomeProps</span> {\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span>;\n}\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">Welcome</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">props</span>: <span class=\"hljs-title class_\">WelcomeProps</span></span>) {\n  <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Witaj, {props.name}!<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span></span>;\n}\n</code></pre>\n<p><strong>Co zyskujesz?</strong></p>\n<ul>\n<li>Edytor podpowiada, co możesz przekazać,</li>\n<li>Błyskawicznie wykrywasz literówki i brakujące dane,</li>\n<li>Tworzysz samodokumentujące się komponenty!</li>\n</ul>\n<hr>\n<h2 id=\"typowanie-stanu-usestate\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#typowanie-stanu-usestate\">>></a>Typowanie stanu (useState)</h2>\n<p>Chcesz jasno określić, co przechowujesz w stanie? Z TypeScriptem to proste:</p>\n<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react\"</span>;\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">Counter</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">const</span> [count, setCount] = useState&#x3C;<span class=\"hljs-built_in\">number</span>>(<span class=\"hljs-number\">0</span>);\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Licznik: {count}<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =></span> setCount((prev) => prev - 1)}>Zmniejsz<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">button</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =></span> setCount((prev) => prev + 1)}>Zwiększ<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">button</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span></span>\n  );\n}\n</code></pre>\n<blockquote>\n<p>⭐ <strong>Pro tip:</strong> Przy bardziej złożonych stanach (np. obiekty, tablice) – zawsze wpisuj typ ręcznie, nawet jeśli TypeScript czasem sam się domyśli!</p>\n</blockquote>\n<hr>\n<h2 id=\"typowanie-referencji-useref\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#typowanie-referencji-useref\">>></a>Typowanie referencji (useRef)</h2>\n<p>Referencje to Twój most do DOM-u i wartości poza renderem:</p>\n<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { useRef, useCallback } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react\"</span>;\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">Counter</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">const</span> ref = useRef&#x3C;<span class=\"hljs-title class_\">HTMLButtonElement</span>>(<span class=\"hljs-literal\">null</span>);\n\n  <span class=\"hljs-keyword\">const</span> handleClick = <span class=\"hljs-title function_\">useCallback</span>(<span class=\"hljs-function\">() =></span> {\n    ref.<span class=\"hljs-property\">current</span>?.<span class=\"hljs-title function_\">focus</span>();\n  }, [ref]);\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{handleClick}</span>></span>\n        Kliknij aby sfokusować drugi przycisk\n      <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">button</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">{ref}</span>></span>Drugi przycisk<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">button</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span></span>\n  );\n}\n</code></pre>\n<p>Dzięki typowaniu masz pewność, do jakiego elementu się odwołujesz (<code>HTMLButtonElement</code>).</p>\n<hr>\n<h2 id=\"przydatne-narzędzia-i-wskazówki\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#przydatne-narzędzia-i-wskazówki\">>></a>Przydatne narzędzia i wskazówki</h2>\n<ul>\n<li><strong>TSX</strong> – pliki <code>.tsx</code> pozwalają pisać JSX z typami!</li>\n<li><strong>TypeScript Playground</strong> – testuj kod online: <a href=\"https://www.typescriptlang.org/play\">https://www.typescriptlang.org/play</a></li>\n<li><strong>Oficjalna dokumentacja React + TypeScript:</strong> <a href=\"https://react.dev/learn/typescript\">https://react.dev/learn/typescript</a></li>\n<li><strong>Chcesz szybko wystartować?</strong>\n<pre><code class=\"hljs language-bash\">npm init vite@latest my-app -- --template react-ts\n</code></pre>\n</li>\n</ul>\n<hr>\n<h2 id=\"zadania-do-wykonania\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadania-do-wykonania\">>></a>Zadania do wykonania</h2>\n<h3 id=\"zadanie-1-prosty-komponent-powitalny\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-1-prosty-komponent-powitalny\">>>></a>Zadanie 1: Prosty komponent powitalny</h3>\n<p>Stwórz komponent powitalny, który przyjmuje przez props imię użytkownika (typ string) i wyświetla komunikat \"Cześć, [imię]!\".</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">WelcomeProps</span> = {\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span>;\n};\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">Welcome</span> = (<span class=\"hljs-params\">{ name }: <span class=\"hljs-title class_\">WelcomeProps</span></span>) => <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Cześć, {name}!<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span></span>;\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-2-typowanie-tablicy-liczb\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-2-typowanie-tablicy-liczb\">>>></a>Zadanie 2: Typowanie tablicy liczb</h3>\n<p>Zadeklaruj w komponencie tablicę liczb jako stan przy użyciu useState oraz odpowiedniego typu.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react\"</span>;\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">NumbersComponent</span> = (<span class=\"hljs-params\"></span>) => {\n  <span class=\"hljs-keyword\">const</span> [numbers, setNumbers] = useState&#x3C;<span class=\"hljs-built_in\">number</span>[]>([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]);\n  <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span>></span>{numbers.join(\", \")}<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span></span>;\n};\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-3-komponent-z-typowanymi-propsami-i-zdarzeniem\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-3-komponent-z-typowanymi-propsami-i-zdarzeniem\">>>></a>Zadanie 3: Komponent z typowanymi propsami i zdarzeniem</h3>\n<p>Stwórz przycisk, który przyjmuje przez props funkcję onClick oraz tekst do wyświetlenia. Oba propsy odpowiednio wytypuj.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">ButtonProps</span> = {\n  <span class=\"hljs-attr\">label</span>: <span class=\"hljs-built_in\">string</span>;\n  <span class=\"hljs-attr\">onClick</span>: <span class=\"hljs-function\">() =></span> <span class=\"hljs-built_in\">void</span>;\n};\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">CustomButton</span> = (<span class=\"hljs-params\">{ label, onClick }: <span class=\"hljs-title class_\">ButtonProps</span></span>) => (\n  <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{onClick}</span>></span>{label}<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">button</span>></span></span>\n);\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-4-typowanie-obiektu-w-stanie\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-4-typowanie-obiektu-w-stanie\">>>></a>Zadanie 4: Typowanie obiektu w stanie</h3>\n<p>Zadeklaruj stan użytkownika jako obiekt z polami name (string) i age (number).</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react\"</span>;\n\n<span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">User</span> = {\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span>;\n  <span class=\"hljs-attr\">age</span>: <span class=\"hljs-built_in\">number</span>;\n};\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">UserComponent</span> = (<span class=\"hljs-params\"></span>) => {\n  <span class=\"hljs-keyword\">const</span> [user, setUser] = useState&#x3C;<span class=\"hljs-title class_\">User</span>>({ <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Anna\"</span>, <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">28</span> });\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span>></span>\n      {user.name}, wiek: {user.age}\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span></span>\n  );\n};\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-5-lista-komponentów-na-podstawie-tablicy-obiektów\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-5-lista-komponentów-na-podstawie-tablicy-obiektów\">>>></a>Zadanie 5: Lista komponentów na podstawie tablicy obiektów</h3>\n<p>Zadeklaruj tablicę użytkowników (name: string, id: number) i wyświetl imiona w liście.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">User</span> = {\n  <span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\">number</span>;\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span>;\n};\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">users</span>: <span class=\"hljs-title class_\">User</span>[] = [\n  { <span class=\"hljs-attr\">id</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Kasia\"</span> },\n  { <span class=\"hljs-attr\">id</span>: <span class=\"hljs-number\">2</span>, <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Marek\"</span> },\n];\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">UserTile</span> = (<span class=\"hljs-params\"><span class=\"hljs-attr\">props</span>: { user: User }</span>) => <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span>{props.user.name}<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span></span>;\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">UserList</span> = (<span class=\"hljs-params\"></span>) => (\n  <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ul</span>></span>\n    {users.map((user) => (\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">UserTile</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{user.id}</span> <span class=\"hljs-attr\">user</span>=<span class=\"hljs-string\">{user}</span> /></span>\n    ))}\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ul</span>></span></span>\n);\n</code></pre>\n</details>\n<hr>\n<h2 id=\"podsumowanie\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podsumowanie\">>></a>Podsumowanie</h2>\n<p>Gratulacje! 🎉 Zrobiłeś właśnie pierwszy krok w świat TypeScript + React – połączenia, które sprawia, że kod staje się bardziej przewidywalny, czytelny i po prostu przyjemniejszy w pracy. Dzięki typowaniu szybciej łapiesz błędy, a Twoje komponenty są super czytelne nie tylko dla Ciebie, ale też dla całego zespołu.</p>\n<p>Nie bój się eksperymentować, zadawać pytań i sprawdzać rzeczy w praktyce. Każdy kod napisany z TypeScriptem to inwestycja w Twój rozwój jako programisty! 🚀</p>","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/pierwsze-kroki-z-typescript-w-react.md",{"_8":734,"_10":735,"_12":736,"_22":738,"_24":739,"_34":740,"_26":778,"_28":61,"_30":779,"_32":780,"_35":675},"Wzorce projektowe w praktyce","Kompleksowy przewodnik po wzorcach projektowych — od podstaw po praktyczne przykłady w kontekście frontendu i backendu.",[59,71,17,16,18,737,683,104],"backend",[61,17],["D",1750550400000],{"_8":741,"_110":742},"Quiz: Wzorce projektowe",[743,751,759,765,773],{"_113":744,"_115":745,"_121":141,"_123":750},"<p>Do której grupy należy wzorzec Singleton?</p>",[746,747,748,749],"Strukturalne","Behawioralne","Funkcyjne","Kreacyjne","Singleton to wzorzec kreacyjny – dotyczy sposobu tworzenia obiektów.",{"_113":752,"_115":753,"_121":132,"_123":758},"<p>Który wzorzec umożliwia zamianę jednego interfejsu na inny, by umożliwić współpracę niekompatybilnych klas?</p>",[754,755,756,757],"Observer","Facade","Adapter","Builder","Adapter tłumaczy jeden interfejs na inny.",{"_113":760,"_115":761,"_121":150,"_123":764},"<p>Który wzorzec pozwala powiadamiać wiele obiektów o zmianie stanu bez ścisłego powiązania?</p>",[755,754,762,763],"Strategy","Factory","Observer służy do powiadamiania wielu obiektów o zmianie stanu.",{"_113":766,"_115":767,"_121":132,"_123":772},"<p>Co umożliwia wzorzec Strategy?</p>",[768,769,770,771],"Uproszczenie złożonego interfejsu","Budowanie złożonych obiektów krok po kroku","Dynamiczną zmianę algorytmu działania programu","Tworzenie jednej instancji klasy","Strategy pozwala dynamicznie zmieniać algorytm działania programu.",{"_113":774,"_115":775,"_121":141,"_123":777},"<p>Który wzorzec stosujesz, by uprościć korzystanie z kilku skomplikowanych systemów przez jeden prosty interfejs?</p>",[756,757,776,755],"Singleton","Facade upraszcza złożone systemy przez prosty interfejs.","16111686-68fb-4a6b-809b-5a56f5b7a72b","<p>Poznaj praktyczne zastosowania najważniejszych wzorców projektowych — prosto, przystępnie, z przykładami w TypeScript oraz z zadaniami do samodzielnego wykonania! 🏗️🚀</p>\n<p>Ten przewodnik to nie tylko teoria, ale również konkretne przykłady, wskazówki i gotowe rozwiązania do typowych problemów programistycznych, zarówno po stronie frontendu jak i backendu.</p>\n<h2 id=\"spis-treści\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#spis-treści\">>></a>Spis treści</h2>\n<ol>\n<li><a href=\"#czym-s%C4%85-wzorce-projektowe\">Czym są wzorce projektowe?</a></li>\n<li><a href=\"#jak-je-dzielimy\">Jak je dzielimy?</a></li>\n<li><a href=\"#wzorce-kreacyjne\">Wzorce kreacyjne</a>\n<ul>\n<li><a href=\"#singleton\">Singleton</a></li>\n<li><a href=\"#factory\">Factory</a></li>\n<li><a href=\"#builder\">Builder</a></li>\n</ul>\n</li>\n<li><a href=\"#wzorce-strukturalne\">Wzorce strukturalne</a>\n<ul>\n<li><a href=\"#facade\">Facade</a></li>\n<li><a href=\"#adapter\">Adapter</a></li>\n</ul>\n</li>\n<li><a href=\"#wzorce-behawioralne\">Wzorce behawioralne</a>\n<ul>\n<li><a href=\"#observer\">Observer</a></li>\n<li><a href=\"#strategy\">Strategy</a></li>\n</ul>\n</li>\n<li><a href=\"#zastosowania-wzorc%C3%B3w-w-praktyce\">Zastosowania wzorców w praktyce</a></li>\n<li><a href=\"#przydatne-narz%C4%99dzia-i-materia%C5%82y\">Przydatne narzędzia i materiały</a></li>\n<li><a href=\"#zadania-do-wykonania\">Zadania do wykonania</a>\n<ul>\n<li><a href=\"#zadanie-1-singleton-w-praktyce\">Zadanie 1: Singleton w praktyce</a></li>\n<li><a href=\"#zadanie-2-factory-dla-przycisk%C3%B3w\">Zadanie 2: Factory dla przycisków</a></li>\n<li><a href=\"#zadanie-3-builder-do-pizzy\">Zadanie 3: Builder do pizzy</a></li>\n<li><a href=\"#zadanie-4-adapter--stare-i-nowe-api\">Zadanie 4: Adapter — stare i nowe API</a></li>\n<li><a href=\"#zadanie-5-strategy--wyb%C3%B3r-algorytmu-p%C5%82atno%C5%9Bci\">Zadanie 5: Strategy — wybór algorytmu płatności</a></li>\n</ul>\n</li>\n</ol>\n<hr>\n<h2 id=\"czym-są-wzorce-projektowe\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#czym-są-wzorce-projektowe\">>></a>Czym są wzorce projektowe?</h2>\n<p><strong>Wzorce projektowe</strong> to sprawdzone, uniwersalne rozwiązania dla często spotykanych problemów w programowaniu. Możesz potraktować je jak gotowe \"przepisy\" — nie musisz wymyślać wszystkiego od nowa, tylko korzystasz z doświadczenia innych.</p>\n<h3 id=\"dlaczego-warto-ich-używać\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#dlaczego-warto-ich-używać\">>>></a>Dlaczego warto ich używać?</h3>\n<ul>\n<li>🤝 Ułatwiają komunikację w zespole (wszyscy rozumieją, o czym mowa)</li>\n<li>🏗️ Poprawiają strukturę, elastyczność i czytelność kodu</li>\n<li>⚡ Przyspieszają projektowanie i rozwój systemów</li>\n<li>🐞 Pozwalają unikać typowych błędów</li>\n</ul>\n<hr>\n<h2 id=\"jak-je-dzielimy\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#jak-je-dzielimy\">>></a>Jak je dzielimy?</h2>\n<p>Wzorce projektowe dzielimy na trzy główne kategorie:</p>\n<ol>\n<li><strong>Kreacyjne</strong> — dotyczą sposobów tworzenia obiektów (np. Singleton, Factory, Builder)</li>\n<li><strong>Strukturalne</strong> — pokazują jak łączyć obiekty i klasy (np. Facade, Adapter)</li>\n<li><strong>Behawioralne</strong> — opisują interakcje i przepływ informacji (np. Observer, Strategy)</li>\n</ol>\n<p>Każda kategoria rozwiązuje inne typy problemów, dlatego tak ważne jest, by znać przynajmniej po jednym wzorcu z każdej grupy.</p>\n<hr>\n<h2 id=\"wzorce-kreacyjne\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#wzorce-kreacyjne\">>></a>Wzorce kreacyjne</h2>\n<h3 id=\"singleton\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#singleton\">>>></a>Singleton</h3>\n<p>Zapewnia, że dana klasa posiada tylko jedną instancję i zapewnia do niej globalny dostęp.</p>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Singleton</span> {\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-attr\">instance</span>: <span class=\"hljs-title class_\">Singleton</span>;\n\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"></span>) {}\n\n  <span class=\"hljs-keyword\">static</span> <span class=\"hljs-title function_\">getInstance</span>(): <span class=\"hljs-title class_\">Singleton</span> {\n    <span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-title class_\">Singleton</span>.<span class=\"hljs-property\">instance</span>) {\n      <span class=\"hljs-title class_\">Singleton</span>.<span class=\"hljs-property\">instance</span> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Singleton</span>();\n    }\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">Singleton</span>.<span class=\"hljs-property\">instance</span>;\n  }\n}\n</code></pre>\n<p><strong>Zastosowania:</strong> konfiguracja aplikacji, połączenie z bazą danych, logger.</p>\n<hr>\n<h3 id=\"factory\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#factory\">>>></a>Factory</h3>\n<p>Pozwala tworzyć obiekty bez określania ich dokładnych klas — klient nie musi znać szczegółów implementacji.</p>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">Button</span> {\n  <span class=\"hljs-title function_\">render</span>(): <span class=\"hljs-built_in\">void</span>;\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">WindowsButton</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">Button</span> {\n  <span class=\"hljs-title function_\">render</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">\"Render Windows Button\"</span>);\n  }\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">MacButton</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">Button</span> {\n  <span class=\"hljs-title function_\">render</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">\"Render Mac Button\"</span>);\n  }\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ButtonFactory</span> {\n  <span class=\"hljs-keyword\">static</span> <span class=\"hljs-title function_\">createButton</span>(<span class=\"hljs-attr\">os</span>: <span class=\"hljs-built_in\">string</span>): <span class=\"hljs-title class_\">Button</span> {\n    <span class=\"hljs-keyword\">if</span> (os === <span class=\"hljs-string\">\"Windows\"</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">WindowsButton</span>();\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">MacButton</span>();\n  }\n}\n\n<span class=\"hljs-keyword\">const</span> button = <span class=\"hljs-title class_\">ButtonFactory</span>.<span class=\"hljs-title function_\">createButton</span>(<span class=\"hljs-string\">\"Windows\"</span>);\nbutton.<span class=\"hljs-title function_\">render</span>();\n</code></pre>\n<p><strong>Zastosowania:</strong> dynamiczne UI, obsługa wielu platform.</p>\n<hr>\n<h3 id=\"builder\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#builder\">>>></a>Builder</h3>\n<p>Ułatwia tworzenie złożonych obiektów krok po kroku — szczególnie przy wielu opcjonalnych parametrach.</p>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Burger</span> {\n  <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\">\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-attr\">bun</span>: <span class=\"hljs-built_in\">string</span>,\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-attr\">meat</span>: <span class=\"hljs-built_in\">string</span>,\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-attr\">extras</span>?: <span class=\"hljs-built_in\">string</span>[]\n  </span>) {}\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">BurgerBuilder</span> {\n  <span class=\"hljs-keyword\">private</span> bun = <span class=\"hljs-string\">\"classic\"</span>;\n  <span class=\"hljs-keyword\">private</span> meat = <span class=\"hljs-string\">\"beef\"</span>;\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">extras</span>: <span class=\"hljs-built_in\">string</span>[] = [];\n\n  <span class=\"hljs-title function_\">setBun</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">bun</span>: <span class=\"hljs-built_in\">string</span></span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">bun</span> = bun;\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>;\n  }\n\n  <span class=\"hljs-title function_\">setMeat</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">meat</span>: <span class=\"hljs-built_in\">string</span></span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">meat</span> = meat;\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>;\n  }\n\n  <span class=\"hljs-title function_\">addExtra</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">extra</span>: <span class=\"hljs-built_in\">string</span></span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">extras</span>.<span class=\"hljs-title function_\">push</span>(extra);\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>;\n  }\n\n  <span class=\"hljs-title function_\">build</span>(): <span class=\"hljs-title class_\">Burger</span> {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Burger</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">bun</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">meat</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">extras</span>);\n  }\n}\n\n<span class=\"hljs-keyword\">const</span> burger = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">BurgerBuilder</span>()\n  .<span class=\"hljs-title function_\">setMeat</span>(<span class=\"hljs-string\">\"chicken\"</span>)\n  .<span class=\"hljs-title function_\">addExtra</span>(<span class=\"hljs-string\">\"cheese\"</span>)\n  .<span class=\"hljs-title function_\">build</span>();\n</code></pre>\n<p><strong>Zastosowania:</strong> konfiguratory, kreatory złożonych obiektów, generatory formularzy.</p>\n<hr>\n<h2 id=\"wzorce-strukturalne\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#wzorce-strukturalne\">>></a>Wzorce strukturalne</h2>\n<h3 id=\"facade\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#facade\">>>></a>Facade</h3>\n<p>Upraszcza korzystanie ze złożonych systemów, oferując prosty interfejs do wielu operacji.</p>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">AudioSystem</span> {\n  <span class=\"hljs-title function_\">turnOn</span>(<span class=\"hljs-params\"></span>) {}\n  <span class=\"hljs-title function_\">setVolume</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">level</span>: <span class=\"hljs-built_in\">number</span></span>) {}\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">VideoSystem</span> {\n  <span class=\"hljs-title function_\">turnOn</span>(<span class=\"hljs-params\"></span>) {}\n  <span class=\"hljs-title function_\">setResolution</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">res</span>: <span class=\"hljs-built_in\">string</span></span>) {}\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">HomeTheaterFacade</span> {\n  <span class=\"hljs-keyword\">private</span> audio = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">AudioSystem</span>();\n  <span class=\"hljs-keyword\">private</span> video = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">VideoSystem</span>();\n\n  <span class=\"hljs-title function_\">startMovie</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">audio</span>.<span class=\"hljs-title function_\">turnOn</span>();\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">audio</span>.<span class=\"hljs-title function_\">setVolume</span>(<span class=\"hljs-number\">5</span>);\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">video</span>.<span class=\"hljs-title function_\">turnOn</span>();\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">video</span>.<span class=\"hljs-title function_\">setResolution</span>(<span class=\"hljs-string\">\"1080p\"</span>);\n  }\n}\n\n<span class=\"hljs-keyword\">const</span> theater = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">HomeTheaterFacade</span>();\ntheater.<span class=\"hljs-title function_\">startMovie</span>();\n</code></pre>\n<p><strong>Zastosowania:</strong> uproszczone API, integracja wielu zależności.</p>\n<hr>\n<h3 id=\"adapter\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#adapter\">>>></a>Adapter</h3>\n<p>Pozwala współpracować obiektom z niekompatybilnymi interfejsami — \"tłumaczy\" jeden interfejs na inny.</p>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">OldPrinter</span> {\n  <span class=\"hljs-title function_\">printText</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">text</span>: <span class=\"hljs-built_in\">string</span></span>) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">\"Old Printer: \"</span> + text);\n  }\n}\n\n<span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">NewPrinter</span> {\n  <span class=\"hljs-title function_\">print</span>(<span class=\"hljs-attr\">content</span>: <span class=\"hljs-built_in\">string</span>): <span class=\"hljs-built_in\">void</span>;\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">PrinterAdapter</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">NewPrinter</span> {\n  <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">oldPrinter</span>: <span class=\"hljs-title class_\">OldPrinter</span></span>) {}\n\n  <span class=\"hljs-title function_\">print</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">content</span>: <span class=\"hljs-built_in\">string</span></span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">oldPrinter</span>.<span class=\"hljs-title function_\">printText</span>(content);\n  }\n}\n\n<span class=\"hljs-keyword\">const</span> adapter = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">PrinterAdapter</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">OldPrinter</span>());\nadapter.<span class=\"hljs-title function_\">print</span>(<span class=\"hljs-string\">\"Hello\"</span>);\n</code></pre>\n<p><strong>Zastosowania:</strong> integracja z zewnętrznymi bibliotekami, starszym kodem, migracje.</p>\n<hr>\n<h2 id=\"wzorce-behawioralne\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#wzorce-behawioralne\">>></a>Wzorce behawioralne</h2>\n<h3 id=\"observer\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#observer\">>>></a>Observer</h3>\n<p>Obiekt \"subject\" powiadamia inne obiekty (obserwatorów) o zmianach stanu — bez ścisłego powiązania.</p>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">Observer</span> {\n  <span class=\"hljs-title function_\">update</span>(<span class=\"hljs-attr\">data</span>: <span class=\"hljs-built_in\">any</span>): <span class=\"hljs-built_in\">void</span>;\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Subject</span> {\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">observers</span>: <span class=\"hljs-title class_\">Observer</span>[] = [];\n\n  <span class=\"hljs-title function_\">add</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">observer</span>: <span class=\"hljs-title class_\">Observer</span></span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">observers</span>.<span class=\"hljs-title function_\">push</span>(observer);\n  }\n\n  <span class=\"hljs-title function_\">notify</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">data</span>: <span class=\"hljs-built_in\">any</span></span>) {\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">const</span> obs <span class=\"hljs-keyword\">of</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">observers</span>) {\n      obs.<span class=\"hljs-title function_\">update</span>(data);\n    }\n  }\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Logger</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">Observer</span> {\n  <span class=\"hljs-title function_\">update</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">data</span>: <span class=\"hljs-built_in\">any</span></span>) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">\"Log:\"</span>, data);\n  }\n}\n\n<span class=\"hljs-keyword\">const</span> subject = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Subject</span>();\nsubject.<span class=\"hljs-title function_\">add</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Logger</span>());\nsubject.<span class=\"hljs-title function_\">notify</span>(<span class=\"hljs-string\">\"Dane się zmieniły\"</span>);\n</code></pre>\n<p><strong>Zastosowania:</strong> systemy notyfikacji, reactive programming, event-driven.</p>\n<hr>\n<h3 id=\"strategy\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#strategy\">>>></a>Strategy</h3>\n<p>Pozwala zamieniać algorytmy w trakcie działania aplikacji, bez zmiany jej kodu.</p>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">PaymentStrategy</span> {\n  <span class=\"hljs-title function_\">pay</span>(<span class=\"hljs-attr\">amount</span>: <span class=\"hljs-built_in\">number</span>): <span class=\"hljs-built_in\">void</span>;\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">PayPal</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">PaymentStrategy</span> {\n  <span class=\"hljs-title function_\">pay</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">amount</span>: <span class=\"hljs-built_in\">number</span></span>) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`PayPal: Paid <span class=\"hljs-subst\">${amount}</span>`</span>);\n  }\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">CreditCard</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">PaymentStrategy</span> {\n  <span class=\"hljs-title function_\">pay</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">amount</span>: <span class=\"hljs-built_in\">number</span></span>) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`Card: Paid <span class=\"hljs-subst\">${amount}</span>`</span>);\n  }\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Checkout</span> {\n  <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">strategy</span>: <span class=\"hljs-title class_\">PaymentStrategy</span></span>) {}\n\n  <span class=\"hljs-title function_\">processPayment</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">amount</span>: <span class=\"hljs-built_in\">number</span></span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">strategy</span>.<span class=\"hljs-title function_\">pay</span>(amount);\n  }\n}\n\n<span class=\"hljs-keyword\">const</span> checkout = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Checkout</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">PayPal</span>());\ncheckout.<span class=\"hljs-title function_\">processPayment</span>(<span class=\"hljs-number\">100</span>);\n</code></pre>\n<p><strong>Zastosowania:</strong> płatności, logika decyzyjna, AI.</p>\n<hr>\n<h2 id=\"zastosowania-wzorców-w-praktyce\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zastosowania-wzorców-w-praktyce\">>></a>Zastosowania wzorców w praktyce</h2>\n<ul>\n<li><strong>Frontend:</strong> React, Angular czy Vue często korzystają z Observera (np. Redux, RxJS), Strategy (dynamiczny wybór komponentów), Factory (tworzenie widgetów), Facade (warstwa usług API).</li>\n<li><strong>Backend:</strong> Singleton dla połączeń do bazy danych, Builder przy generowaniu zapytań, Adapter do integracji z zewnętrznymi serwisami.</li>\n</ul>\n<hr>\n<h2 id=\"przydatne-narzędzia-i-materiały\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#przydatne-narzędzia-i-materiały\">>></a>Przydatne narzędzia i materiały</h2>\n<ul>\n<li><a href=\"https://refactoring.guru/pl/design-patterns\">Refactoring.guru – wzorce projektowe po polsku i angielsku</a></li>\n<li><a href=\"https://www.typescriptlang.org/play\">TypeScript Playground</a></li>\n<li><a href=\"https://pl.wikipedia.org/wiki/Wzorzec_projektowy\">Wzorce projektowe – Wikipedia</a></li>\n<li>[Książka „Wzorce projektowe. Elementy oprogramowania obiektowego” – Gamma, Helm, Johnson, Vlissides]</li>\n</ul>\n<hr>\n<h2 id=\"zadania-do-wykonania\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadania-do-wykonania\">>></a>Zadania do wykonania</h2>\n<h3 id=\"zadanie-1-singleton-w-praktyce\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-1-singleton-w-praktyce\">>>></a>Zadanie 1: Singleton w praktyce</h3>\n<p>Zaimplementuj klasę Logger, która realizuje wzorzec Singleton i umożliwia logowanie wiadomości do konsoli. Upewnij się, że niezależnie od liczby wywołań zawsze używana jest ta sama instancja loggera.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Logger</span> {\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-attr\">instance</span>: <span class=\"hljs-title class_\">Logger</span>;\n\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"></span>) {}\n\n  <span class=\"hljs-keyword\">static</span> <span class=\"hljs-title function_\">getInstance</span>(): <span class=\"hljs-title class_\">Logger</span> {\n    <span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-title class_\">Logger</span>.<span class=\"hljs-property\">instance</span>) {\n      <span class=\"hljs-title class_\">Logger</span>.<span class=\"hljs-property\">instance</span> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Logger</span>();\n    }\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">Logger</span>.<span class=\"hljs-property\">instance</span>;\n  }\n\n  <span class=\"hljs-title function_\">log</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">message</span>: <span class=\"hljs-built_in\">string</span></span>) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(message);\n  }\n}\n\n<span class=\"hljs-keyword\">const</span> logger1 = <span class=\"hljs-title class_\">Logger</span>.<span class=\"hljs-title function_\">getInstance</span>();\n<span class=\"hljs-keyword\">const</span> logger2 = <span class=\"hljs-title class_\">Logger</span>.<span class=\"hljs-title function_\">getInstance</span>();\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(logger1 === logger2); <span class=\"hljs-comment\">// true</span>\nlogger1.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">\"Wiadomość testowa\"</span>);\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-2-factory-dla-przycisków\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-2-factory-dla-przycisków\">>>></a>Zadanie 2: Factory dla przycisków</h3>\n<p>Zaimplementuj prostą fabrykę (Factory), która w zależności od przekazanego typu zwróci przycisk HTML (<code>&#x3C;button></code>) lub SVG (<code>&#x3C;svg></code>). Dodaj odpowiednie klasy ButtonHtml i ButtonSvg.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">Button</span> {\n  <span class=\"hljs-title function_\">render</span>(): <span class=\"hljs-built_in\">string</span>;\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ButtonHtml</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">Button</span> {\n  <span class=\"hljs-title function_\">render</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"&#x3C;button>Przycisk HTML&#x3C;/button>\"</span>;\n  }\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ButtonSvg</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">Button</span> {\n  <span class=\"hljs-title function_\">render</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"&#x3C;svg>&#x3C;rect width='100' height='30'/>&#x3C;/svg>\"</span>;\n  }\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ButtonFactory</span> {\n  <span class=\"hljs-keyword\">static</span> <span class=\"hljs-title function_\">createButton</span>(<span class=\"hljs-attr\">type</span>: <span class=\"hljs-built_in\">string</span>): <span class=\"hljs-title class_\">Button</span> {\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">type</span> === <span class=\"hljs-string\">\"html\"</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ButtonHtml</span>();\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ButtonSvg</span>();\n  }\n}\n\n<span class=\"hljs-keyword\">const</span> btn = <span class=\"hljs-title class_\">ButtonFactory</span>.<span class=\"hljs-title function_\">createButton</span>(<span class=\"hljs-string\">\"svg\"</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(btn.<span class=\"hljs-title function_\">render</span>());\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-3-builder-do-pizzy\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-3-builder-do-pizzy\">>>></a>Zadanie 3: Builder do pizzy</h3>\n<p>Stwórz klasę PizzaBuilder, umożliwiającą tworzenie pizzy z różnymi składnikami (np. ser, szynka, pieczarki) oraz rodzajem ciasta.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Pizza</span> {\n  <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-attr\">dough</span>: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-keyword\">public</span> <span class=\"hljs-attr\">ingredients</span>: <span class=\"hljs-built_in\">string</span>[]</span>) {}\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">PizzaBuilder</span> {\n  <span class=\"hljs-keyword\">private</span> dough = <span class=\"hljs-string\">\"classic\"</span>;\n  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">ingredients</span>: <span class=\"hljs-built_in\">string</span>[] = [];\n\n  <span class=\"hljs-title function_\">setDough</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">type</span>: <span class=\"hljs-built_in\">string</span></span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">dough</span> = <span class=\"hljs-keyword\">type</span>;\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>;\n  }\n\n  <span class=\"hljs-title function_\">addIngredient</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">ingredient</span>: <span class=\"hljs-built_in\">string</span></span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">ingredients</span>.<span class=\"hljs-title function_\">push</span>(ingredient);\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>;\n  }\n\n  <span class=\"hljs-title function_\">build</span>(): <span class=\"hljs-title class_\">Pizza</span> {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Pizza</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">dough</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">ingredients</span>);\n  }\n}\n\n<span class=\"hljs-keyword\">const</span> pizza = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">PizzaBuilder</span>()\n  .<span class=\"hljs-title function_\">setDough</span>(<span class=\"hljs-string\">\"thin\"</span>)\n  .<span class=\"hljs-title function_\">addIngredient</span>(<span class=\"hljs-string\">\"cheese\"</span>)\n  .<span class=\"hljs-title function_\">addIngredient</span>(<span class=\"hljs-string\">\"ham\"</span>)\n  .<span class=\"hljs-title function_\">build</span>();\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(pizza);\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-4-adapter--stare-i-nowe-api\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-4-adapter--stare-i-nowe-api\">>>></a>Zadanie 4: Adapter — stare i nowe API</h3>\n<p>Załóż, że masz starą klasę ApiV1 z metodą getUserData(), a chcesz korzystać z nowego interfejsu NewApi z metodą fetchUser(). Napisz adapter.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ApiV1</span> {\n  <span class=\"hljs-title function_\">getUserData</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">return</span> { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Jan\"</span>, <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">30</span> };\n  }\n}\n\n<span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">NewApi</span> {\n  <span class=\"hljs-title function_\">fetchUser</span>(): <span class=\"hljs-built_in\">object</span>;\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ApiAdapter</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">NewApi</span> {\n  <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">oldApi</span>: <span class=\"hljs-title class_\">ApiV1</span></span>) {}\n\n  <span class=\"hljs-title function_\">fetchUser</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">oldApi</span>.<span class=\"hljs-title function_\">getUserData</span>();\n  }\n}\n\n<span class=\"hljs-keyword\">const</span> adapter = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ApiAdapter</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ApiV1</span>());\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(adapter.<span class=\"hljs-title function_\">fetchUser</span>());\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-5-strategy--wybór-algorytmu-płatności\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-5-strategy--wybór-algorytmu-płatności\">>>></a>Zadanie 5: Strategy — wybór algorytmu płatności</h3>\n<p>Zaimplementuj dwie strategie płatności: przelew i BLIK (obie wypisują kwotę w konsoli). Stwórz klasę, która umożliwi wybór strategii w trakcie działania programu.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">PaymentStrategy</span> {\n  <span class=\"hljs-title function_\">pay</span>(<span class=\"hljs-attr\">amount</span>: <span class=\"hljs-built_in\">number</span>): <span class=\"hljs-built_in\">void</span>;\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Transfer</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">PaymentStrategy</span> {\n  <span class=\"hljs-title function_\">pay</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">amount</span>: <span class=\"hljs-built_in\">number</span></span>) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`Płatność przelewem: <span class=\"hljs-subst\">${amount}</span> zł`</span>);\n  }\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Blik</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">PaymentStrategy</span> {\n  <span class=\"hljs-title function_\">pay</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">amount</span>: <span class=\"hljs-built_in\">number</span></span>) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`Płatność BLIK: <span class=\"hljs-subst\">${amount}</span> zł`</span>);\n  }\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">PaymentProcessor</span> {\n  <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">strategy</span>: <span class=\"hljs-title class_\">PaymentStrategy</span></span>) {}\n\n  <span class=\"hljs-title function_\">setStrategy</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">strategy</span>: <span class=\"hljs-title class_\">PaymentStrategy</span></span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">strategy</span> = strategy;\n  }\n\n  <span class=\"hljs-title function_\">process</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">amount</span>: <span class=\"hljs-built_in\">number</span></span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">strategy</span>.<span class=\"hljs-title function_\">pay</span>(amount);\n  }\n}\n\n<span class=\"hljs-keyword\">const</span> processor = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">PaymentProcessor</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Transfer</span>());\nprocessor.<span class=\"hljs-title function_\">process</span>(<span class=\"hljs-number\">50</span>);\nprocessor.<span class=\"hljs-title function_\">setStrategy</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Blik</span>());\nprocessor.<span class=\"hljs-title function_\">process</span>(<span class=\"hljs-number\">75</span>);\n</code></pre>\n</details>\n<hr>\n<p>To dopiero początek! Każdy z tych wzorców ma swoje warianty, rozbudowane zastosowania i pułapki, których warto unikać.</p>","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/wzorce-projektowe.md",{"_8":782,"_10":783,"_12":784,"_22":794,"_24":796,"_34":797,"_26":840,"_28":841,"_30":842,"_32":843,"_35":283},"Wprowadzenie do Git i GitHub","Kompleksowy kurs wprowadzający do systemu kontroli wersji Git oraz platformy GitHub. Poznaj podstawowe pojęcia, komendy oraz narzędzia do pracy zespołowej i automatyzacji.",[785,786,787,788,789,790,791,44,792,793,104],"Git","GitHub","kontrola wersji","repozytorium","commit","branch","pull request","GitHub Actions","GitHub Pages",[795,47],"git",["D",1749081600000],{"_8":798,"_110":799},"Quiz: Podstawy Git i GitHub",[800,808,816,824,832],{"_113":801,"_115":802,"_121":150,"_123":807},"<p>Co oznacza skrót VCS?</p>",[803,804,805,806],"Versioned Coding System","Version Control System","Verified Commit Syntax","Virtual Clone Service","VCS to Version Control System, czyli system kontroli wersji.",{"_113":809,"_115":810,"_121":132,"_123":815},"<p>Co robi polecenie 'git clone'?</p>",[811,812,813,814],"Łączy zmiany z innego repozytorium","Zatwierdza zmiany do historii","Pobiera całe repozytorium zdalne na lokalny komputer","Tworzy nową gałąź","'git clone' kopiuje całe repozytorium wraz z historią na Twój komputer.",{"_113":817,"_115":818,"_121":132,"_123":823},"<p>Czym jest commit w Gicie?</p>",[819,820,821,822],"Nowa gałąź","Zdalne repozytorium","Zapis zmian w repozytorium z opisem","Automatyczne pobieranie zmian","Commit to zapis zmian, który trafia do historii projektu i ma komentarz.",{"_113":825,"_115":826,"_121":150,"_123":831},"<p>Jak nazywa się prośba o połączenie zmian na GitHubie?</p>",[827,828,829,830],"Push request","Pull request","Branch request","Merge commit","Pull request to prośba o połączenie zmian z inną gałęzią.",{"_113":833,"_115":834,"_121":132,"_123":839},"<p>Która platforma NIE jest alternatywą dla GitHub?</p>",[835,836,837,838],"Bitbucket","Azure DevOps","Stack Overflow","GitLab","Stack Overflow to portal Q&A, nie platforma hostingu repozytoriów.","0dbbdb20-a334-4ddd-86d6-2248a0eb3a1e","wprowadzenie-do-git-i-github","<p>Ten kurs to szybki i przystępny przewodnik po podstawach pracy z Gitem i GitHubem. Nauczysz się, czym jest kontrola wersji, poznasz kluczowe komendy oraz dowiesz się, jak pracować zespołowo nad kodem i publikować swoje projekty w internecie. 🚀</p>\n<h2 id=\"spis-treści\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#spis-treści\">>></a>Spis treści</h2>\n<ol>\n<li><a href=\"#czym-jest-system-kontroli-wersji\">Czym jest system kontroli wersji?</a></li>\n<li><a href=\"#co-to-jest-git\">Co to jest Git?</a></li>\n<li><a href=\"#repozytorium-branch-commit\">Repozytorium, branch, commit</a>\n<ul>\n<li><a href=\"#repozytorium\">Co to jest repozytorium?</a></li>\n<li><a href=\"#branch-ga%C5%82%C4%85%C5%BA\">Co to jest branch/gałąź?</a></li>\n<li><a href=\"#commit\">Co to jest commit?</a></li>\n</ul>\n</li>\n<li><a href=\"#fundamentalne-komendy-gita-commit-checkout-pull-push-clone\">Fundamentalne komendy Git’a</a>\n<ul>\n<li><a href=\"#git-clone\"><code>git clone</code></a></li>\n<li><a href=\"#git-checkout-oraz-git-switch\"><code>git checkout</code> oraz <code>git switch</code></a></li>\n<li><a href=\"#git-add\"><code>git add</code></a></li>\n<li><a href=\"#git-commit\"><code>git commit</code></a></li>\n<li><a href=\"#git-pull\"><code>git pull</code></a></li>\n<li><a href=\"#git-push\"><code>git push</code></a></li>\n<li><a href=\"#git-status\"><code>git status</code></a></li>\n<li><a href=\"#git-log\"><code>git log</code></a></li>\n</ul>\n</li>\n<li><a href=\"#czym-jest-github-przyk%C5%82adowe-alternatywy\">Czym jest Github? Przykładowe alternatywy</a></li>\n<li><a href=\"#pull-request---z-czym-to-si%C4%99-je\">Pull request - z czym to się je?</a></li>\n<li><a href=\"#github-actions---podstawy-cicd\">Github actions - podstawy CI/CD</a></li>\n<li><a href=\"#github-pages---mo%C5%BCliwo%C5%9B%C4%87-wystawienia-naszej-aplikacji-na-%C5%9Bwiat\">Github pages - możliwość wystawienia naszej aplikacji na świat</a></li>\n</ol>\n<hr>\n<h2 id=\"czym-jest-system-kontroli-wersji\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#czym-jest-system-kontroli-wersji\">>></a>Czym jest system kontroli wersji?</h2>\n<p>System kontroli wersji (VCS, czyli Version Control System) to narzędzie, które umożliwia śledzenie wszystkich zmian w projekcie, cofanie się do wcześniejszych wersji oraz bezpieczną współpracę z innymi osobami. Pozwala na zarządzanie historią plików i ułatwia organizację pracy nad kodem.</p>\n<p><strong>Dlaczego warto używać systemu kontroli wersji?</strong> 🕓</p>\n<ul>\n<li>Pełna historia zmian w plikach.</li>\n<li>Możliwość powrotu do dowolnej wersji projektu.</li>\n<li>Praca zespołowa bez ryzyka nadpisania czyjejś pracy.</li>\n<li>Lepsza organizacja i bezpieczeństwo kodu.</li>\n</ul>\n<hr>\n<h2 id=\"co-to-jest-git\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#co-to-jest-git\">>></a>Co to jest Git?</h2>\n<p>Git to najpopularniejszy system kontroli wersji na świecie, stworzony przez Linusa Torvaldsa. Pozwala na pracę zarówno lokalną na komputerze, jak i w chmurze, zapewniając bezpieczeństwo i elastyczność zarządzania projektem.</p>\n<p><strong>Co wyróżnia Gita?</strong> 🏆</p>\n<ul>\n<li>Możliwość pracy offline.</li>\n<li>Łatwe cofanie się do poprzednich wersji.</li>\n<li>Wsparcie dla gałęzi (branches), dzięki którym można testować nowe pomysły bez wpływu na główną wersję projektu.</li>\n</ul>\n<hr>\n<h2 id=\"repozytorium-branch-commit\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#repozytorium-branch-commit\">>></a>Repozytorium, branch, commit</h2>\n<p>Te trzy pojęcia są podstawą pracy z Gitem i GitHubem. Zrozumienie ich znaczenia i działania pozwala sprawnie korzystać z systemu kontroli wersji.</p>\n<h3 id=\"repozytorium\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#repozytorium\">>>></a>Repozytorium</h3>\n<p>Repozytorium (ang. repository) to miejsce przechowywania całego projektu wraz z historią zmian. Może być lokalne (na komputerze) lub zdalne (np. na GitHubie).</p>\n<p><strong>Co znajduje się w repozytorium?</strong></p>\n<ul>\n<li>Pliki projektu (kody źródłowe, dokumentacja)</li>\n<li>Ukryty folder <code>.git</code> z historią zmian</li>\n<li>Informacje o commitach, gałęziach i tagach</li>\n</ul>\n<p><strong>Typowe operacje:</strong> ⚙️</p>\n<ul>\n<li>Tworzenie nowego repozytorium: <code>git init</code></li>\n<li>Pobranie repozytorium z internetu: <code>git clone &#x3C;adres_repo></code></li>\n</ul>\n<h3 id=\"branch-gałąź\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#branch-gałąź\">>>></a>Branch (gałąź)</h3>\n<p>Gałąź pozwala pracować nad różnymi funkcjonalnościami równolegle. Dzięki gałęziom można eksperymentować i rozwijać nowe funkcje bez wpływu na główną wersję kodu.</p>\n<p><strong>Dlaczego warto używać gałęzi?</strong></p>\n<ul>\n<li>Testowanie nowych funkcji bez ryzyka dla głównej wersji projektu (zazwyczaj gałąź <code>main</code> lub <code>master</code>)</li>\n<li>Każdy członek zespołu może pracować na własnej gałęzi</li>\n<li>Możliwość łączenia (merge) zmian z różnych gałęzi</li>\n</ul>\n<p><strong>Typowe operacje:</strong> 🌿</p>\n<ul>\n<li>Tworzenie gałęzi: <code>git branch &#x3C;nazwa_gałęzi></code></li>\n<li>Przełączanie się na gałąź: <code>git checkout &#x3C;nazwa_gałęzi></code> lub <code>git switch &#x3C;nazwa_gałęzi></code></li>\n<li>Łączenie gałęzi: <code>git merge &#x3C;nazwa_gałęzi></code></li>\n</ul>\n<h3 id=\"commit\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#commit\">>>></a>Commit</h3>\n<p>Commit to zapis zmian w projekcie wraz z opisem. Każdy commit jest jak punkt kontrolny w historii projektu.</p>\n<p><strong>Cechy commitów:</strong></p>\n<ul>\n<li>Każdy commit ma unikalny identyfikator (hash)</li>\n<li>Opis commita powinien informować o dokonanych zmianach</li>\n<li>Możliwość powrotu do dowolnego commita</li>\n</ul>\n<p><strong>Tworzenie commita:</strong> 💾</p>\n<ol>\n<li>Dodanie plików do obszaru stage:<br>\n<code>git add &#x3C;plik></code> lub <code>git add .</code></li>\n<li>Zapisanie zmian:<br>\n<code>git commit -m \"Opis zmian\"</code></li>\n</ol>\n<hr>\n<h2 id=\"fundamentalne-komendy-gita-commit-checkout-pull-push-clone\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#fundamentalne-komendy-gita-commit-checkout-pull-push-clone\">>></a>Fundamentalne komendy Git’a: commit, checkout, pull, push, clone</h2>\n<p>Poniżej znajdują się szczegółowe opisy najważniejszych komend Git'a wraz z zastosowaniem i przykładami. Przy każdej znajdziesz praktyczną instrukcję użycia.</p>\n<h3 id=\"git-clone\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#git-clone\">>>></a><code>git clone</code></h3>\n<p>Klonuje istniejące repozytorium z internetu na komputer. 🖥️</p>\n<pre><code class=\"hljs language-bash\">git <span class=\"hljs-built_in\">clone</span> https://github.com/uzytkownik/projekt.git\n</code></pre>\n<p>Po tej komendzie otrzymujesz pełną kopię repozytorium z całą historią zmian.</p>\n<hr>\n<h3 id=\"git-checkout-oraz-git-switch\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#git-checkout-oraz-git-switch\">>>></a><code>git checkout</code> oraz <code>git switch</code></h3>\n<p>Służą do przełączania się między gałęziami lub do konkretnego commita.</p>\n<ul>\n<li>Przełączenie na inną gałąź:\n<pre><code class=\"hljs language-bash\">git checkout nazwa_gałęzi\n<span class=\"hljs-comment\"># lub</span>\ngit switch nazwa_gałęzi\n</code></pre>\n</li>\n<li>Przełączenie do konkretnego commita (tylko do odczytu):\n<pre><code class=\"hljs language-bash\">git checkout hash_commita\n</code></pre>\n</li>\n</ul>\n<hr>\n<h3 id=\"git-add\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#git-add\">>>></a><code>git add</code></h3>\n<p>Dodaje zmienione pliki do obszaru staging, przygotowując je do commita.</p>\n<ul>\n<li>Dodanie pojedynczego pliku:\n<pre><code class=\"hljs language-bash\">git add index.html\n</code></pre>\n</li>\n<li>Dodanie wszystkich plików:\n<pre><code class=\"hljs language-bash\">git add .\n</code></pre>\n</li>\n</ul>\n<hr>\n<h3 id=\"git-commit\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#git-commit\">>>></a><code>git commit</code></h3>\n<p>Zapisuje zmiany w repozytorium wraz z opisem.</p>\n<pre><code class=\"hljs language-bash\">git commit -m <span class=\"hljs-string\">\"Opis zmian\"</span>\n</code></pre>\n<p>Opis powinien być zwięzły i informować, co zostało zmienione.</p>\n<hr>\n<h3 id=\"git-pull\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#git-pull\">>>></a><code>git pull</code></h3>\n<p>Pobiera najnowsze zmiany z repozytorium zdalnego do lokalnego i automatycznie je łączy. 🔄</p>\n<pre><code class=\"hljs language-bash\">git pull\n</code></pre>\n<hr>\n<h3 id=\"git-push\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#git-push\">>>></a><code>git push</code></h3>\n<p>Wysyła lokalne zmiany (commity) do repozytorium zdalnego.</p>\n<pre><code class=\"hljs language-bash\">git push\n</code></pre>\n<p>Możesz również wskazać nazwę zdalnego repozytorium i gałęzi:</p>\n<pre><code class=\"hljs language-bash\">git push origin nowa-funkcja\n</code></pre>\n<hr>\n<h3 id=\"git-status\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#git-status\">>>></a><code>git status</code></h3>\n<p>Pokazuje aktualny stan repozytorium: które pliki zostały zmienione, które są przygotowane do commita, a które nie.</p>\n<pre><code class=\"hljs language-bash\">git status\n</code></pre>\n<hr>\n<h3 id=\"git-log\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#git-log\">>>></a><code>git log</code></h3>\n<p>Pokazuje historię wszystkich commitów w repozytorium. 📜</p>\n<pre><code class=\"hljs language-bash\">git <span class=\"hljs-built_in\">log</span>\n</code></pre>\n<hr>\n<h2 id=\"czym-jest-github-przykładowe-alternatywy\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#czym-jest-github-przykładowe-alternatywy\">>></a>Czym jest Github? Przykładowe alternatywy</h2>\n<p>GitHub to platforma umożliwiająca przechowywanie projektów opartych o Git, dzielenie się kodem i współpracę w zespole. Umożliwia zarządzanie projektami, recenzowanie kodu i automatyzację procesów. To swoisty \"hub\" dla programistów i projektów open source.</p>\n<p><strong>Inne popularne platformy:</strong> 🌐</p>\n<ul>\n<li>GitLab</li>\n<li>Bitbucket</li>\n<li>Azure DevOps</li>\n</ul>\n<hr>\n<h2 id=\"pull-request---z-czym-to-się-je\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#pull-request---z-czym-to-się-je\">>></a>Pull request - z czym to się je?</h2>\n<p>Pull request (PR) to prośba o akceptację i połączenie Twoich zmian z główną wersją projektu. Jest to podstawowy element pracy zespołowej na GitHubie.</p>\n<p><strong>Proces pull request:</strong> 👥</p>\n<ol>\n<li>Tworzysz nową gałąź i wprowadzasz w niej zmiany.</li>\n<li>Otwierasz pull request na GitHubie.</li>\n<li>Inni członkowie zespołu sprawdzają kod i mogą komentować lub zgłaszać poprawki.</li>\n<li>Po akceptacji zmiany są łączone z główną gałęzią projektu.</li>\n</ol>\n<hr>\n<h2 id=\"github-actions---podstawy-cicd\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#github-actions---podstawy-cicd\">>></a>Github actions - podstawy CI/CD</h2>\n<p>GitHub Actions to narzędzie do automatyzacji zadań takich jak testowanie, budowanie i wdrażanie aplikacji. Pozwala tworzyć workflowy, które wykonują się automatycznie po spełnieniu określonych warunków (np. po każdym commicie).</p>\n<p><strong>Główne pojęcia:</strong> ⚙️</p>\n<ul>\n<li>Workflow – zestaw zadań wykonywanych automatycznie</li>\n<li>Konfiguracja w plikach YAML w folderze <code>.github/workflows/</code></li>\n</ul>\n<hr>\n<h2 id=\"github-pages---możliwość-wystawienia-naszej-aplikacji-na-świat\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#github-pages---możliwość-wystawienia-naszej-aplikacji-na-świat\">>></a>Github pages - możliwość wystawienia naszej aplikacji na świat</h2>\n<p>GitHub Pages umożliwia publikowanie stron internetowych lub portfolio bez konieczności posiadania własnego serwera. Strona jest dostępna online bezpośrednio z repozytorium.</p>\n<p><strong>Jak to zrobić?</strong> 🌍</p>\n<ol>\n<li>Utwórz repozytorium z plikami strony (HTML, CSS, JS).</li>\n<li>W ustawieniach repozytorium aktywuj GitHub Pages.</li>\n<li>Strona będzie dostępna pod adresem:<br>\n<code>https://&#x3C;twoja-nazwa-użytkownika>.github.io/&#x3C;nazwa-repo></code></li>\n</ol>\n<hr>\n<p>To tylko wstęp – każdy z tych tematów można rozwinąć o praktyczne przykłady i ćwiczenia, które pozwolą lepiej zrozumieć narzędzia i procesy pracy z Git oraz GitHubem.</p>","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/wprowadzenie-do-git-i-github.md",{"_8":845,"_10":846,"_12":847,"_22":852,"_24":853,"_34":854,"_26":896,"_28":897,"_30":898,"_32":899,"_35":283},"Wprowadzenie do Semantycznego HTML","Semantyczny HTML polega na używaniu elementów HTML, które jednoznacznie opisują swoje znaczenie i cel. Elementy semantyczne nie tylko definiują strukturę dokumentu, ale również pomagają w interpretacji jego zawartości zarówno przez przeglądarki, jak i przez wyszukiwarki internetowe oraz technologie wspomagające (np. czytniki ekranowe).",[848,849,850,851,104],"html","semantyka","seo","dostępność",[848,850],["D",1720137600000],{"_8":855,"_110":856},"Quiz: Semantyczny HTML",[857,865,873,881,888],{"_113":858,"_115":859,"_121":150,"_123":864},"<p>Który element HTML najlepiej nadaje się do oznaczenia głównej treści strony?</p>",[860,861,862,863],"<aside>","<main>","<header>","<section>","Element <main> służy do oznaczenia głównej, unikatowej treści dokumentu.",{"_113":866,"_115":867,"_121":150,"_123":872},"<p>Do czego służy element <code>&#x3C;nav></code>?</p>",[868,869,870,871],"Do osadzania obrazka z podpisem","Do grupowania linków nawigacyjnych na stronie","Do wyświetlania stopki strony","Do oznaczania artykułu","Element <nav> grupuje linki prowadzące do różnych części witryny lub innych stron.",{"_113":874,"_115":875,"_121":150,"_123":880},"<p>Gdzie możesz legalnie umieścić element <code>&#x3C;footer></code>?</p>",[876,877,878,879],"Tylko w <main>","Na końcu całej strony lub na końcu sekcji/artykułu","Tylko na początku strony","Wyłącznie w <aside>","<footer> może być użyty zarówno dla całej strony, jak i dla poszczególnych sekcji czy artykułów.",{"_113":882,"_115":883,"_121":132,"_123":887},"<p>Który element HTML semantyczny najlepiej nadaje się na poboczny panel z reklamami lub linkami powiązanymi?</p>",[884,885,860,886],"<mark>","<figure>","<time>","<aside> przeznaczony jest na treści poboczne, niezwiązane bezpośrednio z główną osią tematyczną.",{"_113":889,"_115":890,"_121":122,"_123":895},"<p>Jakiego atrybutu użyjesz z <code>&#x3C;time></code>, by data była czytelna dla maszyn?</p>",[891,892,893,894],"datetime","machine","format","date","Atrybut datetime pozwala maszynom poprawnie interpretować podaną datę/czas.","97d23ec7-420b-4d99-97ee-1213f2792ad9","semantyczny-html","<h2 id=\"spis-treści\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#spis-treści\">>></a>Spis treści</h2>\n<ol>\n<li><a href=\"#czym-jest-semantyczny-html\">Czym jest semantyczny HTML?</a></li>\n<li><a href=\"#zalety-u%C5%BCywania-semantycznego-html\">Zalety używania semantycznego HTML</a></li>\n<li><a href=\"#semantyczne-elementy-html\">Semantyczne elementy HTML</a>\n<ul>\n<li><a href=\"#doctype-html\"><code>&#x3C;!DOCTYPE html></code></a></li>\n<li><a href=\"#header\"><code>&#x3C;header></code></a></li>\n<li><a href=\"#nav\"><code>&#x3C;nav></code></a></li>\n<li><a href=\"#main\"><code>&#x3C;main></code></a></li>\n<li><a href=\"#article\"><code>&#x3C;article></code></a></li>\n<li><a href=\"#section\"><code>&#x3C;section></code></a></li>\n<li><a href=\"#aside\"><code>&#x3C;aside></code></a></li>\n<li><a href=\"#footer\"><code>&#x3C;footer></code></a></li>\n<li><a href=\"#figure-i-figcaption\"><code>&#x3C;figure></code> i <code>&#x3C;figcaption></code></a></li>\n<li><a href=\"#time\"><code>&#x3C;time></code></a></li>\n<li><a href=\"#mark\"><code>&#x3C;mark></code></a></li>\n<li><a href=\"#address\"><code>&#x3C;address></code></a></li>\n</ul>\n</li>\n<li><a href=\"#ograniczenia-i-wyzwania\">Ograniczenia i wyzwania</a></li>\n<li><a href=\"#podsumowanie\">Podsumowanie</a></li>\n<li><a href=\"#zadania-do-wykonania\">Zadania do wykonania</a>\n<ul>\n<li><a href=\"#zadanie-1\">Zadanie 1</a></li>\n<li><a href=\"#zadanie-2\">Zadanie 2</a></li>\n<li><a href=\"#zadanie-3\">Zadanie 3</a></li>\n</ul>\n</li>\n</ol>\n<hr>\n<h2 id=\"czym-jest-semantyczny-html\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#czym-jest-semantyczny-html\">>></a>Czym jest semantyczny HTML?</h2>\n<p>Semantyczny HTML oznacza stosowanie takich elementów HTML, które jednoznacznie wskazują na swoje przeznaczenie i znaczenie w kontekście strony. Elementy semantyczne nie służą jedynie do budowania struktury dokumentu – ułatwiają one także przeglądarkom, wyszukiwarkom internetowym oraz technologiom wspomagającym (np. czytnikom ekranowym) prawidłową interpretację treści. Dzięki temu strony są bardziej dostępne, lepiej pozycjonowane i czytelniejsze zarówno dla ludzi, jak i maszyn.</p>\n<h2 id=\"zalety-używania-semantycznego-html\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zalety-używania-semantycznego-html\">>></a>Zalety używania semantycznego HTML</h2>\n<ol>\n<li><strong>Lepsza czytelność kodu:</strong> Kod oparty na semantycznych elementach jest bardziej zrozumiały i klarowny zarówno dla programistów, jak i dla narzędzi przetwarzających strony internetowe.</li>\n<li><strong>SEO:</strong> Wyszukiwarki skuteczniej rozpoznają strukturę i znaczenie treści, co może poprawić pozycję strony w wynikach wyszukiwania.</li>\n<li><strong>Dostępność:</strong> Semantyczny HTML sprawia, że technologie wspomagające (np. czytniki ekranowe) mogą lepiej przekazywać treść osobom z niepełnosprawnościami.</li>\n<li><strong>Łatwiejsza konserwacja:</strong> Strony zbudowane w oparciu o semantyczny HTML są bardziej uporządkowane i łatwiejsze w utrzymaniu oraz rozbudowie.</li>\n</ol>\n<h2 id=\"semantyczne-elementy-html\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#semantyczne-elementy-html\">>></a>Semantyczne elementy HTML</h2>\n<h3 id=\"doctype-html\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#doctype-html\">>>></a><code>&#x3C;!DOCTYPE html></code></h3>\n<p>Deklaracja typu dokumentu HTML5. Informuje przeglądarkę o używanej wersji HTML – od tego rozpoczyna się każdy nowoczesny dokument HTML.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"pl\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Semantyczny HTML<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-comment\">&#x3C;!-- Zawartość strony --></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<h3 id=\"header\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#header\">>>></a><code>&#x3C;header></code></h3>\n<p>Sekcja nagłówkowa strony lub danej sekcji. Zawiera zwykle tytuł, logo, wprowadzenie lub podstawową nawigację.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">header</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>Tytuł strony<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">nav</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ul</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#home\"</span>></span>Home<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#about\"</span>></span>About<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#contact\"</span>></span>Contact<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ul</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">nav</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">header</span>></span>\n</code></pre>\n<p><em>Stosuj <code>&#x3C;header></code> na początku strony lub jako nagłówek sekcji.</em></p>\n<h3 id=\"nav\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#nav\">>>></a><code>&#x3C;nav></code></h3>\n<p>Wyodrębniony blok nawigacyjny. Zawiera zestaw linków prowadzących do różnych części serwisu lub do innych stron.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">nav</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ul</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#home\"</span>></span>Home<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#about\"</span>></span>About<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#contact\"</span>></span>Contact<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ul</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">nav</span>></span>\n</code></pre>\n<p><em>Element <code>&#x3C;nav></code> powinien obejmować tylko główną nawigację witryny.</em></p>\n<h3 id=\"main\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#main\">>>></a><code>&#x3C;main></code></h3>\n<p>Główna, unikatowa treść dokumentu. Może zawierać artykuły, sekcje, multimedia i inne elementy powiązane z tematem strony.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">main</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">article</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h2</span>></span>Artykuł<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h2</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Treść artykułu...<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">article</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">main</span>></span>\n</code></pre>\n<p><em>Tylko jeden element <code>&#x3C;main></code> na stronę!</em></p>\n<h3 id=\"article\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#article\">>>></a><code>&#x3C;article></code></h3>\n<p>Samodzielna jednostka treści, która ma sens także poza kontekstem strony (np. artykuł, wpis na blogu, post na forum).</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">article</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h2</span>></span>Artykuł<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h2</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Treść artykułu...<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">article</span>></span>\n</code></pre>\n<p><em>Możesz mieć wiele <code>&#x3C;article></code> na jednej stronie.</em></p>\n<h3 id=\"section\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#section\">>>></a><code>&#x3C;section></code></h3>\n<p>Logiczna sekcja dokumentu grupująca powiązane tematycznie treści, np. rozdziały, bloki tematyczne.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">section</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h2</span>></span>Sekcja<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h2</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Treść sekcji...<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">section</span>></span>\n</code></pre>\n<p><em>Używaj <code>&#x3C;section></code> do organizowania treści w logiczne grupy.</em></p>\n<h3 id=\"aside\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#aside\">>>></a><code>&#x3C;aside></code></h3>\n<p>Blok z treściami pobocznymi lub dodatkowymi – np. panele boczne, cytaty, reklamy, linki powiązane.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">aside</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h2</span>></span>Sidebar<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h2</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Informacje poboczne...<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">aside</span>></span>\n</code></pre>\n<p><em>Elementy <code>&#x3C;aside></code> powinny zawierać treści niezwiązane bezpośrednio z główną osią tematyczną.</em></p>\n<h3 id=\"footer\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#footer\">>>></a><code>&#x3C;footer></code></h3>\n<p>Stopka strony lub sekcji. Zawiera informacje o autorze, prawa autorskie, dane kontaktowe, odnośniki do polityk i inne podobne treści.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">footer</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span><span class=\"hljs-symbol\">&#x26;copy;</span> 2023 Moja Strona. Wszelkie prawa zastrzeżone.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">footer</span>></span>\n</code></pre>\n<p><em>Możesz mieć <code>&#x3C;footer></code> zarówno dla całej strony, jak i dla poszczególnych sekcji czy artykułów.</em></p>\n<h3 id=\"figure-i-figcaption\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#figure-i-figcaption\">>>></a><code>&#x3C;figure></code> i <code>&#x3C;figcaption></code></h3>\n<p>Blok do zamieszczania ilustracji, zdjęć, diagramów, wykresów wraz z podpisem.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">figure</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"obrazek.jpg\"</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">\"Opis obrazka\"</span> /></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">figcaption</span>></span>Opis obrazka<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">figcaption</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">figure</span>></span>\n</code></pre>\n<p><em>Element <code>&#x3C;figcaption></code> zawsze powinien być związany z <code>&#x3C;figure></code>.</em></p>\n<h3 id=\"time\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#time\">>>></a><code>&#x3C;time></code></h3>\n<p>Element reprezentujący określony moment w czasie lub zakres dat.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">time</span> <span class=\"hljs-attr\">datetime</span>=<span class=\"hljs-string\">\"2023-06-29\"</span>></span>29 czerwca 2023<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">time</span>></span>\n</code></pre>\n<p><em>Używaj atrybutu <code>datetime</code> dla maszynowej czytelności.</em></p>\n<h3 id=\"mark\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#mark\">>>></a><code>&#x3C;mark></code></h3>\n<p>Służy do wyróżnienia fragmentu tekstu, na który należy zwrócić szczególną uwagę.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>To jest <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">mark</span>></span>ważne<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">mark</span>></span> słowo.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n</code></pre>\n<p><em>Pomaga w podkreśleniu słów kluczowych lub wyników wyszukiwania.</em></p>\n<h3 id=\"address\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#address\">>>></a><code>&#x3C;address></code></h3>\n<p>Reprezentuje dane kontaktowe autora strony, firmy lub działu.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">address</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Jan Kowalski<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>ul. Przykładowa 1<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>00-000 Warszawa<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">address</span>></span>\n</code></pre>\n<p><em>Nie używaj do oznaczania lokalizacji geograficznych lub kontaktowych innych niż autor/organizacja strony.</em></p>\n<h2 id=\"ograniczenia-i-wyzwania\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#ograniczenia-i-wyzwania\">>></a>Ograniczenia i wyzwania</h2>\n<ul>\n<li><strong>Niewłaściwe użycie elementów:</strong> Błędne stosowanie elementów semantycznych może prowadzić do dezorientacji użytkowników oraz problemów z dostępnością.</li>\n<li><strong>Brak wsparcia w starszych przeglądarkach:</strong> Niektóre starsze przeglądarki mogą nie interpretować poprawnie wszystkich elementów HTML5. Warto wtedy stosować odpowiednie polyfill'e lub style CSS resetujące.</li>\n<li><strong>Wymagana większa precyzja:</strong> Tworzenie semantycznego HTML wymaga dokładnego zrozumienia przeznaczenia każdego elementu i stosowania ich zgodnie z dokumentacją.</li>\n</ul>\n<h2 id=\"podsumowanie\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podsumowanie\">>></a>Podsumowanie</h2>\n<p>Semantyczny HTML to fundament nowoczesnych stron. Umożliwia lepszą strukturę, czytelność kodu, wyższą dostępność oraz skuteczniejsze pozycjonowanie w wyszukiwarkach. Stosowanie odpowiednich elementów semantycznych pozwala tworzyć strony bardziej zrozumiałe zarówno dla użytkowników, jak i maszyn. To inwestycja w przyszłość i jakość Twoich projektów internetowych.</p>\n<h2 id=\"zadania-do-wykonania\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadania-do-wykonania\">>></a>Zadania do wykonania</h2>\n<h3 id=\"zadanie-1\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-1\">>>></a>Zadanie 1</h3>\n<p>Stwórz prostą stronę HTML, w której znajdą się:</p>\n<ul>\n<li>nagłówek (<code>&#x3C;header></code>)</li>\n<li>główna treść (<code>&#x3C;main></code>)</li>\n<li>nawigacja (<code>&#x3C;nav></code>)</li>\n<li>stopka (<code>&#x3C;footer></code>)</li>\n</ul>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"pl\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Zadanie 1<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">header</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>Moja Strona<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">header</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">nav</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ul</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#home\"</span>></span>Home<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#about\"</span>></span>About<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#contact\"</span>></span>Contact<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n      <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ul</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">nav</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">main</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Główna treść strony...<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">main</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">footer</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span><span class=\"hljs-symbol\">&#x26;copy;</span> 2023 Moja Strona. Wszelkie prawa zastrzeżone.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">footer</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n</details>\n<h3 id=\"zadanie-2\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-2\">>>></a>Zadanie 2</h3>\n<p>Rozbuduj stronę z Zadania 1 o:</p>\n<ul>\n<li>sekcję (<code>&#x3C;section></code>) w głównej części,</li>\n<li>artykuł (<code>&#x3C;article></code>) w sekcji,</li>\n<li>blok poboczny (<code>&#x3C;aside></code>) również w sekcji.</li>\n</ul>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"pl\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Zadanie 2<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">header</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>Moja Strona<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">header</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">nav</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ul</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#home\"</span>></span>Home<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#about\"</span>></span>About<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#contact\"</span>></span>Contact<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n      <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ul</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">nav</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">main</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">section</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">article</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h2</span>></span>Artykuł<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h2</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Treść artykułu...<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n        <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">article</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">aside</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h2</span>></span>Blok poboczny<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h2</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Informacje poboczne...<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n        <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">aside</span>></span>\n      <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">section</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">main</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">footer</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span><span class=\"hljs-symbol\">&#x26;copy;</span> 2023 Moja Strona. Wszelkie prawa zastrzeżone.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">footer</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n</details>\n<h3 id=\"zadanie-3\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-3\">>>></a>Zadanie 3</h3>\n<p>Dodaj do swojej strony ilustrację z podpisem, korzystając z elementów <code>&#x3C;figure></code> i <code>&#x3C;figcaption></code>, umieszczając je wewnątrz sekcji.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"pl\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Zadanie 3<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">header</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>Moja Strona<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">header</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">nav</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ul</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#home\"</span>></span>Home<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#about\"</span>></span>About<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#contact\"</span>></span>Contact<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n      <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ul</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">nav</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">main</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">section</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">article</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h2</span>></span>Artykuł<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h2</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Treść artykułu...<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n        <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">article</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">aside</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h2</span>></span>Blok poboczny<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h2</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Informacje poboczne...<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n        <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">aside</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">figure</span>></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"obrazek.jpg\"</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">\"Opis obrazka\"</span> /></span>\n          <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">figcaption</span>></span>Opis obrazka<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">figcaption</span>></span>\n        <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">figure</span>></span>\n      <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">section</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">main</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">footer</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span><span class=\"hljs-symbol\">&#x26;copy;</span> 2023 Moja Strona. Wszelkie prawa zastrzeżone.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">footer</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n</details>\n<hr>\n<p>To wszystko w temacie semantycznego HTML! Zachęcam do eksperymentowania, praktycznego stosowania elementów semantycznych oraz dalszego pogłębiania wiedzy na ten temat.</p>","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/semantyczny-html.md",{"_8":901,"_10":902,"_12":903,"_22":906,"_24":907,"_34":908,"_26":949,"_28":950,"_30":951,"_32":952,"_35":164},"Renesans w JS, czyli nowoczesny JavaScript","JavaScript jest językiem programowania, który jest powszechnie stosowany do tworzenia dynamicznych i interaktywnych stron internetowych. W ciągu ostatnich lat JavaScript znacznie ewoluował, wprowadzając nowe funkcje i poprawiając istniejące mechanizmy. W tym kursie omówimy najważniejsze elementy nowoczesnego JavaScript, w tym ES6 i nowsze.",[16,683,298,904,905,18,104],"przewodnik","web",[298,16],["D",1719705600000],{"_8":909,"_110":910},"Quiz: Podstawy nowoczesnego JavaScript",[911,919,927,935,942],{"_113":912,"_115":913,"_121":122,"_123":918},"<p>Jaką główną różnicę między <code>let</code> a <code>var</code> podkreśla się w nowoczesnym JavaScript?</p>",[914,915,916,917],"Zakres blokowy (`block scope`) w `let`","Obie są identyczne","`let` nie pozwala na przyjmowanie wartości domyślnej","`var` nie istnieje w nowoczesnym JS","`let` posiada zakres blokowy, podczas gdy `var` ma zakres funkcyjny.",{"_113":920,"_115":921,"_121":150,"_123":926},"<p>Co zwróci poniższy kod?</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> arr = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>];\n<span class=\"hljs-keyword\">const</span> [a, , b] = arr;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(a, b);\n</code></pre>",[922,923,924,925],"1 2","1 3","undefined 3","2 3","Drugi element jest pomijany. Wynik to 1 i 3.",{"_113":928,"_115":929,"_121":122,"_123":934},"<p>Co robi operator spread (<code>...</code>)?</p>",[930,931,932,933],"Rozwija elementy tablicy lub właściwości obiektu","Deklaruje zmienną stałą","Łączy Promise'y","Tworzy nowy Promise","Spread operator służy do rozwijania/skopiowania elementów tablicy lub obiektu.",{"_113":936,"_115":937,"_121":150,"_123":941},"<p>Czym różni się funkcja strzałkowa od zwykłej funkcji pod względem <code>this</code>?</p>",[938,939,323,940],"Funkcja strzałkowa tworzy nowy kontekst `this`","Funkcja strzałkowa nie ma własnego `this`","Funkcje strzałkowe nie działają w JS","Funkcje strzałkowe nie posiadają własnego `this` — dziedziczą go z otoczenia.",{"_113":943,"_115":944,"_121":122,"_123":948},"<p>Jaką wartość zwróci poniższy kod?</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">test</span>(<span class=\"hljs-params\"></span>) { <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">5</span>; }\n<span class=\"hljs-title function_\">test</span>().<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-property\">log</span>);\n</code></pre>",[945,946,947,727],"5","Promise {<fulfilled>: 5}","Błąd","Funkcja async zawsze zwraca Promise, ale `then` wypisze wartość 5.","e50b76d1-c6e6-446e-818e-8dddf68d4fe0","nowoczesny-javascript","<p>JavaScript to wszechstronny język programowania, kluczowy dla współczesnych aplikacji webowych i nie tylko. Wraz z pojawieniem się standardu ES6 (ECMAScript 2015) oraz kolejnych aktualizacji, JS stał się bardziej ekspresyjny, bezpieczny i wygodny w użyciu. W tym przewodniku poznasz najważniejsze zagadnienia nowoczesnego JavaScriptu, które pozwolą Ci pisać czytelny, skuteczny i łatwo rozwijalny kod.</p>\n<h2 id=\"spis-treści\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#spis-treści\">>></a>Spis treści</h2>\n<ol>\n<li><a href=\"#zmienne-let-const-i-zakresy-blokowe\">Zmienne: <code>let</code>, <code>const</code> i zakresy blokowe</a></li>\n<li><a href=\"#funkcje-strza%C5%82kowe-i-ich-zastosowania\">Funkcje strzałkowe i ich zastosowania</a></li>\n<li><a href=\"#szablony-string%C3%B3w-template-literals\">Szablony stringów (Template Literals)</a></li>\n<li><a href=\"#destrukturyzacja-tablic-i-obiekt%C3%B3w\">Destrukturyzacja tablic i obiektów</a></li>\n<li><a href=\"#spread-i-rest-operator-\">Spread i rest operator (<code>...</code>)</a></li>\n<li><a href=\"#promise-api-i-obs%C5%82uga-asynchroniczno%C5%9Bci\">Promise API i obsługa asynchroniczności</a></li>\n<li><a href=\"#asyncawait--nowoczesna-obs%C5%82uga-kodu-asynchronicznego\">Async/await – nowoczesna obsługa kodu asynchronicznego</a></li>\n<li><a href=\"#zadania-do-wykonania\">Zadania do wykonania</a></li>\n</ol>\n<hr>\n<h2 id=\"zmienne-let-const-i-zakresy-blokowe\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zmienne-let-const-i-zakresy-blokowe\">>></a>Zmienne: <code>let</code>, <code>const</code> i zakresy blokowe</h2>\n<h3 id=\"zakres-blokowy-block-scope\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zakres-blokowy-block-scope\">>>></a>Zakres blokowy (<code>block scope</code>)</h3>\n<p>W przeciwieństwie do starszego <code>var</code>, deklaracje <code>let</code> i <code>const</code> są ograniczone do bloku, w którym zostały zadeklarowane (czyli do najbliższych <code>{ ... }</code>). Dzięki temu unikasz tzw. „przecieków zmiennych” (variable hoisting) i niezamierzonych nadpisań.</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">if</span> (<span class=\"hljs-literal\">true</span>) {\n  <span class=\"hljs-keyword\">let</span> x = <span class=\"hljs-number\">5</span>;\n  <span class=\"hljs-keyword\">const</span> y = <span class=\"hljs-number\">10</span>;\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(x); <span class=\"hljs-comment\">// 5</span>\n}\n<span class=\"hljs-comment\">// console.log(x); // ReferenceError</span>\n</code></pre>\n<h3 id=\"różnice-między-let-const-i-var\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#różnice-między-let-const-i-var\">>>></a>Różnice między <code>let</code>, <code>const</code> i <code>var</code></h3>\n<ul>\n<li><code>let</code> – pozwala na modyfikację wartości, ale nie na ponowną deklarację w tym samym bloku.</li>\n<li><code>const</code> – wymaga przypisania wartości przy deklaracji i nie pozwala na jej zmianę (dotyczy to referencji, niekoniecznie zawartości – patrz poniżej).</li>\n<li><code>var</code> – ma zakres funkcyjny (function scope), podlega hoistingowi, co może prowadzić do nieprzewidzianych rezultatów.</li>\n</ul>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> tablica = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>];\ntablica.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-number\">4</span>); <span class=\"hljs-comment\">// Dozwolone! Zmieniamy zawartość, nie referencję.</span>\n<span class=\"hljs-comment\">// tablica = [1, 2]; // Błąd! Przypisanie nowej referencji jest niedozwolone.</span>\n</code></pre>\n<hr>\n<h2 id=\"funkcje-strzałkowe-i-ich-zastosowania\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#funkcje-strzałkowe-i-ich-zastosowania\">>></a>Funkcje strzałkowe i ich zastosowania</h2>\n<h3 id=\"składnia-funkcji-strzałkowej\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#składnia-funkcji-strzałkowej\">>>></a>Składnia funkcji strzałkowej</h3>\n<ul>\n<li>Szybszy zapis (szczególnie dla funkcji jedno-liniowych).</li>\n<li>Automatyczne wiązanie <code>this</code> do kontekstu, w którym funkcja została zadeklarowana.</li>\n<li>Brak własnego obiektu <code>arguments</code> oraz brak możliwości użycia jako konstruktor.</li>\n</ul>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">dodaj</span> = (<span class=\"hljs-params\">a, b</span>) => a + b;\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">powitanie</span> = (<span class=\"hljs-params\">imie</span>) => <span class=\"hljs-string\">`Cześć, <span class=\"hljs-subst\">${imie}</span>!`</span>;\n</code></pre>\n<h3 id=\"funkcje-strzałkowe-a-kontekst-this\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#funkcje-strzałkowe-a-kontekst-this\">>>></a>Funkcje strzałkowe a kontekst <code>this</code></h3>\n<p>Funkcje strzałkowe nie mają własnego <code>this</code>, przez co bardzo dobrze sprawdzają się w metodach, callbackach czy w obsłudze zdarzeń, gdzie chcemy korzystać z kontekstu obiektu nadrzędnego.</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">Timer</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">sekundy</span> = <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-built_in\">setInterval</span>(<span class=\"hljs-function\">() =></span> {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">sekundy</span>++;\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">sekundy</span>);\n  }, <span class=\"hljs-number\">1000</span>);\n}\n<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Timer</span>(); <span class=\"hljs-comment\">// this.sekundy będzie poprawnie zwiększane</span>\n</code></pre>\n<hr>\n<h2 id=\"szablony-stringów-template-literals\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#szablony-stringów-template-literals\">>></a>Szablony stringów (Template Literals)</h2>\n<h3 id=\"interpolacja-i-wielolinijkowość\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#interpolacja-i-wielolinijkowość\">>>></a>Interpolacja i wielolinijkowość</h3>\n<p>Szablony stringów pozwalają na interpolację zmiennych i wyrażeń oraz łatwe tworzenie tekstów wielolinijkowych, co jest szczególnie przydatne np. przy generowaniu HTML-a lub komunikatów:</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> imie = <span class=\"hljs-string\">\"Ola\"</span>;\n<span class=\"hljs-keyword\">const</span> wiek = <span class=\"hljs-number\">25</span>;\n<span class=\"hljs-keyword\">const</span> info = <span class=\"hljs-string\">`Mam na imię <span class=\"hljs-subst\">${imie}</span> i mam <span class=\"hljs-subst\">${wiek}</span> lat.`</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(info);\n\n<span class=\"hljs-keyword\">const</span> html = <span class=\"hljs-string\">`\n&#x3C;div>\n  &#x3C;h1><span class=\"hljs-subst\">${imie}</span>&#x3C;/h1>\n  &#x3C;p>Wiek: <span class=\"hljs-subst\">${wiek}</span>&#x3C;/p>\n&#x3C;/div>\n`</span>;\n</code></pre>\n<h3 id=\"dodatkowe-możliwości\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#dodatkowe-możliwości\">>>></a>Dodatkowe możliwości</h3>\n<p>Szablony stringów wspierają także tzw. tagowane szablony (<code>tagged templates</code>), które pozwalają na zaawansowaną manipulację tekstem (np. do tłumaczeń, walidacji, formatowania).</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">upper</span>(<span class=\"hljs-params\">strings, ...values</span>) {\n  <span class=\"hljs-keyword\">return</span> strings[<span class=\"hljs-number\">0</span>] + values.<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">v</span>) =></span> v.<span class=\"hljs-title function_\">toUpperCase</span>()).<span class=\"hljs-title function_\">join</span>(<span class=\"hljs-string\">\"\"</span>);\n}\n<span class=\"hljs-keyword\">const</span> imie = <span class=\"hljs-string\">\"Ania\"</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(upper<span class=\"hljs-string\">`Cześć, <span class=\"hljs-subst\">${imie}</span>!`</span>); <span class=\"hljs-comment\">// Cześć, ANIA!</span>\n</code></pre>\n<hr>\n<h2 id=\"destrukturyzacja-tablic-i-obiektów\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#destrukturyzacja-tablic-i-obiektów\">>></a>Destrukturyzacja tablic i obiektów</h2>\n<h3 id=\"destrukturyzacja-tablic\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#destrukturyzacja-tablic\">>>></a>Destrukturyzacja tablic</h3>\n<p>Pozwala na szybkie przypisanie wartości z tablicy do zmiennych:</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> [pierwszy, drugi, trzeci = <span class=\"hljs-number\">0</span>] = [<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">20</span>];\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(pierwszy, drugi, trzeci); <span class=\"hljs-comment\">// 10 20 0 (wartość domyślna)</span>\n</code></pre>\n<p>Można pomijać niektóre elementy lub korzystać z reszty:</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> [a, , b, ...reszta] = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>];\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(a, b, reszta); <span class=\"hljs-comment\">// 1 3 [4, 5]</span>\n</code></pre>\n<h3 id=\"destrukturyzacja-obiektów\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#destrukturyzacja-obiektów\">>>></a>Destrukturyzacja obiektów</h3>\n<p>Do zmiennych przypisywane są wartości na podstawie nazw kluczy:</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> osoba = { <span class=\"hljs-attr\">imie</span>: <span class=\"hljs-string\">\"Jan\"</span>, <span class=\"hljs-attr\">wiek</span>: <span class=\"hljs-number\">30</span>, <span class=\"hljs-attr\">kraj</span>: <span class=\"hljs-string\">\"PL\"</span> };\n<span class=\"hljs-keyword\">const</span> { wiek, imie, miasto = <span class=\"hljs-string\">\"nieznane\"</span> } = osoba;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(imie, wiek, miasto); <span class=\"hljs-comment\">// Jan 30 nieznane</span>\n</code></pre>\n<p>Można zmieniać nazwy zmiennych:</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> { <span class=\"hljs-attr\">imie</span>: name, <span class=\"hljs-attr\">wiek</span>: age } = osoba;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(name, age); <span class=\"hljs-comment\">// Jan 30</span>\n</code></pre>\n<hr>\n<h2 id=\"spread-i-rest-operator-\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#spread-i-rest-operator-\">>></a>Spread i rest operator (<code>...</code>)</h2>\n<h3 id=\"spread-operator\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#spread-operator\">>>></a>Spread operator</h3>\n<p>Pozwala na rozwinięcie (skopiowanie) elementów tablicy lub właściwości obiektu:</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> tablica = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>];\n<span class=\"hljs-keyword\">const</span> nowaTablica = [...tablica, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>]; <span class=\"hljs-comment\">// [1, 2, 3, 4, 5]</span>\n\n<span class=\"hljs-keyword\">const</span> obiekt = { <span class=\"hljs-attr\">a</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">b</span>: <span class=\"hljs-number\">2</span> };\n<span class=\"hljs-keyword\">const</span> nowyObiekt = { ...obiekt, <span class=\"hljs-attr\">c</span>: <span class=\"hljs-number\">3</span> }; <span class=\"hljs-comment\">// { a: 1, b: 2, c: 3 }</span>\n</code></pre>\n<h3 id=\"rest-operator\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#rest-operator\">>>></a>Rest operator</h3>\n<p>Pozwala na zbieranie wielu wartości w jedną tablicę (lub obiekt):</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">suma</span>(<span class=\"hljs-params\">...liczby</span>) {\n  <span class=\"hljs-keyword\">return</span> liczby.<span class=\"hljs-title function_\">reduce</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">a, b</span>) =></span> a + b, <span class=\"hljs-number\">0</span>);\n}\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title function_\">suma</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>)); <span class=\"hljs-comment\">// 10</span>\n\n<span class=\"hljs-keyword\">const</span> { a, ...reszta } = { <span class=\"hljs-attr\">a</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">b</span>: <span class=\"hljs-number\">2</span>, <span class=\"hljs-attr\">c</span>: <span class=\"hljs-number\">3</span> };\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(reszta); <span class=\"hljs-comment\">// { b: 2, c: 3 }</span>\n</code></pre>\n<hr>\n<h2 id=\"promise-api-i-obsługa-asynchroniczności\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#promise-api-i-obsługa-asynchroniczności\">>></a>Promise API i obsługa asynchroniczności</h2>\n<h3 id=\"czym-jest-promise\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#czym-jest-promise\">>>></a>Czym jest Promise?</h3>\n<p>Promise reprezentuje operację asynchroniczną, która może zakończyć się sukcesem (<code>resolve</code>) lub błędem (<code>reject</code>). Stany: <em>pending</em> → <em>fulfilled</em> lub <em>rejected</em>.</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> obietnica = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject</span>) =></span> {\n  <span class=\"hljs-built_in\">setTimeout</span>(<span class=\"hljs-function\">() =></span> {\n    <span class=\"hljs-keyword\">const</span> sukces = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() > <span class=\"hljs-number\">0.5</span>;\n    <span class=\"hljs-keyword\">if</span> (sukces) <span class=\"hljs-title function_\">resolve</span>(<span class=\"hljs-string\">\"Sukces!\"</span>);\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-title function_\">reject</span>(<span class=\"hljs-string\">\"Błąd!\"</span>);\n  }, <span class=\"hljs-number\">1000</span>);\n});\n\nobietnica\n  .<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">wynik</span>) =></span> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(wynik))\n  .<span class=\"hljs-title function_\">catch</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">błąd</span>) =></span> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(błąd))\n  .<span class=\"hljs-title function_\">finally</span>(<span class=\"hljs-function\">() =></span> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">\"Gotowe!\"</span>));\n</code></pre>\n<h3 id=\"łańcuchy-promise\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#łańcuchy-promise\">>>></a>Łańcuchy Promise</h3>\n<p>Możesz łączyć wiele operacji asynchronicznych w łańcuch:</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-title function_\">fetch</span>(<span class=\"hljs-string\">\"https://jsonplaceholder.typicode.com/users/1\"</span>)\n  .<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">response</span>) =></span> response.<span class=\"hljs-title function_\">json</span>())\n  .<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">user</span>) =></span> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(user))\n  .<span class=\"hljs-title function_\">catch</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">error</span>) =></span> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(error));\n</code></pre>\n<hr>\n<h2 id=\"asyncawait--nowoczesna-obsługa-kodu-asynchronicznego\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#asyncawait--nowoczesna-obsługa-kodu-asynchronicznego\">>></a>Async/await – nowoczesna obsługa kodu asynchronicznego</h2>\n<h3 id=\"uproszczenie-pracy-z-promise\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#uproszczenie-pracy-z-promise\">>>></a>Uproszczenie pracy z Promise</h3>\n<p>Słowa kluczowe <code>async</code> i <code>await</code> pozwalają pisać kod asynchroniczny w stylu synchronicznym, co znacząco poprawia czytelność i obsługę błędów.</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">pobierzDane</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">try</span> {\n    <span class=\"hljs-keyword\">const</span> response = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">fetch</span>(\n      <span class=\"hljs-string\">\"https://jsonplaceholder.typicode.com/posts/1\"</span>\n    );\n    <span class=\"hljs-keyword\">const</span> post = <span class=\"hljs-keyword\">await</span> response.<span class=\"hljs-title function_\">json</span>();\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(post);\n  } <span class=\"hljs-keyword\">catch</span> (error) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">\"Błąd:\"</span>, error);\n  }\n}\n<span class=\"hljs-title function_\">pobierzDane</span>();\n</code></pre>\n<h3 id=\"zwracanie-wartości-i-obsługa-błędów\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zwracanie-wartości-i-obsługa-błędów\">>>></a>Zwracanie wartości i obsługa błędów</h3>\n<p>Wartość zwrócona przez funkcję oznaczoną <code>async</code> jest automatycznie opakowana w Promise.</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">zwrocLiczbe</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">42</span>;\n}\n<span class=\"hljs-title function_\">zwrocLiczbe</span>().<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">val</span>) =></span> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(val)); <span class=\"hljs-comment\">// 42</span>\n</code></pre>\n<p>Obsługa błędów działa z użyciem standardowego <code>try...catch</code>.</p>\n<hr>\n<h2 id=\"zadania-do-wykonania\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadania-do-wykonania\">>></a>Zadania do wykonania</h2>\n<h3 id=\"zadanie-1\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-1\">>>></a>Zadanie 1</h3>\n<p>Napisz funkcję strzałkową, która przyjmuje dowolną liczbę argumentów i zwraca ich sumę.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">suma</span> = (<span class=\"hljs-params\">...args</span>) => args.<span class=\"hljs-title function_\">reduce</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">a, b</span>) =></span> a + b, <span class=\"hljs-number\">0</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title function_\">suma</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>)); <span class=\"hljs-comment\">// 6</span>\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-2\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-2\">>>></a>Zadanie 2</h3>\n<p>Utwórz obiekt reprezentujący użytkownika z kluczami: <code>imie</code>, <code>email</code>, <code>aktywny</code>. Następnie użyj destrukturyzacji, by wyodrębnić te wartości i wyświetlić je w konsoli.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> user = { <span class=\"hljs-attr\">imie</span>: <span class=\"hljs-string\">\"Ewa\"</span>, <span class=\"hljs-attr\">email</span>: <span class=\"hljs-string\">\"ewa@example.com\"</span>, <span class=\"hljs-attr\">aktywny</span>: <span class=\"hljs-literal\">true</span> };\n<span class=\"hljs-keyword\">const</span> { imie, email, aktywny } = user;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(imie, email, aktywny); <span class=\"hljs-comment\">// Ewa ewa@example.com true</span>\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-3\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-3\">>>></a>Zadanie 3</h3>\n<p>Stwórz tablicę imion, a następnie utwórz nową tablicę ze wszystkimi tymi imionami plus dodatkowym imieniem na końcu (wykorzystaj spread).</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> imiona = [<span class=\"hljs-string\">\"Anna\"</span>, <span class=\"hljs-string\">\"Bartek\"</span>];\n<span class=\"hljs-keyword\">const</span> wiecejImion = [...imiona, <span class=\"hljs-string\">\"Celina\"</span>];\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(wiecejImion); <span class=\"hljs-comment\">// [\"Anna\", \"Bartek\", \"Celina\"]</span>\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-4\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-4\">>>></a>Zadanie 4</h3>\n<p>Napisz funkcję asynchroniczną, która symuluje pobieranie danych z serwera (z użyciem <code>setTimeout</code> i Promise) i po 2 sekundach wyświetla wynik.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">pobierzDane</span> = (<span class=\"hljs-params\"></span>) =>\n  <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve</span>) =></span> <span class=\"hljs-built_in\">setTimeout</span>(<span class=\"hljs-function\">() =></span> <span class=\"hljs-title function_\">resolve</span>(<span class=\"hljs-string\">\"Dane pobrane!\"</span>), <span class=\"hljs-number\">2000</span>));\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">asyncFunction</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\"></span>) => {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">\"Pobieram dane...\"</span>);\n  <span class=\"hljs-keyword\">const</span> dane = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">pobierzDane</span>();\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(dane);\n};\n\n<span class=\"hljs-title function_\">asyncFunction</span>();\n</code></pre>\n</details>\n<hr>\n<p>To tylko początek przygody z nowoczesnym JavaScriptem! Zachęcam do dalszego zgłębiania m.in. takich zagadnień jak: klasy ES6, moduły, funkcje wyższego rzędu, obsługa błędów, praca z API, a także frameworków opartych na JS (React, Vue, Svelte).</p>","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/nowoczesny-javascript.md",{"_8":954,"_10":955,"_12":956,"_22":962,"_24":963,"_34":964,"_26":1007,"_28":1008,"_30":1009,"_32":1010,"_35":36},"Wprowadzenie do metodyki BEM","Czym jest BEM? BEM (Block, Element, Modifier) to metodyka nazewnictwa klas CSS, która pomaga tworzyć komponenty interfejsu użytkownika w sposób modularny i łatwy do utrzymania. BEM dzieli interfejs na bloki, elementy i modyfikatory, co pozwala na lepszą organizację kodu CSS.",[683,957,958,959,960,961,848,104],"css","bem","metodyka","metodyki","stylowanie",[298,957,848],["D",1719705600000],{"_8":965,"_110":966},"Quiz: Podstawy metodyki BEM",[967,975,983,991,999],{"_113":968,"_115":969,"_121":150,"_123":974},"<p>Co oznaczają skróty BEM w kontekście CSS?</p>",[970,971,972,973],"Base, Extension, Model","Block, Element, Modifier","Basic, Element, Main","Block, Example, Method","BEM to skrót od Block, Element, Modifier.",{"_113":976,"_115":977,"_121":122,"_123":982},"<p>Jaką klasę powinien mieć element będący częścią bloku 'menu' według BEM?</p>",[978,979,980,981],"menu__item","item__menu","menu--item","menu-item","Element w BEM zapisujemy jako blok__element, np. ```menu__item```.",{"_113":984,"_115":985,"_121":141,"_123":990},"<p>W jaki sposób w BEM zapisuje się modyfikator bloku 'button'?</p>",[986,987,988,989],"button__primary","button:primary","button-primary","button--primary","Modyfikator zapisujemy jako blok--modyfikator, np. button--primary.",{"_113":992,"_115":993,"_121":122,"_123":998},"<p>Które z poniższych NIE jest zgodne z zasadami BEM?</p>",[994,995,996,997],"form__input__label","form--login","form__input--active","form__group","form__input__label łamie zasadę: nie zagnieżdżamy elementów w elementach.",{"_113":1000,"_115":1001,"_121":132,"_123":1006},"<p>Dlaczego warto stosować BEM?</p>",[1002,1003,1004,1005],"Bo jest wymagane przez wszystkie przeglądarki","Bo wymusza używanie tylko jednego pliku CSS","Bo ułatwia modularność i unikanie konfliktów nazw klas","Bo pozwala pisać CSS wyłącznie w JavaScript","BEM zwiększa modularność, czytelność i pomaga unikać konfliktów w nazwach klas.","85688da4-e83b-4c94-9be8-17de2bf1a4f0","szybszy-css-czyli-wprowadzenie-do-bem","<h2 id=\"spis-treści\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#spis-treści\">>></a>Spis treści</h2>\n<ol>\n<li><a href=\"#czym-jest-bem\">Czym jest BEM?</a></li>\n<li><a href=\"#struktura-bem\">Struktura BEM</a>\n<ul>\n<li><a href=\"#blok\">Blok</a></li>\n<li><a href=\"#element\">Element</a></li>\n<li><a href=\"#modyfikator\">Modyfikator</a></li>\n</ul>\n</li>\n<li><a href=\"#przyk%C5%82ad\">Przykład kodu w BEM</a></li>\n<li><a href=\"#zasady-bem\">Zasady BEM</a></li>\n<li><a href=\"#przyk%C5%82ady\">Przykłady</a>\n<ul>\n<li><a href=\"#formularz-logowania\">Formularz logowania</a></li>\n</ul>\n</li>\n<li><a href=\"#zadania-do-wykonania\">Zadania do wykonania</a>\n<ul>\n<li><a href=\"#zadanie-1\">Zadanie 1 – Karta produktu</a></li>\n<li><a href=\"#zadanie-2\">Zadanie 2 – Nawigacja</a></li>\n<li><a href=\"#zadanie-3\">Zadanie 3 – Artykuł</a></li>\n</ul>\n</li>\n</ol>\n<hr>\n<h2 id=\"czym-jest-bem\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#czym-jest-bem\">>></a>Czym jest BEM?</h2>\n<p><strong>BEM</strong> (ang. <em>Block, Element, Modifier</em>) to popularna metodyka nazewnictwa klas CSS, która ułatwia tworzenie modularnych, powtarzalnych i łatwych do utrzymania komponentów interfejsu użytkownika. Dzięki wyraźnemu podziałowi na bloki, elementy i modyfikatory, kod CSS staje się bardziej przewidywalny, przejrzysty oraz mniej podatny na konflikty stylów.</p>\n<p>Główne założenia BEM:</p>\n<ul>\n<li>Każdy komponent traktujemy jako niezależny blok (np. <code>button</code>, <code>form</code>).</li>\n<li>Blok może zawierać elementy, które nie mają sensu poza jego kontekstem (np. <code>button__icon</code>).</li>\n<li>Blok i element mogą przyjmować różne warianty dzięki modyfikatorom (np. <code>button--primary</code>, <code>button__icon--small</code>).</li>\n</ul>\n<hr>\n<h2 id=\"struktura-bem\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#struktura-bem\">>></a>Struktura BEM</h2>\n<h3 id=\"blok\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#blok\">>>></a>Blok</h3>\n<p>Blok to główny, niezależny komponent interfejsu (np. przycisk, formularz, menu). Otrzymuje unikalną klasę bez dodatkowych znaków.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"block\"</span>></span>Treść bloku<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n</code></pre>\n<h3 id=\"element\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#element\">>>></a>Element</h3>\n<p>Element to część bloku, która nie istnieje samodzielnie. W nazwie klasy po nazwie bloku dodajemy podwójny podkreślnik <code>__</code> i nazwę elementu.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"block\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"block__element\"</span>></span>Treść elementu<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n</code></pre>\n<h3 id=\"modyfikator\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#modyfikator\">>>></a>Modyfikator</h3>\n<p>Modyfikator określa wariant lub stan bloku albo elementu, np. kolor, rozmiar, aktywność. W nazwie klasy po bloku lub elemencie dodajemy podwójny myślnik <code>--</code> i nazwę modyfikatora.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"block block--modifier\"</span>></span>Treść zmodyfikowanego bloku<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"block__element block__element--modifier\"</span>></span>\n  Treść zmodyfikowanego elementu\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n</code></pre>\n<hr>\n<h2 id=\"przykład\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#przykład\">>></a>Przykład</h2>\n<p>Komponent przycisku z elementem tekstowym i modyfikatorem:</p>\n<p><strong>HTML:</strong></p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"button button--primary\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"button__text\"</span>></span>Kliknij mnie<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">span</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n</code></pre>\n<p><strong>CSS:</strong></p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.button</span> {\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">10px</span> <span class=\"hljs-number\">20px</span>;\n  <span class=\"hljs-attribute\">border</span>: none;\n  <span class=\"hljs-attribute\">cursor</span>: pointer;\n}\n\n<span class=\"hljs-selector-class\">.button--primary</span> {\n  <span class=\"hljs-attribute\">background-color</span>: blue;\n  <span class=\"hljs-attribute\">color</span>: white;\n}\n\n<span class=\"hljs-selector-class\">.button__text</span> {\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">16px</span>;\n}\n</code></pre>\n<hr>\n<h2 id=\"zasady-bem\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zasady-bem\">>></a>Zasady BEM</h2>\n<ol>\n<li><strong>Nazwa bloku:</strong> Powinna być krótka, jednoznaczna i opisywać funkcję komponentu (np. <code>form</code>, <code>menu</code>, <code>header</code>).</li>\n<li><strong>Nazwa elementu:</strong> Opisuje część bloku w kontekście tego bloku (np. <code>form__input</code>, <code>menu__item</code>).</li>\n<li><strong>Nazwa modyfikatora:</strong> Informuje o dodatkowym stanie lub wariancie (np. <code>form--login</code>, <code>button--disabled</code>, <code>menu__item--active</code>).</li>\n<li><strong>Unikaj zagnieżdżania:</strong> Każdy element odnosi się zawsze do swojego bloku, nie do innych elementów.</li>\n<li><strong>Jasna struktura:</strong> Każdy komponent i jego warianty są łatwe do odnalezienia i przetestowania.</li>\n</ol>\n<hr>\n<h2 id=\"przykłady\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#przykłady\">>></a>Przykłady</h2>\n<h3 id=\"formularz-logowania\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#formularz-logowania\">>>></a>Formularz logowania</h3>\n<p><strong>HTML:</strong></p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form form--login\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form__group\"</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form__label\"</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"username\"</span>></span>Nazwa użytkownika<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">label</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form__input\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"username\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"username\"</span> /></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form__group\"</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form__label\"</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"password\"</span>></span>Hasło<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">label</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form__input\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"password\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"password\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"password\"</span> /></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form__button form__button--submit\"</span>></span>Zaloguj się<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">button</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">form</span>></span>\n</code></pre>\n<p><strong>CSS:</strong></p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.form</span> {\n  <span class=\"hljs-attribute\">max-width</span>: <span class=\"hljs-number\">300px</span>;\n  <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">0</span> auto;\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">20px</span>;\n  <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">1px</span> solid <span class=\"hljs-number\">#ccc</span>;\n  <span class=\"hljs-attribute\">border-radius</span>: <span class=\"hljs-number\">5px</span>;\n}\n\n<span class=\"hljs-selector-class\">.form--login</span> {\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#f9f9f9</span>;\n}\n\n<span class=\"hljs-selector-class\">.form__group</span> {\n  <span class=\"hljs-attribute\">margin-bottom</span>: <span class=\"hljs-number\">15px</span>;\n}\n\n<span class=\"hljs-selector-class\">.form__label</span> {\n  <span class=\"hljs-attribute\">display</span>: block;\n  <span class=\"hljs-attribute\">margin-bottom</span>: <span class=\"hljs-number\">5px</span>;\n  <span class=\"hljs-attribute\">font-weight</span>: bold;\n}\n\n<span class=\"hljs-selector-class\">.form__input</span> {\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100%</span>;\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">8px</span>;\n  <span class=\"hljs-attribute\">box-sizing</span>: border-box;\n}\n\n<span class=\"hljs-selector-class\">.form__button</span> {\n  <span class=\"hljs-attribute\">display</span>: inline-block;\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">10px</span> <span class=\"hljs-number\">20px</span>;\n  <span class=\"hljs-attribute\">border</span>: none;\n  <span class=\"hljs-attribute\">cursor</span>: pointer;\n}\n\n<span class=\"hljs-selector-class\">.form__button--submit</span> {\n  <span class=\"hljs-attribute\">background-color</span>: blue;\n  <span class=\"hljs-attribute\">color</span>: white;\n}\n</code></pre>\n<hr>\n<h2 id=\"zadania-do-wykonania\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadania-do-wykonania\">>></a>Zadania do wykonania</h2>\n<h3 id=\"zadanie-1--karta-produktu\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-1--karta-produktu\">>>></a>Zadanie 1 – Karta produktu</h3>\n<p>Utwórz komponent karty produktu (<code>product-card</code>) z elementami dla tytułu (<code>product-card__title</code>), opisu (<code>product-card__description</code>) i ceny (<code>product-card__price</code>). Dodaj modyfikator dla karty wyróżnionej (<code>product-card--featured</code>).</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<p><strong>HTML:</strong></p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"product-card product-card--featured\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h2</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"product-card__title\"</span>></span>Nazwa produktu<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h2</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"product-card__description\"</span>></span>Opis produktu<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"product-card__price\"</span>></span>99,99 zł<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">span</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n</code></pre>\n<p><strong>CSS:</strong></p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.product-card</span> {\n  <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">1px</span> solid <span class=\"hljs-number\">#ccc</span>;\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">15px</span>;\n  <span class=\"hljs-attribute\">border-radius</span>: <span class=\"hljs-number\">5px</span>;\n}\n\n<span class=\"hljs-selector-class\">.product-card--featured</span> {\n  <span class=\"hljs-attribute\">border-color</span>: gold;\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#fffbf0</span>;\n}\n\n<span class=\"hljs-selector-class\">.product-card__title</span> {\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">18px</span>;\n  <span class=\"hljs-attribute\">margin-bottom</span>: <span class=\"hljs-number\">10px</span>;\n}\n\n<span class=\"hljs-selector-class\">.product-card__description</span> {\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">14px</span>;\n  <span class=\"hljs-attribute\">margin-bottom</span>: <span class=\"hljs-number\">15px</span>;\n}\n\n<span class=\"hljs-selector-class\">.product-card__price</span> {\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">16px</span>;\n  <span class=\"hljs-attribute\">font-weight</span>: bold;\n}\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-2--nawigacja\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-2--nawigacja\">>>></a>Zadanie 2 – Nawigacja</h3>\n<p>Stwórz nawigację (<code>nav</code>) z elementami dla pozycji nawigacji (<code>nav__item</code>) i linków (<code>nav__link</code>). Dodaj modyfikator dla aktywnego linku (<code>nav__link--active</code>).</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<p><strong>HTML:</strong></p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">nav</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"nav\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ul</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"nav__item\"</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"nav__link nav__link--active\"</span>></span>Home<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"nav__item\"</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"nav__link\"</span>></span>O nas<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"nav__item\"</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"#\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"nav__link\"</span>></span>Kontakt<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ul</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">nav</span>></span>\n</code></pre>\n<p><strong>CSS:</strong></p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.nav</span> {\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-number\">#333</span>;\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">10px</span>;\n}\n\n<span class=\"hljs-selector-class\">.nav__item</span> {\n  <span class=\"hljs-attribute\">display</span>: inline;\n  <span class=\"hljs-attribute\">margin-right</span>: <span class=\"hljs-number\">15px</span>;\n}\n\n<span class=\"hljs-selector-class\">.nav__link</span> {\n  <span class=\"hljs-attribute\">color</span>: white;\n  <span class=\"hljs-attribute\">text-decoration</span>: none;\n}\n\n<span class=\"hljs-selector-class\">.nav__link--active</span> {\n  <span class=\"hljs-attribute\">font-weight</span>: bold;\n  <span class=\"hljs-attribute\">text-decoration</span>: underline;\n}\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-3--artykuł\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-3--artykuł\">>>></a>Zadanie 3 – Artykuł</h3>\n<p>Utwórz sekcję artykułu (<code>article</code>) z elementami dla nagłówka (<code>article__header</code>), treści (<code>article__content</code>) i stopki (<code>article__footer</code>). Dodaj modyfikator dla nagłówka z obrazkiem (<code>article__header--with-image</code>).</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<p><strong>HTML:</strong></p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">article</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"article\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">header</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"article__header article__header--with-image\"</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>Tytuł artykułu<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"image.jpg\"</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">\"Obrazek w nagłówku\"</span> /></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">header</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">section</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"article__content\"</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Treść artykułu...<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">section</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">footer</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"article__footer\"</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Stopka artykułu<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">footer</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">article</span>></span>\n</code></pre>\n<p><strong>CSS:</strong></p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.article</span> {\n  <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">1px</span> solid <span class=\"hljs-number\">#ddd</span>;\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">20px</span>;\n  <span class=\"hljs-attribute\">border-radius</span>: <span class=\"hljs-number\">5px</span>;\n}\n\n<span class=\"hljs-selector-class\">.article__header</span> {\n  <span class=\"hljs-attribute\">margin-bottom</span>: <span class=\"hljs-number\">15px</span>;\n}\n\n<span class=\"hljs-selector-class\">.article__header--with-image</span> <span class=\"hljs-selector-tag\">img</span> {\n  <span class=\"hljs-attribute\">display</span>: block;\n  <span class=\"hljs-attribute\">max-width</span>: <span class=\"hljs-number\">100%</span>;\n  <span class=\"hljs-attribute\">height</span>: auto;\n}\n\n<span class=\"hljs-selector-class\">.article__content</span> {\n  <span class=\"hljs-attribute\">margin-bottom</span>: <span class=\"hljs-number\">15px</span>;\n}\n\n<span class=\"hljs-selector-class\">.article__footer</span> {\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">14px</span>;\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#777</span>;\n}\n</code></pre>\n</details>\n<hr>\n<p>To wszystko na temat podstaw metodyki BEM! Zachęcam do dalszego eksperymentowania, stosowania BEM w praktyce i pogłębiania wiedzy, aby tworzyć modularne, skalowalne i łatwe do utrzymania arkusze stylów CSS.</p>","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/szybszy-css-czyli-wprowadzenie-do-bem.md",{"_8":1012,"_10":1013,"_12":1014,"_22":1015,"_24":1016,"_34":1017,"_26":1060,"_28":1061,"_30":1062,"_32":1063,"_35":36},"Wprowadzenie do CSS","CSS (Cascading Style Sheets) to język służący do opisywania wyglądu i formatu dokumentu HTML. CSS pozwala na oddzielenie treści od prezentacji, co umożliwia tworzenie estetycznych i spójnych stron internetowych. W tym kursie omówimy podstawy CSS, w tym selektory, właściwości, sposoby załączania CSS do HTML oraz JavaScript, a także przedstawimy kilka zadań do wykonania.",[957,848,683,298,904,905,18,104],[298,957],["D",1719705600000],{"_8":1018,"_110":1019},"Quiz: Podstawy CSS",[1020,1028,1036,1044,1052],{"_113":1021,"_115":1022,"_121":141,"_123":1027},"<p>Co oznacza skrót CSS?</p>",[1023,1024,1025,1026],"Cascaded Sheet System","Creative Style Syntax","Coded Style System","Cascading Style Sheets","CSS to Cascading Style Sheets, czyli kaskadowe arkusze stylów.",{"_113":1029,"_115":1030,"_121":132,"_123":1035},"<p>Który sposób załączania stylów CSS do strony jest najbardziej zalecany dla większych projektów?</p>",[1031,1032,1033,1034],"Internal CSS","Inline CSS","External CSS (zewnętrzny plik .css)","JavaScript","External CSS pozwala na lepszą organizację i ponowne wykorzystanie stylów.",{"_113":1037,"_115":1038,"_121":122,"_123":1043},"<p>Jak wygląda selektor klasy w CSS?</p>",[1039,1040,1041,1042],".nazwa-klasy","*nazwa-klasy","#nazwa-klasy","nazwa-klasy","Selektor klasy zapisujemy z kropką, np. .header.",{"_113":1045,"_115":1046,"_121":122,"_123":1051},"<p>Jak ustawić kolor tła elementu na żółty?</p>",[1047,1048,1049,1050],"background-color: yellow;","color: yellow;","background: yellow-text;","border-color: yellow;","Do ustawienia koloru tła służy background-color.",{"_113":1053,"_115":1054,"_121":132,"_123":1059},"<p>Za co odpowiada właściwość 'border-radius'?</p>",[1055,1056,1057,1058],"Ustawienie tła obrazkowego","Zmiana rozmiaru czcionki","Zaokrąglenie rogów elementu","Zmiana koloru ramki","border-radius pozwala na zaokrąglenie rogów elementu.","d513dd02-32a0-4a2c-b264-59da6483b934","wprowadzenie-do-css","<h2 id=\"spis-treści\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#spis-treści\">>></a>Spis treści</h2>\n<ol>\n<li><a href=\"#czym-jest-css\">Czym jest CSS?</a></li>\n<li><a href=\"#sposoby-za%C5%82%C4%85czania-css-do-html\">Sposoby załączania CSS do HTML</a>\n<ul>\n<li><a href=\"#inline-css\">Inline CSS</a></li>\n<li><a href=\"#internal-css\">Internal CSS</a></li>\n<li><a href=\"#external-css\">External CSS</a></li>\n</ul>\n</li>\n<li><a href=\"#podstawowe-selektory-css\">Podstawowe selektory CSS</a>\n<ul>\n<li><a href=\"#selektory-elementow\">Selektory elementów</a></li>\n<li><a href=\"#selektory-klas\">Selektory klas</a></li>\n<li><a href=\"#selektory-identyfikatorow\">Selektory identyfikatorów</a></li>\n</ul>\n</li>\n<li><a href=\"#podstawowe-wlasciwosci-css\">Podstawowe właściwości CSS</a>\n<ul>\n<li><a href=\"#kolory\">Kolory</a></li>\n<li><a href=\"#tlo\">Tło</a></li>\n<li><a href=\"#marginesy-i-wypelnienia\">Marginesy i wypełnienia</a></li>\n<li><a href=\"#ramki\">Ramki</a></li>\n</ul>\n</li>\n<li><a href=\"#zadania-do-wykonania\">Zadania do wykonania</a>\n<ul>\n<li><a href=\"#zadanie-1\">Zadanie 1</a></li>\n<li><a href=\"#zadanie-2\">Zadanie 2</a></li>\n<li><a href=\"#zadanie-3\">Zadanie 3</a></li>\n<li><a href=\"#zadanie-4\">Zadanie 4</a></li>\n</ul>\n</li>\n</ol>\n<hr>\n<h2 id=\"czym-jest-css\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#czym-jest-css\">>></a>Czym jest CSS?</h2>\n<p><strong>CSS</strong> (Cascading Style Sheets, Kaskadowe Arkusze Stylów) to język służący do opisywania wyglądu i formatu dokumentu HTML. Dzięki CSS możesz oddzielić strukturę strony (HTML) od jej prezentacji (wyglądu i stylu). Pozwala to tworzyć estetyczne, przejrzyste i łatwe do utrzymania strony internetowe. CSS umożliwia m.in. definiowanie kolorów, czcionek, układów, odstępów, ramek, tła czy efektów specjalnych.</p>\n<hr>\n<h2 id=\"sposoby-załączania-css-do-html\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#sposoby-załączania-css-do-html\">>></a>Sposoby załączania CSS do HTML</h2>\n<h3 id=\"inline-css\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#inline-css\">>>></a>Inline CSS</h3>\n<p>Stylowanie pojedynczych elementów bezpośrednio w atrybucie <code>style</code> w kodzie HTML.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"pl\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Inline CSS<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"color: blue;\"</span>></span>Witaj, świecie!<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<p><em>Stosuj wyłącznie do bardzo prostych i pojedynczych przypadków.</em></p>\n<h3 id=\"internal-css\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#internal-css\">>>></a>Internal CSS</h3>\n<p>Umieszczanie stylów wewnątrz dokumentu HTML, w sekcji <code>&#x3C;head></code>, za pomocą tagu <code>&#x3C;style></code>.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"pl\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Internal CSS<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">style</span>></span><span class=\"css\">\n      <span class=\"hljs-selector-tag\">h1</span> {\n        <span class=\"hljs-attribute\">color</span>: blue;\n      }\n    </span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">style</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>Witaj, świecie!<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<p><em>Dobre do małych stron lub prototypów.</em></p>\n<h3 id=\"external-css\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#external-css\">>>></a>External CSS</h3>\n<p>Tworzenie osobnego pliku <code>.css</code> i dołączanie go do strony za pomocą tagu <code>&#x3C;link></code>. To najbardziej zalecana metoda.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-comment\">&#x3C;!-- index.html --></span>\n<span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"pl\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>External CSS<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">\"stylesheet\"</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"style.css\"</span> /></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>Witaj, świecie!<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-comment\">/* style.css */</span>\n<span class=\"hljs-selector-tag\">h1</span> {\n  <span class=\"hljs-attribute\">color</span>: blue;\n}\n</code></pre>\n<p><em>Umożliwia łatwą aktualizację stylów i ponowne ich wykorzystanie na wielu stronach.</em></p>\n<hr>\n<h2 id=\"podstawowe-selektory-css\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podstawowe-selektory-css\">>></a>Podstawowe selektory CSS</h2>\n<h3 id=\"selektory-elementów\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#selektory-elementów\">>>></a>Selektory elementów</h3>\n<p>Najprostszy selektor – wybiera wszystkie elementy danego typu (np. wszystkie nagłówki <code>&#x3C;h1></code>).</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">h1</span> {\n  <span class=\"hljs-attribute\">color</span>: blue;\n}\n</code></pre>\n<h3 id=\"selektory-klas\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#selektory-klas\">>>></a>Selektory klas</h3>\n<p>Selektor, który styluje elementy z określoną klasą. Klas można używać wielokrotnie na różnych elementach.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"naglowek\"</span>></span>Witaj, świecie!<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.naglowek</span> {\n  <span class=\"hljs-attribute\">color</span>: blue;\n}\n</code></pre>\n<h3 id=\"selektory-identyfikatorów\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#selektory-identyfikatorów\">>>></a>Selektory identyfikatorów</h3>\n<p>Selektor, który styluje element z unikalnym identyfikatorem (<code>id</code>).</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"naglowek-glowny\"</span>></span>Witaj, świecie!<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-id\">#naglowek-glowny</span> {\n  <span class=\"hljs-attribute\">color</span>: blue;\n}\n</code></pre>\n<p><em>Identyfikator (<code>id</code>) powinien być unikalny na stronie.</em></p>\n<hr>\n<h2 id=\"podstawowe-właściwości-css\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podstawowe-właściwości-css\">>></a>Podstawowe właściwości CSS</h2>\n<h3 id=\"kolory\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#kolory\">>>></a>Kolory</h3>\n<p>Definiowanie kolorów może odbywać się na kilka sposobów: nazwy, wartości szesnastkowe, RGB, czy HSL.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">h1</span> {\n  <span class=\"hljs-attribute\">color</span>: red; <span class=\"hljs-comment\">/* Nazwa koloru */</span>\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#ff0000</span>; <span class=\"hljs-comment\">/* Wartość szesnastkowa */</span>\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-built_in\">rgb</span>(<span class=\"hljs-number\">255</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>); <span class=\"hljs-comment\">/* RGB */</span>\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-built_in\">hsl</span>(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100%</span>, <span class=\"hljs-number\">50%</span>); <span class=\"hljs-comment\">/* HSL */</span>\n}\n</code></pre>\n<h3 id=\"tło\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#tło\">>>></a>Tło</h3>\n<p>Możesz ustawić kolor tła, obrazek, powtarzanie, pozycję i rozmiar.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">body</span> {\n  <span class=\"hljs-attribute\">background-color</span>: lightgray; <span class=\"hljs-comment\">/* Kolor tła */</span>\n  <span class=\"hljs-attribute\">background-image</span>: <span class=\"hljs-built_in\">url</span>(<span class=\"hljs-string\">\"tlo.jpg\"</span>); <span class=\"hljs-comment\">/* Obrazek tła */</span>\n  <span class=\"hljs-attribute\">background-repeat</span>: no-repeat; <span class=\"hljs-comment\">/* Brak powtarzania obrazka */</span>\n  <span class=\"hljs-attribute\">background-position</span>: center; <span class=\"hljs-comment\">/* Pozycja obrazka */</span>\n  <span class=\"hljs-attribute\">background-size</span>: cover; <span class=\"hljs-comment\">/* Rozmiar obrazka */</span>\n}\n</code></pre>\n<h3 id=\"marginesy-i-wypełnienia\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#marginesy-i-wypełnienia\">>>></a>Marginesy i wypełnienia</h3>\n<p>Marginesy (<code>margin</code>) określają odstęp na zewnątrz elementu, a wypełnienia (<code>padding</code>) – wewnątrz.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">p</span> {\n  <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">20px</span>; <span class=\"hljs-comment\">/* Odstęp na zewnątrz */</span>\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">10px</span>; <span class=\"hljs-comment\">/* Odstęp wewnątrz */</span>\n}\n</code></pre>\n<h3 id=\"ramki\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#ramki\">>>></a>Ramki</h3>\n<p>Dzięki właściwościom ramek możesz dodać obramowanie oraz zaokrąglić jego rogi.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">div</span> {\n  <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">1px</span> solid black; <span class=\"hljs-comment\">/* Obramowanie */</span>\n  <span class=\"hljs-attribute\">border-radius</span>: <span class=\"hljs-number\">10px</span>; <span class=\"hljs-comment\">/* Zaokrąglone rogi */</span>\n}\n</code></pre>\n<hr>\n<h2 id=\"zadania-do-wykonania\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadania-do-wykonania\">>></a>Zadania do wykonania</h2>\n<h3 id=\"zadanie-1\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-1\">>>></a>Zadanie 1</h3>\n<p>Stwórz stronę HTML z elementem <code>&#x3C;h1></code>, który ma kolor czerwony przy użyciu External CSS.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-comment\">&#x3C;!-- index.html --></span>\n<span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"pl\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Zadanie 1<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">\"stylesheet\"</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"style.css\"</span> /></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"red\"</span>></span>Witaj, świecie!<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-comment\">/* style.css */</span>\n<span class=\"hljs-selector-class\">.red</span> {\n  <span class=\"hljs-attribute\">color</span>: red;\n}\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-2\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-2\">>>></a>Zadanie 2</h3>\n<p>Utwórz paragraf (<code>&#x3C;p></code>), który ma zielone tło, 20 pikseli wypełnienia i zaokrąglone rogi o promieniu 10 pikseli.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-comment\">&#x3C;!-- index.html --></span>\n<span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"pl\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Zadanie 2<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">\"stylesheet\"</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"style.css\"</span> /></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"green-bg\"</span>></span>To jest paragraf<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-comment\">/* style.css */</span>\n<span class=\"hljs-selector-class\">.green-bg</span> {\n  <span class=\"hljs-attribute\">background-color</span>: green;\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">20px</span>;\n  <span class=\"hljs-attribute\">border-radius</span>: <span class=\"hljs-number\">10px</span>;\n}\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-3\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-3\">>>></a>Zadanie 3</h3>\n<p>Stwórz div, który ma niebieską ramkę o grubości 2 pikseli, a wewnątrz niego umieść tekst \"To jest div\".</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-comment\">&#x3C;!-- index.html --></span>\n<span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"pl\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Zadanie 3<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">\"stylesheet\"</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"style.css\"</span> /></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"blue-border\"</span>></span>To jest div<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-comment\">/* style.css */</span>\n<span class=\"hljs-selector-class\">.blue-border</span> {\n  <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">2px</span> solid blue;\n}\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-4\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-4\">>>></a>Zadanie 4</h3>\n<p>Utwórz stronę HTML z trzema nagłówkami (<code>&#x3C;h1></code>, <code>&#x3C;h2></code>, <code>&#x3C;h3></code>) o różnych kolorach za pomocą selektorów klas.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-comment\">&#x3C;!-- index.html --></span>\n<span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"pl\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Zadanie 4<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">\"stylesheet\"</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"style.css\"</span> /></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"red\"</span>></span>Nagłówek 1<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h2</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"blue\"</span>></span>Nagłówek 2<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h2</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h3</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"green\"</span>></span>Nagłówek 3<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h3</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-comment\">/* style.css */</span>\n<span class=\"hljs-selector-class\">.red</span> {\n  <span class=\"hljs-attribute\">color</span>: red;\n}\n\n<span class=\"hljs-selector-class\">.blue</span> {\n  <span class=\"hljs-attribute\">color</span>: blue;\n}\n\n<span class=\"hljs-selector-class\">.green</span> {\n  <span class=\"hljs-attribute\">color</span>: green;\n}\n</code></pre>\n</details>\n<hr>\n<p>To tyle na temat podstaw CSS! Zachęcam do dalszego eksperymentowania i zgłębiania tego tematu, aby tworzyć coraz bardziej zaawansowane i estetyczne strony internetowe.</p>","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/wprowadzenie-do-css.md",{"_8":1065,"_10":1066,"_12":1067,"_22":1070,"_24":1071,"_34":1072,"_26":1115,"_28":1116,"_30":1117,"_32":1118,"_35":36},"Czym jest DOM?","Czym jest DOM? DOM (Document Object Model) to interfejs programistyczny dla dokumentów HTML i XML. Umożliwia dynamiczne manipulowanie strukturą, stylem i treścią dokumentów. DOM reprezentuje dokument jako drzewo obiektów, gdzie każdy element, atrybut i tekst w dokumencie jest węzłem drzewa.",[683,848,1068,1069,298,104],"dom","struktura",[298,848],["D",1719705600000],{"_8":1073,"_110":1074},"Quiz: Podstawy DOM",[1075,1083,1091,1099,1107],{"_113":1076,"_115":1077,"_121":150,"_123":1082},"<p>Co oznacza skrót DOM w kontekście stron internetowych?</p>",[1078,1079,1080,1081],"Document Option Method","Document Object Model","Dynamic Output Mapper","Data Oriented Module","DOM to Document Object Model – model obiektowy dokumentu HTML lub XML.",{"_113":1084,"_115":1085,"_121":122,"_123":1090},"<p>Jaką strukturę prezentuje DOM?</p>",[1086,1087,1088,1089],"Drzewiastą (hierarchiczną)","Płaską","Listową","Tablicową","DOM przedstawia dokument jako drzewo obiektów (węzłów).",{"_113":1092,"_115":1093,"_121":122,"_123":1098},"<p>Która metoda pozwala pobrać element o określonym identyfikatorze?</p>",[1094,1095,1096,1097],"document.getElementById","document.createElement","document.getElementsByClassName","document.querySelectorAll","document.getElementById pobiera element o podanym id.",{"_113":1100,"_115":1101,"_121":122,"_123":1106},"<p>Jak za pomocą DOM dodać nowy element do listy <code>ul</code>?</p>",[1102,1103,1104,1105],"Utworzyć element przez createElement i dołączyć przez appendChild","Użyć metody getElementsByTagName","Użyć innerHTML na ul","Zmienić atrybut src","Tworzymy element createElement i dołączamy przez appendChild.",{"_113":1108,"_115":1109,"_121":122,"_123":1114},"<p>Co umożliwia metoda <code>querySelectorAll?</code></p>",[1110,1111,1112,1113],"Wybór wielu elementów za pomocą selektora CSS","Usunięcie elementu","Zmianę atrybutu id","Zmianę tekstu elementu","querySelectorAll wybiera wszystkie pasujące elementy zgodnie z selektorem CSS.","7e9016f6-68a0-4c36-bd59-ce6e42a6820d","wprowadzenie-do-dom","<h2 id=\"spis-treści\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#spis-treści\">>></a>Spis treści</h2>\n<ol>\n<li><a href=\"#wprowadzenie\">Wprowadzenie</a></li>\n<li><a href=\"#struktura-dom\">Struktura DOM</a></li>\n<li><a href=\"#podstawowe-operacje-na-dom\">Podstawowe operacje na DOM</a>\n<ul>\n<li><a href=\"#wybieranie-elementow\">Wybieranie elementów</a></li>\n<li><a href=\"#manipulacja-elementami\">Manipulacja elementami</a></li>\n</ul>\n</li>\n<li><a href=\"#zadania-do-wykonania\">Zadania do wykonania</a>\n<ul>\n<li><a href=\"#zadanie-1\">Zadanie 1</a></li>\n<li><a href=\"#zadanie-2\">Zadanie 2</a></li>\n<li><a href=\"#zadanie-3\">Zadanie 3</a></li>\n<li><a href=\"#zadanie-4\">Zadanie 4</a></li>\n</ul>\n</li>\n</ol>\n<hr>\n<h2 id=\"wprowadzenie\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#wprowadzenie\">>></a>Wprowadzenie</h2>\n<p><strong>DOM</strong> (Document Object Model) to interfejs programistyczny, który pozwala na dynamiczne manipulowanie strukturą, stylem i treścią dokumentów HTML oraz XML. DOM przedstawia dokument jako drzewo obiektów, gdzie każdy element, atrybut czy fragment tekstu jest węzłem. Dzięki temu możemy programistycznie odczytywać, modyfikować, dodawać i usuwać dowolne fragmenty dokumentu w czasie rzeczywistym za pomocą JavaScript.</p>\n<hr>\n<h2 id=\"struktura-dom\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#struktura-dom\">>></a>Struktura DOM</h2>\n<p>DOM reprezentuje dokument HTML jako strukturę drzewiastą, gdzie każdy element jest węzłem połączonym z innymi w hierarchii rodzic-dziecko.</p>\n<p>Przykładowy dokument HTML:</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Przykład DOM<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>Witaj, świecie!<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>To jest akapit.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<p>W DOM taki dokument zostanie odwzorowany jako:</p>\n<pre><code>#document\n   |\n   +-- html\n        |\n        +-- head\n        |     |\n        |     +-- title\n        |            |\n        |            +-- \"Przykład DOM\"\n        |\n        +-- body\n              |\n              +-- h1\n              |     |\n              |     +-- \"Witaj, świecie!\"\n              |\n              +-- p\n                    |\n                    +-- \"To jest akapit.\"\n</code></pre>\n<hr>\n<h2 id=\"podstawowe-operacje-na-dom\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podstawowe-operacje-na-dom\">>></a>Podstawowe operacje na DOM</h2>\n<p>DOM udostępnia wiele metod do pobierania, modyfikowania i usuwania elementów. Oto najczęściej używane:</p>\n<h3 id=\"wybieranie-elementów\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#wybieranie-elementów\">>>></a>Wybieranie elementów</h3>\n<h4 id=\"getelementbyid\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#getelementbyid\">>>>></a><code>getElementById</code></h4>\n<p>Pozwala pobrać element o konkretnym atrybucie <code>id</code>:</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"myParagraph\"</span>></span>To jest akapit.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n  <span class=\"hljs-keyword\">const</span> para = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">\"myParagraph\"</span>);\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(para.<span class=\"hljs-property\">textContent</span>); <span class=\"hljs-comment\">// \"To jest akapit.\"</span>\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n</code></pre>\n<h4 id=\"getelementsbyclassname\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#getelementsbyclassname\">>>>></a><code>getElementsByClassName</code></h4>\n<p>Zwraca kolekcję wszystkich elementów z określoną klasą:</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"myClass\"</span>></span>Akapit 1<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"myClass\"</span>></span>Akapit 2<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n  <span class=\"hljs-keyword\">const</span> paras = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementsByClassName</span>(<span class=\"hljs-string\">\"myClass\"</span>);\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(paras.<span class=\"hljs-property\">length</span>); <span class=\"hljs-comment\">// 2</span>\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n</code></pre>\n<h4 id=\"queryselector-i-queryselectorall\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#queryselector-i-queryselectorall\">>>>></a><code>querySelector</code> i <code>querySelectorAll</code></h4>\n<p>Umożliwiają wybieranie elementów za pomocą selektorów CSS:</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"myClass\"</span>></span>Akapit 1<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"myClass\"</span>></span>Akapit 2<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n  <span class=\"hljs-keyword\">const</span> firstPara = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">querySelector</span>(<span class=\"hljs-string\">\".myClass\"</span>);\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(firstPara.<span class=\"hljs-property\">textContent</span>); <span class=\"hljs-comment\">// \"Akapit 1\"</span>\n\n  <span class=\"hljs-keyword\">const</span> allParas = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">querySelectorAll</span>(<span class=\"hljs-string\">\".myClass\"</span>);\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(allParas.<span class=\"hljs-property\">length</span>); <span class=\"hljs-comment\">// 2</span>\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n</code></pre>\n<hr>\n<h3 id=\"manipulacja-elementami\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#manipulacja-elementami\">>>></a>Manipulacja elementami</h3>\n<h4 id=\"zmiana-tekstu\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zmiana-tekstu\">>>>></a>Zmiana tekstu</h4>\n<p>Zmiana tekstu wewnątrz elementu:</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"myParagraph\"</span>></span>To jest akapit.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n  <span class=\"hljs-keyword\">const</span> para = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">\"myParagraph\"</span>);\n  para.<span class=\"hljs-property\">textContent</span> = <span class=\"hljs-string\">\"Zmieniony tekst akapitu.\"</span>;\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n</code></pre>\n<h4 id=\"zmiana-atrybutów\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zmiana-atrybutów\">>>>></a>Zmiana atrybutów</h4>\n<p>Zmiana dowolnych atrybutów HTML (np. obrazka):</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"myImage\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"image.jpg\"</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">\"Obrazek\"</span> /></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n  <span class=\"hljs-keyword\">const</span> img = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">\"myImage\"</span>);\n  img.<span class=\"hljs-property\">src</span> = <span class=\"hljs-string\">\"newImage.jpg\"</span>;\n  img.<span class=\"hljs-property\">alt</span> = <span class=\"hljs-string\">\"Nowy obrazek\"</span>;\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n</code></pre>\n<h4 id=\"dodawanie-elementów\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#dodawanie-elementów\">>>>></a>Dodawanie elementów</h4>\n<p>Tworzenie i dodawanie nowych elementów do strony:</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ul</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"myList\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span>Element 1<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ul</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n  <span class=\"hljs-keyword\">const</span> list = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">\"myList\"</span>);\n  <span class=\"hljs-keyword\">const</span> newItem = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">createElement</span>(<span class=\"hljs-string\">\"li\"</span>);\n  newItem.<span class=\"hljs-property\">textContent</span> = <span class=\"hljs-string\">\"Element 2\"</span>;\n  list.<span class=\"hljs-title function_\">appendChild</span>(newItem);\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n</code></pre>\n<h4 id=\"usuwanie-elementów\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#usuwanie-elementów\">>>>></a>Usuwanie elementów</h4>\n<p>Usuwanie elementu z drzewa DOM:</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"myParagraph\"</span>></span>To jest akapit.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n  <span class=\"hljs-keyword\">const</span> para = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">\"myParagraph\"</span>);\n  para.<span class=\"hljs-title function_\">remove</span>();\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n</code></pre>\n<hr>\n<h2 id=\"zadania-do-wykonania\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadania-do-wykonania\">>></a>Zadania do wykonania</h2>\n<h3 id=\"zadanie-1\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-1\">>>></a>Zadanie 1</h3>\n<p>Stwórz stronę HTML z listą (<code>ul</code>) i trzema elementami (<code>li</code>). Następnie za pomocą JavaScript dodaj czwarty element do listy.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"pl\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Lista<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ul</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"myList\"</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span>Element 1<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span>Element 2<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span>Element 3<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ul</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n      <span class=\"hljs-keyword\">const</span> list = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">\"myList\"</span>);\n      <span class=\"hljs-keyword\">const</span> newItem = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">createElement</span>(<span class=\"hljs-string\">\"li\"</span>);\n      newItem.<span class=\"hljs-property\">textContent</span> = <span class=\"hljs-string\">\"Element 4\"</span>;\n      list.<span class=\"hljs-title function_\">appendChild</span>(newItem);\n    </span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-2\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-2\">>>></a>Zadanie 2</h3>\n<p>Utwórz formularz z polem tekstowym i przyciskiem. Po kliknięciu przycisku zmień tekst przycisku na \"Wysłano\".</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"pl\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Formularz<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"myForm\"</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"myInput\"</span> /></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"button\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"myButton\"</span>></span>Wyślij<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">button</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">form</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n      <span class=\"hljs-keyword\">const</span> button = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">\"myButton\"</span>);\n      button.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">\"click\"</span>, <span class=\"hljs-function\">() =></span> {\n        button.<span class=\"hljs-property\">textContent</span> = <span class=\"hljs-string\">\"Wysłano\"</span>;\n      });\n    </span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-3\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-3\">>>></a>Zadanie 3</h3>\n<p>Napisz kod HTML z obrazkiem. Za pomocą JavaScript zmień źródło obrazka na nowe po kliknięciu na niego.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"pl\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Obrazek<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"myImage\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"image.jpg\"</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">\"Obrazek\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n      <span class=\"hljs-keyword\">const</span> img = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">\"myImage\"</span>);\n      img.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">\"click\"</span>, <span class=\"hljs-function\">() =></span> {\n        img.<span class=\"hljs-property\">src</span> = <span class=\"hljs-string\">\"newImage.jpg\"</span>;\n      });\n    </span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-4\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-4\">>>></a>Zadanie 4</h3>\n<p>Utwórz stronę HTML z trzema akapitami. Użyj JavaScript, aby zmienić kolor tekstu wszystkich akapitów na niebieski.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"pl\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Kolor tekstu<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Akapit 1<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Akapit 2<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Akapit 3<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n      <span class=\"hljs-keyword\">const</span> paragraphs = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">querySelectorAll</span>(<span class=\"hljs-string\">\"p\"</span>);\n      paragraphs.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">p</span>) =></span> {\n        p.<span class=\"hljs-property\">style</span>.<span class=\"hljs-property\">color</span> = <span class=\"hljs-string\">\"blue\"</span>;\n      });\n    </span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n</details>\n<hr>\n<p>To tyle na temat podstaw DOM! Zachęcam do dalszego eksperymentowania, praktycznego wykorzystywania JavaScript do manipulacji DOM oraz zgłębiania bardziej zaawansowanych możliwości tej technologii.</p>","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/wprowadzenie-do-dom.md",{"_8":1120,"_10":1121,"_12":1122,"_22":1123,"_24":1124,"_34":1125,"_26":1167,"_28":1168,"_30":1169,"_32":1170,"_35":36},"Wprowadzenie do HTML","Co to jest HTML? HTML (HyperText Markup Language) to podstawowy język wykorzystywany do tworzenia i strukturyzowania stron internetowych. HTML używa elementów, które definiują różne części dokumentu, takie jak nagłówki, akapity, linki, obrazy, i wiele innych.",[683,848,1068,1069,298,104],[298,848],["D",1719705600000],{"_8":1126,"_110":1127},"Quiz: Podstawy HTML",[1128,1136,1144,1152,1159],{"_113":1129,"_115":1130,"_121":132,"_123":1135},"<p>Co oznacza skrót HTML?</p>",[1131,1132,1133,1134],"HyperTool Marked Language","Hyperlink Text Management Language","HyperText Markup Language","Home Tool Markup Language","HTML to HyperText Markup Language – język znaczników hipertekstowych.",{"_113":1137,"_115":1138,"_121":141,"_123":1143},"<p>Który znacznik służy do tworzenia akapitu?</p>",[1139,1140,1141,1142],"<li>","<h1>","<a>","<p>","<p> służy do oznaczania akapitów tekstu.",{"_113":1145,"_115":1146,"_121":141,"_123":1151},"<p>Jak poprawnie dodać obrazek do strony?</p>",[1147,1148,1149,1150],"<src img=\"obrazek.jpg\">","<picture href=\"obrazek.jpg\">","<image src=\"obrazek.jpg\">","<img src=\"obrazek.jpg\" alt=\"Opis\" />","Poprawny sposób to <img src=\"adres\" alt=\"opis\" />.",{"_113":1153,"_115":1154,"_121":141,"_123":1158},"<p>Który element tworzy nieuporządkowaną listę?</p>",[1155,1156,1139,1157],"<dl>","<ol>","<ul>","<ul> to lista nieuporządkowana, <ol> – uporządkowana.",{"_113":1160,"_115":1161,"_121":150,"_123":1166},"<p>Za co odpowiada atrybut 'action' w tagu <code>&#x3C;form></code>?</p>",[1162,1163,1164,1165],"Włącza walidację formularza","Określa adres, pod który zostaną przesłane dane formularza","Definiuje typ przesyłanych danych","Dodaje pole tekstowe","Atrybut action określa adres, pod który zostaną wysłane dane formularza.","3460490e-9ab4-4067-8f38-db7ebb05827a","wprowadzenie-do-html","<h2 id=\"spis-treści\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#spis-treści\">>></a>Spis treści</h2>\n<ol>\n<li><a href=\"#co-to-jest-html\">Co to jest HTML?</a></li>\n<li><a href=\"#podstawowa-struktura-dokumentu-html\">Podstawowa struktura dokumentu HTML</a>\n<ul>\n<li><a href=\"#wyjasnienie-struktury\">Wyjaśnienie struktury</a></li>\n</ul>\n</li>\n<li><a href=\"#podstawowe-elementy-html\">Podstawowe elementy HTML</a>\n<ul>\n<li><a href=\"#naglowki\">Nagłówki</a></li>\n<li><a href=\"#akapity\">Akapity</a></li>\n<li><a href=\"#linki\">Linki</a></li>\n<li><a href=\"#obrazy\">Obrazy</a></li>\n<li><a href=\"#listy\">Listy</a></li>\n</ul>\n</li>\n<li><a href=\"#formulare\">Formularze</a></li>\n<li><a href=\"#zadania-do-wykonania\">Zadania do wykonania</a>\n<ul>\n<li><a href=\"#zadanie-1\">Zadanie 1</a></li>\n<li><a href=\"#zadanie-2\">Zadanie 2</a></li>\n<li><a href=\"#zadanie-3\">Zadanie 3</a></li>\n<li><a href=\"#zadanie-4\">Zadanie 4</a></li>\n</ul>\n</li>\n</ol>\n<hr>\n<h2 id=\"co-to-jest-html\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#co-to-jest-html\">>></a>Co to jest HTML?</h2>\n<p><strong>HTML</strong> (HyperText Markup Language) to podstawowy język wykorzystywany do tworzenia i strukturyzowania stron internetowych. Pozwala oznaczać nagłówki, akapity, listy, obrazy, linki i wiele innych elementów. Dzięki niemu przeglądarka wie, jak wyświetlić i zinterpretować treść strony.</p>\n<hr>\n<h2 id=\"podstawowa-struktura-dokumentu-html\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podstawowa-struktura-dokumentu-html\">>></a>Podstawowa struktura dokumentu HTML</h2>\n<p>Każdy dokument HTML posiada określoną strukturę i kilka kluczowych sekcji:</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"pl\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Tytuł strony<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>Witaj, świecie!<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>To jest przykładowa strona HTML.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<h3 id=\"wyjaśnienie-struktury\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#wyjaśnienie-struktury\">>>></a>Wyjaśnienie struktury</h3>\n<ul>\n<li><code>&#x3C;!DOCTYPE html></code> – Deklaracja typu dokumentu, sygnalizuje przeglądarce użycie HTML5.</li>\n<li><code>&#x3C;html></code> – Korzeń dokumentu HTML, obejmuje całą zawartość strony.</li>\n<li><code>&#x3C;head></code> – Sekcja z informacjami o stronie (meta dane, tytuł, ustawienia kodowania).</li>\n<li><code>&#x3C;meta charset=\"UTF-8\"></code> – Określa kodowanie znaków na UTF-8 (umożliwia użycie polskich znaków).</li>\n<li><code>&#x3C;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"></code> – Umożliwia responsywność na urządzeniach mobilnych.</li>\n<li><code>&#x3C;title></code> – Tytuł strony wyświetlany na karcie przeglądarki.</li>\n<li><code>&#x3C;body></code> – Zawiera właściwą treść strony widoczną dla użytkownika.</li>\n</ul>\n<hr>\n<h2 id=\"podstawowe-elementy-html\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#podstawowe-elementy-html\">>></a>Podstawowe elementy HTML</h2>\n<h3 id=\"nagłówki\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#nagłówki\">>>></a>Nagłówki</h3>\n<p>Sześć poziomów nagłówków – od najważniejszego <code>&#x3C;h1></code>, do najmniej ważnego <code>&#x3C;h6></code>. Używaj ich do hierarchizacji treści.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>Najważniejszy nagłówek<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h2</span>></span>Drugi poziom nagłówka<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h2</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h3</span>></span>Trzeci poziom nagłówka<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h3</span>></span>\n</code></pre>\n<h3 id=\"akapity\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#akapity\">>>></a>Akapity</h3>\n<p>Akapity tekstu oznacza się elementem <code>&#x3C;p></code>:</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>To jest akapit tekstu.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n</code></pre>\n<h3 id=\"linki\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#linki\">>>></a>Linki</h3>\n<p>Tworzenie odnośników do innych stron lub zasobów za pomocą <code>&#x3C;a href=\"...\"></code>:</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"https://www.example.com\"</span>></span>Kliknij tutaj, aby przejść do Example<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span>\n</code></pre>\n<h3 id=\"obrazy\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#obrazy\">>>></a>Obrazy</h3>\n<p>Wstawianie obrazów za pomocą <code>&#x3C;img></code>, z atrybutami <code>src</code> (adres obrazka) i <code>alt</code> (opis alternatywny):</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"obrazek.jpg\"</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">\"Opis obrazka\"</span> /></span>\n</code></pre>\n<h3 id=\"listy\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#listy\">>>></a>Listy</h3>\n<p>Tworzenie list nieuporządkowanych <code>&#x3C;ul></code> i uporządkowanych <code>&#x3C;ol></code>, z elementami <code>&#x3C;li></code>:</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ul</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span>Element listy 1<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span>Element listy 2<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span>Element listy 3<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ul</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ol</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span>Element listy 1<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span>Element listy 2<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span>Element listy 3<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ol</span>></span>\n</code></pre>\n<hr>\n<h2 id=\"formularze\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#formularze\">>></a>Formularze</h2>\n<p>Formularze umożliwiają zbieranie danych od użytkowników. Składają się z różnych pól wejściowych (input), przycisków i etykiet.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">action</span>=<span class=\"hljs-string\">\"/submit-form\"</span> <span class=\"hljs-attr\">method</span>=<span class=\"hljs-string\">\"post\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"name\"</span>></span>Nazwa:<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">label</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"name\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"name\"</span> /></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"submit\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Wyślij\"</span> /></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">form</span>></span>\n</code></pre>\n<ul>\n<li><code>action</code> – adres, pod który zostaną wysłane dane formularza.</li>\n<li><code>method</code> – metoda wysyłki (zazwyczaj <code>post</code> lub <code>get</code>).</li>\n<li><code>&#x3C;label></code> – etykieta powiązana z polem formularza.</li>\n<li><code>&#x3C;input type=\"text\"></code> – pole tekstowe.</li>\n<li><code>&#x3C;input type=\"submit\"></code> – przycisk wysyłający dane.</li>\n</ul>\n<hr>\n<h2 id=\"zadania-do-wykonania\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadania-do-wykonania\">>></a>Zadania do wykonania</h2>\n<h3 id=\"zadanie-1\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-1\">>>></a>Zadanie 1</h3>\n<p>Utwórz stronę HTML, która zawiera:</p>\n<ul>\n<li>Nagłówek <code>&#x3C;h1></code> z tytułem \"Moja pierwsza strona\".</li>\n<li>Akapit z krótkim opisem.</li>\n<li>Link do dowolnej strony internetowej.</li>\n</ul>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"pl\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Moja pierwsza strona<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>Moja pierwsza strona<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>To jest krótki opis mojej pierwszej strony internetowej.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"https://www.example.com\"</span>></span>Kliknij tutaj, aby przejść do Example<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">a</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-2\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-2\">>>></a>Zadanie 2</h3>\n<p>Utwórz stronę HTML, która zawiera:</p>\n<ul>\n<li>Obrazek z atrybutem <code>src</code> wskazującym na dowolny obrazek z internetu.</li>\n<li>Alternatywny tekst opisujący obrazek.</li>\n</ul>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"pl\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Strona z obrazkiem<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"https://via.placeholder.com/150\"</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">\"Przykładowy obrazek\"</span> /></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-3\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-3\">>>></a>Zadanie 3</h3>\n<p>Utwórz stronę HTML, która zawiera:</p>\n<ul>\n<li>Listę nieuporządkowaną z trzema ulubionymi potrawami.</li>\n<li>Listę uporządkowaną z trzema krokami do ugotowania jednego z tych potraw.</li>\n</ul>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"pl\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Lista potraw<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>Moje ulubione potrawy<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ul</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span>Pizza<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span>Sushi<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span>Spaghetti<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ul</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h2</span>></span>Jak ugotować spaghetti<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h2</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ol</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span>Ugotuj makaron.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span>Przygotuj sos pomidorowy.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">li</span>></span>Wymieszaj makaron z sosem.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">li</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ol</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-4\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-4\">>>></a>Zadanie 4</h3>\n<p>Utwórz formularz HTML, który zawiera:</p>\n<ul>\n<li>Pole tekstowe do wprowadzenia imienia.</li>\n<li>Pole typu radio do wyboru płci.</li>\n<li>Pole typu checkbox do zaznaczenia zgody na przetwarzanie danych.</li>\n<li>Przycisk do wysłania formularza.</li>\n</ul>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-meta\">&#x3C;!DOCTYPE <span class=\"hljs-keyword\">html</span>></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"pl\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Formularz<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">action</span>=<span class=\"hljs-string\">\"/submit-form\"</span> <span class=\"hljs-attr\">method</span>=<span class=\"hljs-string\">\"post\"</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"name\"</span>></span>Imię:<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">label</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"name\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"name\"</span> /></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">br</span> /></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">br</span> /></span>\n\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">label</span>></span>Płeć:<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">label</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"radio\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"male\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"gender\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"male\"</span> /></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"male\"</span>></span>Mężczyzna<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">label</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"radio\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"female\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"gender\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"female\"</span> /></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"female\"</span>></span>Kobieta<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">label</span>></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">br</span> /></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">br</span> /></span>\n\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"checkbox\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"consent\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"consent\"</span> /></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"consent\"</span>></span>Zgadzam się na przetwarzanie danych osobowych&#x3C;/label\n      ><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">br</span> /></span><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">br</span> /></span>\n\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"submit\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Wyślij\"</span> /></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">form</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n</details>\n<hr>\n<p>To wszystko na temat podstaw HTML! Zachęcam do dalszego eksperymentowania, poznawania nowych elementów i tworzenia coraz bardziej złożonych oraz interaktywnych stron internetowych.</p>","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/wprowadzenie-do-html.md",{"_8":1172,"_10":1173,"_12":1174,"_22":1175,"_24":1176,"_34":1177,"_26":1218,"_28":1219,"_30":1220,"_32":1221,"_35":36},"Wprowadzenie do JavaScript","JavaScript jest językiem programowania, który jest powszechnie stosowany do tworzenia dynamicznych i interaktywnych stron internetowych. W tym kursie omówimy podstawy JavaScript, w tym zmienne, typy danych, operatory, struktury kontrolne, funkcje oraz obiekty.",[16,683,298,904,905,18,104],[298,16],["D",1719705600000],{"_8":1178,"_110":1179},"Quiz: Podstawy JavaScript",[1180,1188,1196,1204,1212],{"_113":1181,"_115":1182,"_121":132,"_123":1187},"<p>Które słowo kluczowe powinieneś użyć do zadeklarowania stałej wartości w JavaScript?</p>",[1183,1184,1185,1186],"var","static","const","let","Stałe deklarujemy za pomocą const.",{"_113":1189,"_115":1190,"_121":122,"_123":1195},"<p>Jakie typy danych NIE występują w JavaScript?</p>",[1191,1192,1193,1194],"Character","Boolean","Number","String","Typ 'Character' nie istnieje w JavaScript.",{"_113":1197,"_115":1198,"_121":132,"_123":1203},"<p>Jak wygląda przykładowa funkcja strzałkowa, która zwraca sumę dwóch liczb?</p>",[1199,1200,1201,1202],"function suma(a, b) { return a + b; }","sum(a, b) => a + b;","const suma = (a, b) => a + b;","let suma = add(a, b);","Funkcja strzałkowa: const suma = (a, b) => a + b;",{"_113":1205,"_115":1206,"_121":141,"_123":1211},"<p>Jak uzyskać długość tablicy w JavaScript?</p>",[1207,1208,1209,1210],"array.count","array.size()","length(array)","array.length","array.length zwraca długość tablicy.",{"_113":1213,"_115":1214,"_121":150,"_123":1217},"<p>Co wypisze poniższy kod?</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let</span> x = <span class=\"hljs-number\">10</span>;\n<span class=\"hljs-keyword\">if</span> (x > <span class=\"hljs-number\">5</span>) { <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'OK'</span>); } <span class=\"hljs-keyword\">else</span> { <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'NIE'</span>); }\n</code></pre>",[1215,1216,945,727],"NIE","OK","Ponieważ 10 > 5, warunek jest prawdziwy i wypisze 'OK'.","9ea5e740-d1c6-46a8-bce4-baa50b0a7c05","wprowadzenie-do-javascript","<h2 id=\"spis-treści\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#spis-treści\">>></a>Spis treści</h2>\n<ol>\n<li><a href=\"#czym-jest-javascript\">Czym jest JavaScript?</a></li>\n<li><a href=\"#zmienne\">Zmienne</a></li>\n<li><a href=\"#typy-danych\">Typy danych</a></li>\n<li><a href=\"#operatory\">Operatory</a></li>\n<li><a href=\"#struktury-kontrolne\">Struktury kontrolne</a>\n<ul>\n<li><a href=\"#instrukcja-if\">Instrukcja if</a></li>\n<li><a href=\"#petla-for\">Pętla for</a></li>\n<li><a href=\"#petla-while\">Pętla while</a></li>\n</ul>\n</li>\n<li><a href=\"#funkcje\">Funkcje</a>\n<ul>\n<li><a href=\"#deklaracja-funkcji\">Deklaracja funkcji</a></li>\n<li><a href=\"#funkcje-strzalkowe\">Funkcje strzałkowe</a></li>\n</ul>\n</li>\n<li><a href=\"#obiekty\">Obiekty</a></li>\n<li><a href=\"#tablice\">Tablice</a></li>\n<li><a href=\"#zadania-do-wykonania\">Zadania do wykonania</a>\n<ul>\n<li><a href=\"#zadanie-1\">Zadanie 1</a></li>\n<li><a href=\"#zadanie-2\">Zadanie 2</a></li>\n<li><a href=\"#zadanie-3\">Zadanie 3</a></li>\n<li><a href=\"#zadanie-4\">Zadanie 4</a></li>\n</ul>\n</li>\n</ol>\n<hr>\n<h2 id=\"czym-jest-javascript\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#czym-jest-javascript\">>></a>Czym jest JavaScript?</h2>\n<p><strong>JavaScript</strong> to język programowania, który umożliwia tworzenie dynamicznych i interaktywnych stron internetowych. Jest wykorzystywany zarówno po stronie klienta (w przeglądarce), jak i na serwerze (np. z użyciem Node.js). JavaScript pozwala na reagowanie na akcje użytkownika, manipulowanie elementami HTML, obsługę zdarzeń, walidację formularzy i wiele innych operacji.</p>\n<hr>\n<h2 id=\"zmienne\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zmienne\">>></a>Zmienne</h2>\n<p>Zmienne służą do przechowywania danych w programie. W JavaScript zmienne można deklarować za pomocą <code>var</code>, <code>let</code> lub <code>const</code>:</p>\n<ul>\n<li><code>var</code> – starsza forma, o zasięgu funkcyjnym.</li>\n<li><code>let</code> – zalecana do zmiennych, których wartość się zmienia (zasięg blokowy).</li>\n<li><code>const</code> – do stałych, których wartość nie ulega zmianie.</li>\n</ul>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">var</span> x = <span class=\"hljs-number\">5</span>; <span class=\"hljs-comment\">// Zmienna var</span>\n<span class=\"hljs-keyword\">let</span> y = <span class=\"hljs-number\">10</span>; <span class=\"hljs-comment\">// Zmienna let</span>\n<span class=\"hljs-keyword\">const</span> z = <span class=\"hljs-number\">15</span>; <span class=\"hljs-comment\">// Stała const</span>\n</code></pre>\n<hr>\n<h2 id=\"typy-danych\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#typy-danych\">>></a>Typy danych</h2>\n<p>JavaScript obsługuje różne typy danych:</p>\n<ul>\n<li><strong>Number</strong> (liczby): całkowite i zmiennoprzecinkowe</li>\n<li><strong>String</strong> (łańcuchy znaków)</li>\n<li><strong>Boolean</strong> (wartości logiczne: true/false)</li>\n<li><strong>Object</strong> (obiekty)</li>\n<li><strong>Array</strong> (tablice)</li>\n<li><strong>Undefined</strong>, <strong>Null</strong></li>\n</ul>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let</span> liczba = <span class=\"hljs-number\">42</span>; <span class=\"hljs-comment\">// Number</span>\n<span class=\"hljs-keyword\">let</span> tekst = <span class=\"hljs-string\">\"Hello, World!\"</span>; <span class=\"hljs-comment\">// String</span>\n<span class=\"hljs-keyword\">let</span> prawda = <span class=\"hljs-literal\">true</span>; <span class=\"hljs-comment\">// Boolean</span>\n<span class=\"hljs-keyword\">let</span> obiekt = { <span class=\"hljs-attr\">imie</span>: <span class=\"hljs-string\">\"Jan\"</span>, <span class=\"hljs-attr\">wiek</span>: <span class=\"hljs-number\">30</span> }; <span class=\"hljs-comment\">// Object</span>\n<span class=\"hljs-keyword\">let</span> tablica = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>]; <span class=\"hljs-comment\">// Array</span>\n</code></pre>\n<hr>\n<h2 id=\"operatory\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#operatory\">>></a>Operatory</h2>\n<p>Operatory służą do wykonywania działań na danych.</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-comment\">// Arytmetyczne</span>\n<span class=\"hljs-keyword\">let</span> suma = <span class=\"hljs-number\">10</span> + <span class=\"hljs-number\">5</span>;\n<span class=\"hljs-keyword\">let</span> roznica = <span class=\"hljs-number\">10</span> - <span class=\"hljs-number\">5</span>;\n<span class=\"hljs-keyword\">let</span> iloczyn = <span class=\"hljs-number\">10</span> * <span class=\"hljs-number\">5</span>;\n<span class=\"hljs-keyword\">let</span> iloraz = <span class=\"hljs-number\">10</span> / <span class=\"hljs-number\">5</span>;\n\n<span class=\"hljs-comment\">// Porównania</span>\n<span class=\"hljs-keyword\">let</span> rowne = <span class=\"hljs-number\">10</span> == <span class=\"hljs-number\">10</span>; <span class=\"hljs-comment\">// Porównanie wartości</span>\n<span class=\"hljs-keyword\">let</span> identyczne = <span class=\"hljs-number\">10</span> === <span class=\"hljs-number\">10</span>; <span class=\"hljs-comment\">// Porównanie wartości i typu</span>\n<span class=\"hljs-keyword\">let</span> nierowne = <span class=\"hljs-number\">10</span> != <span class=\"hljs-number\">5</span>; <span class=\"hljs-comment\">// Nierówność</span>\n\n<span class=\"hljs-comment\">// Logiczne</span>\n<span class=\"hljs-keyword\">let</span> iOperator = <span class=\"hljs-literal\">true</span> &#x26;&#x26; <span class=\"hljs-literal\">false</span>; <span class=\"hljs-comment\">// AND</span>\n<span class=\"hljs-keyword\">let</span> lubOperator = <span class=\"hljs-literal\">true</span> || <span class=\"hljs-literal\">false</span>; <span class=\"hljs-comment\">// OR</span>\n<span class=\"hljs-keyword\">let</span> nieOperator = !<span class=\"hljs-literal\">true</span>; <span class=\"hljs-comment\">// NOT</span>\n\n<span class=\"hljs-comment\">// Przypisania</span>\n<span class=\"hljs-keyword\">let</span> a = <span class=\"hljs-number\">10</span>;\na += <span class=\"hljs-number\">5</span>; <span class=\"hljs-comment\">// Dodanie i przypisanie</span>\na -= <span class=\"hljs-number\">5</span>; <span class=\"hljs-comment\">// Odejmowanie i przypisanie</span>\n</code></pre>\n<hr>\n<h2 id=\"struktury-kontrolne\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#struktury-kontrolne\">>></a>Struktury kontrolne</h2>\n<h3 id=\"instrukcja-if\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#instrukcja-if\">>>></a>Instrukcja if</h3>\n<p>Pozwala wykonywać kod warunkowo.</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let</span> wiek = <span class=\"hljs-number\">18</span>;\n\n<span class=\"hljs-keyword\">if</span> (wiek >= <span class=\"hljs-number\">18</span>) {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">\"Jesteś pełnoletni\"</span>);\n} <span class=\"hljs-keyword\">else</span> {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">\"Jesteś niepełnoletni\"</span>);\n}\n</code></pre>\n<h3 id=\"pętla-for\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#pętla-for\">>>></a>Pętla for</h3>\n<p>Wielokrotne wykonywanie fragmentu kodu.</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &#x3C; <span class=\"hljs-number\">5</span>; i++) {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(i);\n}\n</code></pre>\n<h3 id=\"pętla-while\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#pętla-while\">>>></a>Pętla while</h3>\n<p>Wykonuje kod dopóki warunek jest prawdziwy.</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>;\n\n<span class=\"hljs-keyword\">while</span> (i &#x3C; <span class=\"hljs-number\">5</span>) {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(i);\n  i++;\n}\n</code></pre>\n<hr>\n<h2 id=\"funkcje\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#funkcje\">>></a>Funkcje</h2>\n<p>Funkcje umożliwiają grupowanie kodu do wielokrotnego użycia.</p>\n<h3 id=\"deklaracja-funkcji\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#deklaracja-funkcji\">>>></a>Deklaracja funkcji</h3>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">dodaj</span>(<span class=\"hljs-params\">a, b</span>) {\n  <span class=\"hljs-keyword\">return</span> a + b;\n}\n\n<span class=\"hljs-keyword\">let</span> wynik = <span class=\"hljs-title function_\">dodaj</span>(<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">10</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(wynik); <span class=\"hljs-comment\">// 15</span>\n</code></pre>\n<h3 id=\"funkcje-strzałkowe\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#funkcje-strzałkowe\">>>></a>Funkcje strzałkowe</h3>\n<p>Skrócony zapis funkcji.</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">dodaj</span> = (<span class=\"hljs-params\">a, b</span>) => a + b;\n<span class=\"hljs-keyword\">let</span> wynik = <span class=\"hljs-title function_\">dodaj</span>(<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">10</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(wynik); <span class=\"hljs-comment\">// 15</span>\n</code></pre>\n<hr>\n<h2 id=\"obiekty\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#obiekty\">>></a>Obiekty</h2>\n<p>Obiekty służą do grupowania powiązanych danych i funkcji.</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let</span> osoba = {\n  <span class=\"hljs-attr\">imie</span>: <span class=\"hljs-string\">\"Jan\"</span>,\n  <span class=\"hljs-attr\">wiek</span>: <span class=\"hljs-number\">30</span>,\n  <span class=\"hljs-attr\">przedstawSie</span>: <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`Cześć, mam na imię <span class=\"hljs-subst\">${<span class=\"hljs-variable language_\">this</span>.imie}</span> i mam <span class=\"hljs-subst\">${<span class=\"hljs-variable language_\">this</span>.wiek}</span> lat.`</span>;\n  },\n};\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(osoba.<span class=\"hljs-title function_\">przedstawSie</span>()); <span class=\"hljs-comment\">// Cześć, mam na imię Jan i mam 30 lat.</span>\n</code></pre>\n<hr>\n<h2 id=\"tablice\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#tablice\">>></a>Tablice</h2>\n<p>Tablice przechowują listę wartości.</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let</span> liczby = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>];\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(liczby[<span class=\"hljs-number\">0</span>]); <span class=\"hljs-comment\">// 1</span>\n\nliczby.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-number\">6</span>); <span class=\"hljs-comment\">// Dodanie elementu na końcu</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(liczby); <span class=\"hljs-comment\">// [1, 2, 3, 4, 5, 6]</span>\n\nliczby.<span class=\"hljs-title function_\">pop</span>(); <span class=\"hljs-comment\">// Usunięcie ostatniego elementu</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(liczby); <span class=\"hljs-comment\">// [1, 2, 3, 4, 5]</span>\n</code></pre>\n<hr>\n<h2 id=\"zadania-do-wykonania\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadania-do-wykonania\">>></a>Zadania do wykonania</h2>\n<h3 id=\"zadanie-1\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-1\">>>></a>Zadanie 1</h3>\n<p>Napisz funkcję, która przyjmuje dwie liczby jako argumenty i zwraca ich iloczyn.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">iloczyn</span>(<span class=\"hljs-params\">a, b</span>) {\n  <span class=\"hljs-keyword\">return</span> a * b;\n}\n\n<span class=\"hljs-keyword\">let</span> wynik = <span class=\"hljs-title function_\">iloczyn</span>(<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">10</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(wynik); <span class=\"hljs-comment\">// 50</span>\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-2\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-2\">>>></a>Zadanie 2</h3>\n<p>Utwórz obiekt reprezentujący książkę z atrybutami <code>tytul</code>, <code>autor</code> i <code>rok</code>. Dodaj metodę, która zwraca opis książki.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let</span> ksiazka = {\n  <span class=\"hljs-attr\">tytul</span>: <span class=\"hljs-string\">\"W pustyni i w puszczy\"</span>,\n  <span class=\"hljs-attr\">autor</span>: <span class=\"hljs-string\">\"Henryk Sienkiewicz\"</span>,\n  <span class=\"hljs-attr\">rok</span>: <span class=\"hljs-number\">1911</span>,\n  <span class=\"hljs-attr\">opis</span>: <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`<span class=\"hljs-subst\">${<span class=\"hljs-variable language_\">this</span>.tytul}</span> to książka napisana przez <span class=\"hljs-subst\">${<span class=\"hljs-variable language_\">this</span>.autor}</span> w roku <span class=\"hljs-subst\">${<span class=\"hljs-variable language_\">this</span>.rok}</span>.`</span>;\n  },\n};\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(ksiazka.<span class=\"hljs-title function_\">opis</span>()); <span class=\"hljs-comment\">// W pustyni i w puszczy to książka napisana przez Henryk Sienkiewicz w roku 1911.</span>\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-3\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-3\">>>></a>Zadanie 3</h3>\n<p>Napisz funkcję, która przyjmuje tablicę liczb i zwraca największą liczbę z tej tablicy.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">znajdzNajwieksza</span>(<span class=\"hljs-params\">tablica</span>) {\n  <span class=\"hljs-keyword\">let</span> najwieksza = tablica[<span class=\"hljs-number\">0</span>];\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">1</span>; i &#x3C; tablica.<span class=\"hljs-property\">length</span>; i++) {\n    <span class=\"hljs-keyword\">if</span> (tablica[i] > najwieksza) {\n      najwieksza = tablica[i];\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> najwieksza;\n}\n\n<span class=\"hljs-keyword\">let</span> liczby = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>];\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title function_\">znajdzNajwieksza</span>(liczby)); <span class=\"hljs-comment\">// 5</span>\n</code></pre>\n</details>\n<hr>\n<h3 id=\"zadanie-4\" class=\"scroll-mt-20 lg:scroll-mt-10\"><a class=\"mr-2 no-underline hover:underline focus-visible:underline select-none\" href=\"#zadanie-4\">>>></a>Zadanie 4</h3>\n<p>Utwórz tablicę z kilkoma imionami. Następnie za pomocą pętli <code>for</code> wyświetl każde imię w konsoli.</p>\n<details>\n  <summary>\n    <span>Pokaż rozwiązanie</span>\n  </summary>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let</span> imiona = [<span class=\"hljs-string\">\"Jan\"</span>, <span class=\"hljs-string\">\"Anna\"</span>, <span class=\"hljs-string\">\"Krzysztof\"</span>, <span class=\"hljs-string\">\"Maria\"</span>];\n\n<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &#x3C; imiona.<span class=\"hljs-property\">length</span>; i++) {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(imiona[i]);\n}\n<span class=\"hljs-comment\">// Jan</span>\n<span class=\"hljs-comment\">// Anna</span>\n<span class=\"hljs-comment\">// Krzysztof</span>\n<span class=\"hljs-comment\">// Maria</span>\n</code></pre>\n</details>\n<hr>\n<p>To wszystko na temat podstaw JavaScript! Zachęcam do dalszego eksperymentowania, tworzenia własnych funkcji, obiektów i aplikacji oraz zgłębiania bardziej zaawansowanych tematów języka JavaScript.</p>","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/courses/wprowadzenie-do-javascript.md","projects",[1224,1244,1255,1269,1281],{"_8":1225,"_10":1226,"_12":1227,"_1234":1235,"_24":1236,"_1237":1238,"_26":1239,"_28":1240,"_30":1241,"_32":1242,"_34":-7,"_35":1243},"👥 Team Support","Aplikacja usprawniająca pracę zespołu. Pozwala na zarządzanie zespołami i użytkownikami, monitorowanie zadaniami i przypisywanie ich do konkretnych osób bądź podzespołów.",[17,1228,1229,41,1230,1231,1232,1233],"e-commerce","projekt","react-router","auth","crud","portfolio","technologies",[17,41,1230],["D",1742601600000],"status","IN_PROGRESS","ce5da035-ce40-4e7b-a103-ccd62c54283f","team-support","","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/projects/team-support.md","0 minut",{"_8":1245,"_10":1246,"_12":1247,"_1234":1250,"_24":1251,"_1237":1238,"_26":1252,"_28":1253,"_30":1241,"_32":1254,"_34":-7,"_35":1243},"🩺 E-Przychodnia","Aplikacja typu e-commerce mająca na celu ułatwienie korzystania z dobrodziejstw służby zdrowia. All-in-one, znajdziesz tutaj możliwość umawiania wizyt, wyszukiwania najbliższych placówek zdrowia, podgląd skierowań i recept i wiele innych opcji.",[17,1228,1229,1248,1249,1232,1233],"angular","nestjs",[17,1248,1249],["D",1740787200000],"ea87e4ce-af4f-4d74-9129-8381af33ebb2","e-przychodnia","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/projects/e-przychodnia.md",{"_8":1256,"_10":1257,"_12":1258,"_1234":1263,"_24":1264,"_1237":1265,"_26":1266,"_28":1267,"_30":1241,"_32":1268,"_34":-7,"_35":1243},"🔑 Password Generator","Aplikacja do generowania hasła, wedle podanych wytycznych.",[17,1259,1260,1261,1262,1233],"aplikacja","hasło","password","generowanie",[17],["D",1740787200000],"COMPLETED","70cf64bd-eabe-40c1-8a51-7ef0dfcbc046","password-generator","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/projects/password-generator.md",{"_8":1270,"_10":1271,"_12":1272,"_1234":1277,"_24":1278,"_1237":1265,"_26":1279,"_28":1274,"_30":1241,"_32":1280,"_34":-7,"_35":1243},"🪨 Rock-Paper-Scissors","Prosta gra każdemu dobrze znana, czyli papier-kamień-nożyce. Gra wykonana za pomocą React Native",[17,1273,1274,1275,1276,1233],"gra","rock-paper-scissors","mobile","react-native",[17,1276],["D",1740787200000],"fe34cbbc-1ae3-4609-9d53-91026a70ed28","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/projects/rock-paper-scissors.md",{"_8":1282,"_10":1283,"_12":1284,"_1234":1286,"_24":1287,"_1237":1265,"_26":1288,"_28":1289,"_30":1241,"_32":1290,"_34":-7,"_35":1243},"Strona, na której się znajdujesz 😉","Strona, gdzie znajdziesz blog z artykułami, głównie o tematyce frontendowej, sekcję z kursami, dzięki którym nabędziesz wiedzę i doświadczenie z frontu, jak i portfolio, które przywita Cię moimi ostatnimi projektami.",[17,41,1230,21,1233,1285,104,1233],"kursy",[17,41,1230],["D",1712880000000],"fe3a674a-2bc1-4fbf-aedd-d8dd5fa626be","jakubszpil.github.io","https://github.com/jakubszpil/jakubszpil.github.io/edit/main/app/content/projects/jakubszpil.github.io.md"]
